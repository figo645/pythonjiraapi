{
  "openapi": "3.0.0",
  "info": {
    "title": "DevInsight OpenAPI",
    "description": "\n## 安全规范\n\n调用 API 必须遵循以下规则：\n\n1. 提交方式: 采用 POST 方法提交\n2. 数据格式: 提交和返回数据都为 JSON 格式\n3. 签名要求: 所有请求均需要校验签名\n4. 签名算法: MD5,SHA256\n\n## 签名算法\n\n### 签名生成的通用步骤如下：\n\n1. 设所有发送或者接收到的数据为集合 M，将集合 M 内的参数按照参数名 ASCII 码从小到大排序（字典序），使用 URL 键值对的格式\n   （即 key1=value1&key2=value2…）拼接成字符串 stringA。\n\n```\n特别注意以下重要规则：\n◆ 参数名 ASCII 码从小到大排序（字典序）；\n◆ 参数中 appid 和 nonce_str 随机码为必输\n◆ 参数中如有数组或对象属性，用 JSON.stringify()转换字符后参与拼接\n◆ JSON 化的数组和对象需要删除额外的换行和空格，如不能是 {\"a\": \"test\", \"b\": \"test\"}，需要是 {\"a\":\"test\",\"b\":\"test\"}\n```\n\n2. 在 stringA 最后拼接上 key=appsecret 得到 stringSignTemp 字符串，并对 stringSignTemp 进行 MD5 运算，再将得到的\n   字符串所有字符转换为大写，得到 sign 值 signValue。\n\n### 举例：\n\n假设传送的参数如下：\n\n```\nappid： wxd930ea5d5a258f4f\nmch_id： 10000100\ndevice_info： 1000\nbody： { a: \"test\" }\nnonce_str： ibuaiVcKdpRxkhJA\n```\n\n第一步：对参数按照 key=value 的格式，并按照参数名 ASCII 字典序排序如下：\n\n  stringA=\"appid=wxd930ea5d5a258f4f&body={\"a\":\"test\"}&device_info=1000&mch_id=10000100&nonce_str=ibuaiVcKdpRxkhJA\";\n\n第二步：拼接 API 密钥：\n\n```\nstringSignTemp=stringA+\"&key=192006250b4c09247ec02edce69f6a2d\"\nsign=MD5(stringSignTemp).toUpperCase()=\"9A0A8659F005D6984697E2CA0A9CF3B7\" //注：MD5签名方式\n```\n\nHASH算法的选择可以通过OPENAPI_SIGN_HASH环境变量来设置，默认为MD5，可选值为MD5, SHA256。\n\n最终得到最终发送的数据：\n\n```\nappid： wxd930ea5d5a258f4f\nmch_id： 10000100\ndevice_info： 1000\nbody： { a: \"test\" }\nnonce_str： ibuaiVcKdpRxkhJA\nsign: 9A0A8659F005D6984697E2CA0A9CF3B7\n```\n\n\n## 指标说明\n\n指标分为效率类，质量类，JIRA类，其他类。\n\n### Codebase Growth\n\n代码增速，最近一个月开发价值增长的斜率，项目增速的指标，此指标可用于建立团队开发速度的基准。\nselectColumn传递 velocity ，即可获得最近一个月代码增速相对于整个历史的水平。\n注意，UI界面上展示的是归一化以后的velocity，Openapi中给出的是原始值。\n更多说明请联系我司客户成功经理，获取更多文档。\n\n\n## 权限说明：\n\n1. 授权一个项目组后，即可访问该项目组下所有项目组和项目\n2. 授权给一个团队时，也相当于同时授权给该团队的所有父团队\n3. openapi 查询时，只会返回直接授权的权限，不会返回继承的权限\n\n",
    "version": "3.150.1 - eb4d3fb8"
  },
  "servers": [
    {
      "url": "http://metrics.digitalvolvo.com/openapi/",
      "description": "DevInsight demo server"
    }
  ],
  "paths": {
    "/account/query-efficiency-metric": {
      "post": {
        "summary": "以Account聚合获取效率指标",
        "description": "以Account聚合获取效率指标",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperEfficiencyMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "AccountId列表"
                      },
                      "options": {
                        "type": "object",
                        "$ref": "#/components/schemas/AccountEfficiencyMetricOptions"
                      }
                    },
                    "type": "object",
                    "required": [
                      "accountIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/query-quality-metric": {
      "post": {
        "summary": "以Account聚合获取质量指标",
        "description": "以Account聚合获取质量指标",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperQualityMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "AccountId列表"
                      },
                      "options": {
                        "type": "object",
                        "$ref": "#/components/schemas/QualityMetricColumns"
                      }
                    },
                    "type": "object",
                    "required": [
                      "accountIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/list": {
      "post": {
        "summary": "查询账户列表",
        "description": "查询账户列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FindAccountResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/account/query": {
      "post": {
        "summary": "查询账户信息",
        "description": "查询账户信息， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/FindAccountResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/add": {
      "post": {
        "summary": "添加账户",
        "description": "添加账户， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/NewAccount"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "description": "姓名"
                      },
                      "email": {
                        "format": "email",
                        "type": "string",
                        "maxLength": 255,
                        "description": "用户主邮箱地址"
                      },
                      "jobNumber": {
                        "type": "string",
                        "description": "工号"
                      },
                      "title": {
                        "type": "string",
                        "description": "职位"
                      },
                      "salary": {
                        "type": "number",
                        "description": "薪资"
                      },
                      "rank": {
                        "type": "string",
                        "description": "职级"
                      },
                      "promotionDate": {
                        "type": "integer",
                        "description": "晋升日期, ms时间戳"
                      },
                      "teamIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "所属团队ID列表"
                      },
                      "roleIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "用户角色ID列表"
                      },
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "email"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update": {
      "post": {
        "summary": "更新账户",
        "description": "更新账户， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      },
                      "name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "姓名"
                      },
                      "emails": {
                        "items": {
                          "type": "string",
                          "maxLength": 255
                        },
                        "type": "array",
                        "description": "用户邮箱地址列表(替换掉用户的副邮箱设置)"
                      },
                      "tags": {
                        "items": {
                          "$ref": "#/components/schemas/AccountTag"
                        },
                        "type": "array",
                        "description": "自定义标签"
                      },
                      "jobNumber": {
                        "type": "string",
                        "description": "工号"
                      },
                      "title": {
                        "type": "string",
                        "description": "职位"
                      },
                      "salary": {
                        "type": "number",
                        "description": "薪资"
                      },
                      "rank": {
                        "type": "string",
                        "description": "职级"
                      },
                      "promotionDate": {
                        "type": "integer",
                        "description": "晋升日期, ms时间戳"
                      },
                      "teamIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "所属团队ID列表"
                      },
                      "roleIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "用户角色ID列表"
                      },
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/delete": {
      "post": {
        "summary": "删除账户",
        "description": "删除账户， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update-status": {
      "post": {
        "summary": "更新账户状态（启用/禁用，登陆/非登陆）",
        "description": "更新账户状态（启用/禁用，登陆/非登陆）， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      },
                      "enable": {
                        "type": "boolean",
                        "description": "用户账户是否启用"
                      },
                      "allowLogin": {
                        "type": "boolean",
                        "description": "用户账户是否可登录"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/add-repos": {
      "post": {
        "summary": "添加账户代码仓库权限",
        "description": "添加账户代码仓库权限， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountReposResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码仓库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/remove-repos": {
      "post": {
        "summary": "删除账户代码仓库权限",
        "description": "删除账户代码仓库权限， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountReposResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码仓库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update-repos": {
      "post": {
        "summary": "更新（覆盖）账户的代码仓库权限",
        "description": "更新（覆盖）账户的代码仓库权限， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountReposResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "AccountId"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码仓库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update-teams": {
      "post": {
        "summary": "更新（覆盖）账户的团队权限",
        "description": "更新（覆盖）账户的团队权限， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountTeamsResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "账户ID"
                      },
                      "teamIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "团队ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "teamIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update-projects": {
      "post": {
        "summary": "更新（覆盖）账户的项目权限",
        "description": "更新（覆盖）账户的项目权限， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateAccountProjectsResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "账户ID"
                      },
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "projectIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/reset-password": {
      "post": {
        "summary": "将用户密码重置为随机字符串并返回",
        "description": "将用户密码重置为随机字符串并返回， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResetPasswordResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "账户ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/update-email": {
      "post": {
        "summary": "更新用户主邮箱",
        "description": "更新用户主邮箱， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserIDResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "账户ID"
                      },
                      "email": {
                        "maxLength": 255,
                        "type": "string",
                        "format": "email",
                        "description": "Email"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "email"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/batch-query-team-history": {
      "post": {
        "summary": "获取用户团队信息历史",
        "description": "获取用户团队信息历史， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> group，system-config -> squad]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountTeamHistory"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "accountEmails": {
                        "items": {
                          "format": "email",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "账户邮箱"
                      }
                    },
                    "type": "object",
                    "required": [
                      "accountEmails"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/batch-reset-team": {
      "post": {
        "summary": "批量添加用户到团队",
        "description": "批量添加用户到团队， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> squad]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AccountTeamHistory"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "items": {
                        "items": {
                          "$ref": "#/components/schemas/ResetTeamRequest"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "required": [
                      "items"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/exclude-commit-author": {
      "post": {
        "summary": "将提交作者emails加入黑名单",
        "description": "将提交作者emails加入黑名单， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "emails": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "贡献者邮箱"
                      }
                    },
                    "type": "object",
                    "required": [
                      "emails"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/account/include-commit-author": {
      "post": {
        "summary": "将提交作者emails移出黑名单",
        "description": "将提交作者emails移出黑名单， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "emails": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "贡献者邮箱"
                      }
                    },
                    "type": "object",
                    "required": [
                      "emails"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/add": {
      "post": {
        "summary": "创建代码库",
        "description": "创建代码库， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> repositories，system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/RepoIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "gitUrl": {
                        "minLength": 1,
                        "type": "string",
                        "maxLength": 255,
                        "description": "代码库Git地址"
                      },
                      "privateKey": {
                        "type": "string",
                        "description": "访问私有Git仓库的私钥，PEM格式字符串"
                      },
                      "username": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "访问私有Git仓库的用户名"
                      },
                      "password": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "访问私有Git仓库的密码"
                      },
                      "defaultRef": {
                        "type": "string",
                        "description": "默认分支"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "代码库所属项目ID，空值表示在根项目下创建"
                      }
                    },
                    "type": "object",
                    "required": [
                      "gitUrl"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/delete": {
      "post": {
        "summary": "删除代码库",
        "description": "删除代码库， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> repositories，system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/RepoIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-efficiency-metric": {
      "post": {
        "summary": "以代码库聚合获取效率metric",
        "description": "以代码库聚合获取效率metric",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoEfficiencyMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "options": {
                        "$ref": "#/components/schemas/EfficiencyParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/branch/query-efficiency-metric": {
      "post": {
        "summary": "按照commit hash范围获取效率metric",
        "description": "按照commit hash范围获取效率metric",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoHashMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "includePath": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "包含的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持devValue和devEquivalent"
                      },
                      "excludePath": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "排除的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持devValue和devEquivalent"
                      },
                      "options": {
                        "$ref": "#/components/schemas/BranchEfficiencyParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/hash/query-efficiency-metric": {
      "post": {
        "summary": "通过git rev-list筛选commit-hash列表，获取效率metric",
        "description": "通过git rev-list筛选commit-hash列表，获取效率metric",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoHashMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoRevMap": {
                        "additionalProperties": {
                          "$ref": "#/components/schemas/ProjectHashParam"
                        },
                        "description": "选择代码库的hash的一个Map。其中Key为RepoID，Value中的ProjectHashParam对象定义了一组应用于`git rev-list`命令的参数，来指定一组commit hash",
                        "type": "object",
                        "example": {
                          "16556370-1743-4dcf-aa5f-300854fc5113": {
                            "revList": [
                              "master",
                              "^develop",
                              "cf25a4a88699ea3a0422b175a38629cd3fe01adc..2ad3b167cb298941ce7c5d160e350609558905c4"
                            ],
                            "maxCount": 100
                          }
                        }
                      },
                      "repoFolderFilter": {
                        "additionalProperties": {
                          "$ref": "#/components/schemas/ProjectFolderFilter"
                        },
                        "description": "设置代码库的目录过滤规则。其中Key为RepoID，Value中指定统计结果包含或排除的目录列表",
                        "type": "object",
                        "example": {
                          "16556370-1743-4dcf-aa5f-300854fc5113": {
                            "includePath": [
                              "scripts/",
                              "app/"
                            ],
                            "excludePath": [
                              "test/"
                            ]
                          }
                        }
                      },
                      "options": {
                        "$ref": "#/components/schemas/HashEfficiencyParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoRevMap",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-quality-metric": {
      "post": {
        "summary": "以代码库聚合获取质量metric",
        "description": "以代码库聚合获取质量metric",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoQualityMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "options": {
                        "$ref": "#/components/schemas/QualityMetricColumns",
                        "type": "object"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/QualityDateQuery",
                        "description": "查询时间范围"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-quality-metrics-graph-for-developers": {
      "post": {
        "summary": "查询贡献者的质量报表",
        "description": "查询贡献者的质量报表",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualityMetricsForDevelopersResp"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "recentPeriod": {
                        "$ref": "#/components/schemas/FilterPeriod"
                      },
                      "timeRange": {
                        "items": {},
                        "minItems": 1,
                        "type": "array",
                        "maxItems": 2,
                        "description": ""
                      },
                      "records": {
                        "items": {
                          "$ref": "#/components/schemas/DeveloperQualityMetricFilterValue"
                        },
                        "type": "array"
                      },
                      "limit": {
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "required": [
                      "records"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-quality-metrics-graph": {
      "post": {
        "summary": "查询项目或代码库的质量报表",
        "description": "查询项目或代码库的质量报表",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/QualityMetricsResp"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "recentPeriod": {
                        "$ref": "#/components/schemas/FilterPeriod"
                      },
                      "timeRange": {
                        "items": {},
                        "minItems": 1,
                        "type": "array",
                        "maxItems": 2,
                        "description": ""
                      },
                      "records": {
                        "items": {
                          "$ref": "#/components/schemas/QualityMetricFilterValue"
                        },
                        "type": "array"
                      },
                      "limit": {
                        "type": "integer"
                      }
                    },
                    "type": "object",
                    "required": [
                      "records"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query": {
      "post": {
        "summary": "查询已经添加的代码库",
        "description": "查询已经添加的代码库， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> repositories，system-config -> analysis，toolbox -> large-screen]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/GetRepoResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "gitUrl": {
                        "type": "string",
                        "description": "代码库Git地址"
                      },
                      "page": {
                        "type": "integer",
                        "description": "页数, 默认为1"
                      },
                      "pageSize": {
                        "maximum": 100000,
                        "type": "integer",
                        "description": "每页记录书, 默认为最大值100,000"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/list": {
      "post": {
        "summary": "查询代码库列表",
        "description": "查询代码库列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> repositories，system-config -> analysis，toolbox -> large-screen]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/repo/commit/list": {
      "post": {
        "summary": "查询commit列表接口",
        "description": "查询commit列表接口",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoCommitListItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "page": {
                        "type": "integer",
                        "description": ""
                      },
                      "pagesize": {
                        "maximum": 100000,
                        "type": "integer",
                        "description": "废弃，请使用pageSize代替"
                      },
                      "pageSize": {
                        "maximum": 100000,
                        "type": "integer",
                        "description": "每页记录数（默认为最大值100000）"
                      },
                      "authorTimestampFrom": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建开始日期，可选，包含"
                      },
                      "authorTimestampTo": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建结束日期，可选，不包含"
                      },
                      "commitTimestampFrom": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交开始日期，可选，包含"
                      },
                      "commitTimestampTo": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交结束日期，可选，不包含"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/list-by-commit-label": {
      "post": {
        "summary": "根据标签组查询commit指标",
        "description": "如果一个commit有2个label_value，返回结果里会有两条commit记录，label_value不同。",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/RepoCommitListByCommitLabelResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表，与项目ID二选一，都填写默认使用repoIds"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "代码库所属项目ID，与代码库ID列表二选一，都填写默认使用repoIds"
                      },
                      "groupNames": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "标签组名"
                      },
                      "labelValues": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "标签"
                      },
                      "commitStartTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Commit起始时间，例如：2022-04-01T07:35:54.413Z"
                      },
                      "commitEndTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Commit截止时间，例如：2022-04-01T07:35:54.413Z"
                      },
                      "page": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "minimum": 1,
                        "description": "每页大小(最大值1000)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/list-by-hash": {
      "post": {
        "summary": "根据hash查询commit列表接口",
        "description": "根据hash查询commit列表接口",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoCommitListByHashItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "queries": {
                        "items": {
                          "$ref": "#/components/schemas/RepoIdHash"
                        },
                        "type": "array",
                        "minItems": 1,
                        "description": "查询条件"
                      }
                    },
                    "type": "object",
                    "required": [
                      "queries"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/get-changes": {
      "post": {
        "summary": "查询单个commit的变化详情",
        "description": "查询单个commit的变化详情",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/CommitChangeResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "useGit": {
                        "type": "boolean",
                        "description": "是否用git的数据源"
                      },
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "hash": {
                        "type": "string",
                        "description": "commit hash"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "hash"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/list-changes": {
      "post": {
        "summary": "查询多个commit的变化详情",
        "description": "与get-changes接口的区别是：1. 支持通过hashList或时间范围批量获取；2. 没有useGit参数，减少git命令的操作。\n分析参数中被排除的commit、MergeCommit，以及其他被分析引擎跳过的commit不会返回。",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ListCommitChangesResp"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "page": {
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 500,
                        "type": "integer",
                        "description": "每页记录数（默认为最大值500）"
                      },
                      "authorTimestampFrom": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建开始日期，可选，包含"
                      },
                      "authorTimestampTo": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建结束日期，可选，不包含"
                      },
                      "commitTimestampFrom": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交开始日期，可选，包含"
                      },
                      "commitTimestampTo": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交结束日期，可选，不包含"
                      },
                      "hashList": {
                        "items": {},
                        "maxItems": 500,
                        "type": "array",
                        "description": "如果指定了hashList参数，会忽略时间筛选器和分页参数, 一次最多500个commit hash"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/get-changes-function": {
      "post": {
        "summary": "[Beta]获取 commit 变更函数",
        "description": "[Beta]获取 commit 变更函数",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/CommitFuntionChangeResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "hash": {
                        "type": "string",
                        "description": "commit hash"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "description": "分页单页数量(最大值1000)"
                      },
                      "current": {
                        "type": "integer",
                        "description": "分页页码"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "hash",
                      "pageSize",
                      "current"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/get-punish": {
      "post": {
        "summary": "[Beta]获取 commit 文件惩罚信息",
        "description": "[Beta]获取 commit 文件惩罚信息",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CommitFilePunishInfo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "hash": {
                        "type": "string",
                        "description": "commit hash"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "hash"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/commit/update-remark": {
      "post": {
        "summary": "修改提交备注",
        "description": "修改提交备注， 本方法需要登录账户拥有至少以下一个workspace的权限: [developer-performance -> commits]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/CommitRemark"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "hash": {
                        "type": "string",
                        "description": "提交散列"
                      },
                      "remark": {
                        "type": "string",
                        "description": "备注"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "hash",
                      "remark"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/start-analysis": {
      "post": {
        "summary": "开始分析",
        "description": "开始分析， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/AnalyzeResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "RepoId, 与ids字段二选一，不能同时为空"
                      },
                      "ids": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "RepoId列表, 与id字段二选一，不能同时为空"
                      },
                      "forceAnalyze": {
                        "type": "boolean",
                        "description": "是否强制重新分析，默认为 false"
                      }
                    },
                    "type": "object",
                    "description": "请求的id和ids字段二选一，不能同时为空"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/terminate-analysis": {
      "post": {
        "summary": "停止分析",
        "description": "停止分析， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/AnalyzeResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "ids": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "ids"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/get-emails": {
      "post": {
        "summary": "查询邮箱",
        "description": "查询邮箱",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/GetEmailResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-auth": {
      "post": {
        "summary": "查询授权情况",
        "description": "查询授权情况",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResourceAuthInfo"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/update-auth": {
      "post": {
        "summary": "更新授权情况",
        "description": "更新授权情况， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> repositories]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/RepoIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "用户 id 数组，可选，不传时保持不变"
                      },
                      "teamIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "团队 id 数组，可选，不传时保持不变"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-stability": {
      "post": {
        "summary": "效率稳定性",
        "description": "效率稳定性",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectStabilityInfo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目或者代码库ID"
                      },
                      "ids": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目或者代码库ID列表"
                      },
                      "startDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
                      },
                      "endDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
                      },
                      "unitOfTime": {
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string",
                        "description": "步长单位:'day' | 'week' | 'month' | 'quarter' | 'year'"
                      },
                      "unitNumber": {
                        "type": "integer",
                        "description": "步长值。如 unitNumber=2,unitOfTime=day,步长即为两天"
                      },
                      "timezoneName": {
                        "type": "string",
                        "description": "时区，可选，默认为PRC"
                      }
                    },
                    "type": "object",
                    "required": [
                      "startDate",
                      "endDate",
                      "unitOfTime",
                      "unitNumber"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/daily-stats": {
      "post": {
        "summary": "批量查询每代码库每人每天效率数据",
        "description": "批量查询每代码库每人每天效率数据",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperDailyStats"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "startDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "起始日期（格式为2022-02-14）"
                      },
                      "endDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "结束日期（格式为2022-02-14）"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoIds",
                      "startDate",
                      "endDate"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/list-issues": {
      "post": {
        "summary": "查询代码质量问题",
        "description": "查询代码质量问题",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IssueItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "gitUrl": {
                        "type": "string",
                        "description": "代码库Git地址"
                      },
                      "page": {
                        "type": "integer",
                        "description": "页数, 默认为1"
                      },
                      "pageSize": {
                        "maximum": 100000,
                        "type": "integer",
                        "description": "每页记录书, 默认为最大值100,000"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/set-analytics-setting": {
      "post": {
        "summary": "配置分析设置（只更新传入的配置，不传入的配置项维持不变）",
        "description": "配置分析设置（只更新传入的配置，不传入的配置项维持不变）， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/RepoIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "singleBranch": {
                        "type": "boolean",
                        "description": " 当量分析分支选择，true：仅分析默认分支，false：分析全部分支",
                        "deprecated": true
                      },
                      "aspectAnalysis": {
                        "type": "boolean",
                        "description": "是否开启软件工程质量分析"
                      },
                      "codeQualityAnalysis": {
                        "type": "boolean",
                        "description": "是否开启代码质量分析"
                      },
                      "defaultRef": {
                        "type": "string",
                        "description": "质量分析的默认分支。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
                      },
                      "commitAfterTime": {
                        "type": "string",
                        "description": "分析起始时间，传null为全部时间，格式为如：2022-04-01T07:35:54.413Z"
                      },
                      "sysExcludedPaths": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "系统排除的目录们"
                      },
                      "customGlobExcludedPaths": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "自定义排除的目录们"
                      },
                      "excludedCommitHashes": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "排除提交的hash列表"
                      },
                      "commitSlocLimit": {
                        "type": "integer",
                        "description": "排除模式：SLOC超过这个数, 就排除"
                      },
                      "maintainPaths": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "保留文件路径"
                      },
                      "analysisBranch": {
                        "type": "string",
                        "enum": [
                          "all",
                          "default",
                          "include",
                          "exclude"
                        ],
                        "description": "当量分析分支设置"
                      },
                      "analysisIncludeRefs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "当量分析包含分支，与排除分支冲突时白名单优先。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
                      },
                      "analysisExcludeRefs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "当量分析排除分支。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
                      },
                      "analysisRefRegex": {
                        "type": "string",
                        "description": "当量分析分支匹配正则表达式"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/get-functions": {
      "post": {
        "summary": "查询代码库的函数列表",
        "description": "查询代码库的函数列表",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/GetFunctionResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "email": {
                        "type": "string",
                        "description": "贡献者邮箱"
                      },
                      "page": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "minimum": 1,
                        "description": "每页大小(最大值1000)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/function-detail": {
      "post": {
        "summary": "查询函数详情",
        "description": "查询函数详情",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/FunctionDetailResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "authorEmail": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "贡献者邮箱"
                      },
                      "isTest": {
                        "type": "boolean",
                        "description": "是否是测试函数"
                      },
                      "isTestCovered": {
                        "type": "boolean",
                        "description": "是否有测试覆盖"
                      },
                      "isDocCovered": {
                        "type": "boolean",
                        "description": "是否有注释覆盖"
                      },
                      "hasDuplication": {
                        "type": "boolean",
                        "description": "是否有重复代码"
                      },
                      "page": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "minimum": 1,
                        "description": "每页大小(最大值1000)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/techtag-packages": {
      "post": {
        "summary": "查询代码库的 techtag 和对应的 packages",
        "description": "查询代码库的 techtag 和对应的 packages",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TechTagPackageMetricByRepo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "format": {
                        "type": "string",
                        "enum": [
                          "package",
                          "tag"
                        ],
                        "description": "分组依据package或者标签"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "format",
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-efficiency-by-file": {
      "post": {
        "summary": "按文件汇总查询代码库的效率指标",
        "description": "按文件汇总查询代码库的效率指标",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/EfficiencyByFileResult"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "filePath": {
                        "type": "string",
                        "description": "相对代码库根目录的文件路径（支持GLOB语法，如: src/app/* , 详细规则参考 https://www.npmjs.com/package/glob-to-regexp）"
                      },
                      "authorTimeFrom": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Author Time起始时间"
                      },
                      "authorTimeTo": {
                        "format": "date-time",
                        "type": "string",
                        "description": "Author Time截止时间"
                      },
                      "authorEmails": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "Author Email列表"
                      },
                      "page": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "minimum": 1,
                        "description": "每页大小(最大值1000)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/analyzed_branches": {
      "post": {
        "summary": "查询代码库指定分析的代码分支列表",
        "description": "查询代码库指定分析的代码分支列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AnalyzedBranchesResult"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/ls-remote": {
      "post": {
        "summary": "查询代码库远程分支和Tag列表",
        "description": "查询代码库远程分支和Tag列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> analysis]",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/query-efficiency-by-branch": {
      "post": {
        "summary": "按分支汇总查询代码库的效率指标(branches选择范围为分析设置中选择了的分析分支)",
        "description": "按分支汇总查询代码库的效率指标(branches选择范围为分析设置中选择了的分析分支)",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoBranchEfficiencyResult"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "branches": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "分支列表 (只能选择分析设置中效能分析分支选择自选分支中选中的分支，可选的分支可以通过/openapi/repo/analyzed_branches接口查询)"
                      },
                      "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "起始时间（author time）"
                      },
                      "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "截止时间（author time）"
                      },
                      "unitOfTime": {
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month"
                        ],
                        "description": "时间聚合单位"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "startDate",
                      "unitOfTime"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/repo/reauthorize": {
      "post": {
        "summary": "修改代码库授权",
        "description": "修改代码库授权",
        "tags": [
          "Repo"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ReauthorizeReposResult"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "authType": {
                        "type": "string",
                        "enum": [
                          "SSH_KEY",
                          "HTTP_BASE",
                          "PUBLIC"
                        ],
                        "description": "授权类型"
                      },
                      "username": {
                        "type": "string",
                        "description": "账户名"
                      },
                      "password": {
                        "type": "string",
                        "description": "账户密码"
                      },
                      "privateKey": {
                        "type": "string",
                        "description": "私钥"
                      },
                      "secretId": {
                        "type": "string",
                        "description": "秘密ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/add": {
      "post": {
        "summary": "创建团队",
        "description": "创建团队",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/TeamId"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "minLength": 1,
                        "type": "string",
                        "maxLength": 255,
                        "description": "团队名称"
                      },
                      "parentId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "上级团队ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "parentId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/update": {
      "post": {
        "summary": "修改团队信息",
        "description": "修改团队信息， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> squad]",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/TeamId"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "团队ID"
                      },
                      "name": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "团队名称"
                      },
                      "parentId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "上级团队ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/delete": {
      "post": {
        "summary": "删除团队",
        "description": "删除团队， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> squad]",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/TeamId"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "teamId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "团队ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "teamId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/list": {
      "post": {
        "summary": "团队列表",
        "description": "团队列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> group，system-config -> squad]",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TeamInfo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/team/members": {
      "post": {
        "summary": "团队成员列表",
        "description": "团队成员列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/TeamMemberResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "teamId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "团队ID"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "分页偏移量"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "分页返回记录数"
                      },
                      "subTeam": {
                        "type": "boolean",
                        "description": "是否包含子团队"
                      }
                    },
                    "type": "object",
                    "required": [
                      "teamId",
                      "offset",
                      "limit",
                      "subTeam"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/query-quality-metric": {
      "post": {
        "summary": "以团队维度聚合获取质量metric",
        "description": "以团队维度聚合获取质量metric",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TeamQualityMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "teamIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "各团队ID"
                      },
                      "options": {
                        "$ref": "#/components/schemas/QualityMetricColumns",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "teamIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/team/query-efficiency-metric": {
      "post": {
        "summary": "以团队维度聚合获取效率metric",
        "description": "以团队维度聚合获取效率metric",
        "tags": [
          "Team"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TeamEfficiencyMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "teamIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "各团队ID"
                      },
                      "options": {
                        "$ref": "#/components/schemas/TeamEfficiencyMetricOptions",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "teamIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/role/list": {
      "post": {
        "summary": "查询角色列表",
        "description": "查询角色列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members，system-config -> role，system-config -> analysis，system-config -> system-configurations，dashboards -> dashboard-page-lib]",
        "tags": [
          "Role"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoleInfo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/developer/query-efficiency-metric": {
      "post": {
        "summary": "以开发者维度聚合获取效率metric",
        "description": "以开发者维度聚合获取效率metric",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperEfficiencyMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "primaryEmailStrs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "邮箱集合"
                      },
                      "options": {
                        "$ref": "#/components/schemas/DeveloperEfficiencyParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "primaryEmailStrs",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/developer/query-quality-metric": {
      "post": {
        "summary": "以开发者维度聚合获取质量metric",
        "description": "以开发者维度聚合获取质量metric",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperQualityMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "primaryEmailStrs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "邮箱集合"
                      },
                      "options": {
                        "$ref": "#/components/schemas/DeveloperQualityParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "primaryEmailStrs",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/developer/query-repos": {
      "post": {
        "summary": "获取开发者参与的代码库",
        "description": "获取开发者参与的代码库",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperRepoResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "邮箱"
                      }
                    },
                    "type": "object",
                    "required": [
                      "email"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/developer/dev-eq-lang-dist": {
      "post": {
        "summary": "获取开发者的开发当量不同编程语言的分布",
        "description": "获取开发者的开发当量不同编程语言的分布",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DevEqByLang"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "developers": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "开发者Email列表，不传此参数表示全部"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表，不传此参数表示全部"
                      },
                      "since": {
                        "format": "date-time",
                        "type": "string",
                        "description": "起始时间"
                      },
                      "until": {
                        "format": "date-time",
                        "type": "string",
                        "description": "结束时间"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/developer/ranking": {
      "post": {
        "summary": "查询开发者排行榜",
        "description": "查询开发者排行榜",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperRankingResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "rankingType": {
                        "type": "string",
                        "enum": [
                          "test_coverage",
                          "comment_coverage",
                          "code_quality",
                          "dev_equivalent",
                          "dev_value",
                          "overall"
                        ],
                        "description": "排名类型"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "项目ID（和代码库ID不能同时为空）"
                      },
                      "repoIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表（和项目ID不能同时为空。在项目ID不为空时，repoIds只能选择项目范围内的代码库，项目之外的代码库会被忽略）"
                      },
                      "contributors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "开发者Email列表"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "返回记录数"
                      }
                    },
                    "type": "object",
                    "required": [
                      "rankingType",
                      "limit"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/developer/tech-tag": {
      "post": {
        "summary": "获取个人技能标签数据",
        "description": "获取个人技能标签数据",
        "tags": [
          "DevelopMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PackageInfoResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "primaryEmailStrs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "邮箱集合"
                      },
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID，或代码库ID的数组"
                      },
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "primaryEmailStrs"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/add": {
      "post": {
        "summary": "创建项目",
        "description": "创建项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group，system-config -> repositories，system-config -> analysis]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "description": "项目名称"
                      },
                      "description": {
                        "type": "string",
                        "description": "项目描述"
                      },
                      "logo": {
                        "type": "string",
                        "description": "项目图标URL"
                      },
                      "parentProjectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "上级项目ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "description",
                      "parentProjectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/update": {
      "post": {
        "summary": "更新项目",
        "description": "更新项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID"
                      },
                      "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255,
                        "description": "项目名称"
                      },
                      "description": {
                        "type": "string",
                        "description": "项目描述"
                      },
                      "logo_url": {
                        "type": "string",
                        "description": "项目图标URL"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "name",
                      "description"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/delete": {
      "post": {
        "summary": "删除项目",
        "description": "删除项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/list": {
      "post": {
        "summary": "项目列表",
        "description": "项目列表， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group，system-config -> data-source-config，toolbox -> large-screen]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectListItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/project/query": {
      "post": {
        "summary": "查询项目",
        "description": "查询项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group，system-config -> data-source-config，toolbox -> large-screen]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectListItem"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/move-project": {
      "post": {
        "summary": "移动项目，修改项目层级",
        "description": "移动项目，修改项目层级， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectId"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID"
                      },
                      "parentId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "移动目标项目组ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "parentId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/add-member": {
      "post": {
        "summary": "添加项目成员",
        "description": "添加项目成员， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID"
                      },
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目成员Account的Id列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "accountIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/remove-member": {
      "post": {
        "summary": "删除项目成员",
        "description": "删除项目成员， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID"
                      },
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目成员Account的Id列表"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "accountIds"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/list-member": {
      "post": {
        "summary": "列出项目成员",
        "description": "列出项目成员， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> members]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectMemberResp"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/list-repo": {
      "post": {
        "summary": "查询项目中的代码库列表",
        "description": "查询项目中的代码库列表",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RepoItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/move-repo": {
      "post": {
        "summary": "移动代码库到另一个项目",
        "description": "移动代码库到另一个项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/MoveRepoResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "移动目标项目ID"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/remove-repo": {
      "post": {
        "summary": "将一个代码库移出项目",
        "description": "将一个代码库移出项目， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectRepo"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "projectId": {
                        "format": "uuid",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "required": [
                      "repoId",
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/get-emails": {
      "post": {
        "summary": "查询邮箱",
        "description": "查询邮箱",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/GetEmailResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-auth": {
      "post": {
        "summary": "查询授权情况",
        "description": "查询授权情况",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResourceAuthInfo"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/update-auth": {
      "post": {
        "summary": "更新授权情况",
        "description": "更新授权情况， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> group]",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ProjectIdQuery"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "代码库ID"
                      },
                      "accountIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "用户 id 数组，可选，不传时保持不变"
                      },
                      "teamIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "团队 id 数组，可选，不传时保持不变"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-stability": {
      "post": {
        "summary": "查询项目效率稳定性",
        "description": "查询项目效率稳定性",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectStabilityInfo"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目或者代码库ID"
                      },
                      "ids": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目或者代码库ID列表"
                      },
                      "startDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
                      },
                      "endDate": {
                        "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
                        "type": "string",
                        "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
                      },
                      "unitOfTime": {
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "quarter",
                          "year"
                        ],
                        "type": "string",
                        "description": "步长单位:'day' | 'week' | 'month' | 'quarter' | 'year'"
                      },
                      "unitNumber": {
                        "type": "integer",
                        "description": "步长值。如 unitNumber=2,unitOfTime=day,步长即为两天"
                      },
                      "timezoneName": {
                        "type": "string",
                        "description": "时区，可选，默认为PRC"
                      }
                    },
                    "type": "object",
                    "required": [
                      "startDate",
                      "endDate",
                      "unitOfTime",
                      "unitNumber"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-efficiency-metric": {
      "post": {
        "summary": "以项目聚合获取效率metric",
        "description": "以项目聚合获取效率metric",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectEfficiencyMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      },
                      "options": {
                        "$ref": "#/components/schemas/EfficiencyParam",
                        "type": "object"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-quality-metric": {
      "post": {
        "summary": "以项目组聚合获取质量metric",
        "description": "以项目组聚合获取质量metric",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProjectQualityMetricResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      },
                      "options": {
                        "$ref": "#/components/schemas/QualityMetricColumns",
                        "type": "object"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/QualityDateQuery",
                        "description": "查询时间范围"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectIds",
                      "options"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-focusness": {
      "post": {
        "summary": "查询项目人力专注度",
        "description": "查询项目人力专注度",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/QueryFocusnessResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoId": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "projectId": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "since": {
                        "format": "date-time",
                        "type": "string",
                        "description": "起始时间"
                      },
                      "until": {
                        "format": "date-time",
                        "type": "string",
                        "description": "结束时间"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/RecordFilterValue"
                      }
                    },
                    "type": "object",
                    "required": [
                      "filter"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/list-issues": {
      "post": {
        "summary": "查询代码质量问题",
        "description": "查询代码质量问题",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/IssueList"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      },
                      "page": {
                        "type": "number",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 99999,
                        "type": "number",
                        "description": "每页大小(最大99999)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/trigger-pipeline": {
      "post": {
        "summary": "[Internal] 触发数据加工任务",
        "description": "[Internal] 触发数据加工任务",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/PipelineResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/retrieve-pipeline": {
      "post": {
        "summary": "[Internal] 获取数据加工任务",
        "description": "[Internal] 获取数据加工任务",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/PipelineResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "project id"
                      },
                      "pipelineId": {
                        "type": "number",
                        "description": "pipeline id，trigger-pipeline返回结果里的id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "pipelineId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/query-overall-ranking": {
      "post": {
        "summary": "效率质量综合排行, 按排名升序排序",
        "description": "效率质量综合排行, 按排名升序排序",
        "tags": [
          "Project"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RankingResult"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID （不能同时与repoIds一起使用）"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID （不能同时与projectId一起使用）"
                      },
                      "contributors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "贡献者（邮箱格式）"
                      },
                      "limit": {
                        "type": "number",
                        "description": "限制（表示取的条数）"
                      },
                      "offset": {
                        "type": "number",
                        "description": "偏移（表示从第几条开始查）"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/test-file-config/list-configs": {
      "post": {
        "summary": "列出测试代码路径配置",
        "description": "列出测试代码路径配置",
        "tags": [
          "TestFileConfig"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ConfigResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/test-file-config/update-config": {
      "post": {
        "summary": "修改测试代码路径配置",
        "description": "修改测试代码路径配置",
        "tags": [
          "TestFileConfig"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ConfigResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "配置ID"
                      },
                      "regex": {
                        "type": "string",
                        "description": "配置正则表达"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "regex"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/system/query-ae-version": {
      "post": {
        "summary": "获取分析引擎版本",
        "description": "获取分析引擎版本",
        "tags": [
          "System"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthSignature"
              }
            }
          }
        }
      }
    },
    "/industry/dev-eq-per-capita": {
      "post": {
        "summary": "同行对比：人均当量趋势",
        "description": "同行对比：人均当量趋势",
        "tags": [
          "Industry"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/IndustryDevEqDfficiencyResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目/代码库 ID"
                      },
                      "idType": {
                        "type": "string",
                        "enum": [
                          "repository",
                          "project"
                        ],
                        "description": "ID 类型"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/DateQuery",
                        "description": "时间范围"
                      },
                      "unitNumber": {
                        "type": "integer",
                        "description": "时间量值，单位为 week"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "idType",
                      "dateQuery"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/industry/new-dev-eq": {
      "post": {
        "summary": "同行对比：新增当量趋势",
        "description": "同行对比：新增当量趋势",
        "tags": [
          "Industry"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/IndustryDevEqDfficiencyResp"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目/代码库 ID"
                      },
                      "idType": {
                        "type": "string",
                        "enum": [
                          "repository",
                          "project"
                        ],
                        "description": "ID 类型"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/DateQuery",
                        "description": "时间范围"
                      },
                      "unitNumber": {
                        "type": "integer",
                        "description": "时间量值，单位为 week"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "idType",
                      "dateQuery"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/industry/info": {
      "post": {
        "summary": "同行对比：项目信息",
        "description": "同行对比：项目信息",
        "tags": [
          "Industry"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/IndustryDevEqEfficiencyResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目/代码库 ID"
                      },
                      "idType": {
                        "type": "string",
                        "enum": [
                          "repository",
                          "project"
                        ],
                        "description": "ID 类型"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/DateQuery",
                        "description": "时间范围"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "idType",
                      "dateQuery"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/industry/quality": {
      "post": {
        "summary": "行业质量",
        "description": "行业质量",
        "tags": [
          "Industry"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/IndustryQualityResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目/代码库 ID"
                      },
                      "idType": {
                        "type": "string",
                        "enum": [
                          "repository",
                          "project"
                        ],
                        "description": "ID 类型"
                      },
                      "metricType": {
                        "enum": [
                          "static_test_coverage",
                          "doc_coverage",
                          "modularity",
                          "dryness",
                          "issue_rate",
                          "severe_issue_rate"
                        ],
                        "type": "string",
                        "description": "行业指标类型"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "idType",
                      "metricType"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/list-sprints": {
      "post": {
        "summary": "获取项目关联的迭代列表",
        "description": "获取项目关联的迭代列表",
        "tags": [
          "Sprint"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ListSprintResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目id"
                      },
                      "includingMetaData": {
                        "type": "boolean",
                        "description": "是否包含元信息"
                      },
                      "page": {
                        "type": "integer",
                        "description": "页数"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "description": "每页大小(最大值1000)"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/sprint/list-issues": {
      "post": {
        "summary": "获取迭代中的事务列表",
        "description": "获取迭代中的事务列表",
        "tags": [
          "Sprint"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SprintIssueItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "type": "string",
                        "description": "项目id"
                      },
                      "sprintId": {
                        "type": "string",
                        "description": "迭代id"
                      },
                      "field": {
                        "enum": [
                          "key",
                          "worktime",
                          "dev_eq"
                        ],
                        "type": "string",
                        "description": "排序字段, key-事务号, worktime-工时, dev_eq-代码当量"
                      },
                      "sort": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "description": "排序顺序"
                      },
                      "priority": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务优先级, 从sprint的元信息中获取"
                      },
                      "assigneeId": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务assignee id, 从sprint的元信息中获取"
                      },
                      "status": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务状态名称, 从sprint的元信息中获取"
                      },
                      "type": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务类型名称, 从sprint的元信息中获取"
                      },
                      "issueKeys": {
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 500,
                        "type": "array",
                        "description": "issue key列表，按issue key查询，列表最大长度500"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "sprintId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/sprint/import-csv": {
      "post": {
        "summary": "创建导入csv issue的异步任务，需保证所有的 board 在 web 界面中已上传过一次，与项目已有关联",
        "description": "创建导入csv issue的异步任务，需保证所有的 board 在 web 界面中已上传过一次，与项目已有关联， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> data-source-config]",
        "tags": [
          "Sprint"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UploadCsvResult"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "issues",
                          "issue_repo_commits"
                        ],
                        "description": "csv导入类型"
                      },
                      "csvContent": {
                        "type": "string",
                        "description": "csv文件内容"
                      },
                      "connectionId": {
                        "type": "string",
                        "description": "lake 连接 id"
                      }
                    },
                    "type": "object",
                    "required": [
                      "type",
                      "csvContent",
                      "connectionId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/issue-tracking/list-issues": {
      "post": {
        "summary": "获取项目关联的事务列表(自然周期）",
        "description": "获取项目关联的事务列表(自然周期）",
        "tags": [
          "IssueTracking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ListPeriodIssueResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "type": "string",
                        "description": "项目id"
                      },
                      "field": {
                        "enum": [
                          "created_date",
                          "updated_date"
                        ],
                        "type": "string",
                        "description": "排序字段: created_date 或 updated_date"
                      },
                      "sort": {
                        "enum": [
                          "ASC",
                          "DESC"
                        ],
                        "type": "string",
                        "description": "排序顺序"
                      },
                      "statusCategory": {
                        "items": {
                          "enum": [
                            "TODO",
                            "IN_PROGRESS",
                            "DONE"
                          ],
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务状态的类别: TODO, IN_PROGRESS, DONE"
                      },
                      "typeCategory": {
                        "items": {
                          "enum": [
                            "BUG",
                            "REQUIREMENT",
                            "INCIDENT",
                            "TECH_DEBT"
                          ],
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务类型的类别：BUG, REQUIREMENT, INCIDENT, TECH_DEBT"
                      },
                      "status": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务状态名称, 取\"设置-数据源配置-对应数据源配置中的标准状态名称\""
                      },
                      "type": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "事务类型名称，取\"设置-数据源配置-对应数据源配置中的标准类型名称\""
                      },
                      "timeRangeType": {
                        "enum": [
                          "created_date",
                          "updated_date"
                        ],
                        "type": "string",
                        "description": "时间范围类型，支持created_date和updated_date"
                      },
                      "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "时间范围，起始时间"
                      },
                      "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "时间范围，结束时间"
                      },
                      "issueKeys": {
                        "items": {
                          "type": "string"
                        },
                        "maxItems": 500,
                        "type": "array",
                        "description": "issue key列表，按issue key查询，列表最大长度500"
                      },
                      "page": {
                        "type": "integer",
                        "description": "页码"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "integer",
                        "description": "每页记录数（默认为最大值1000）"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/issue-tracking/query-issue-stat": {
      "post": {
        "summary": "获取项目关联的事务统计",
        "description": "获取项目关联的事务统计",
        "tags": [
          "IssueTracking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/GetPeriodIssueStatItem"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "type": "string",
                        "description": "项目id"
                      },
                      "groupBy": {
                        "enum": [
                          "status",
                          "status_category",
                          "type",
                          "type_category"
                        ],
                        "type": "string",
                        "description": "统计维度，支持按事务状态或类型统计"
                      },
                      "timeRangeType": {
                        "enum": [
                          "created_date",
                          "updated_date"
                        ],
                        "type": "string",
                        "description": "时间范围类型，支持createdDate和updatedDate"
                      },
                      "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "时间范围，起始时间"
                      },
                      "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "时间范围，结束时间"
                      }
                    },
                    "type": "object",
                    "required": [
                      "projectId",
                      "groupBy"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/issue-tracking/link-board": {
      "post": {
        "summary": "关联项目看板",
        "description": "关联项目看板， 本方法需要登录账户拥有至少以下一个workspace的权限: [system-config -> data-source-config，system-config -> system-integration]",
        "tags": [
          "IssueTracking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/BindProjectBoardResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "boardSourceType": {
                        "enum": [
                          "jira",
                          "csv",
                          "tapd",
                          "zentao"
                        ],
                        "type": "string",
                        "description": "看板来源类型, 如果是tapd, 绑定后需要手动触发元数据同步任务"
                      },
                      "sourceId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "数据源id"
                      },
                      "projectId": {
                        "type": "string",
                        "description": "项目id"
                      },
                      "boardId": {
                        "type": "string",
                        "description": "看板id"
                      },
                      "boardName": {
                        "type": "string",
                        "description": "看板名称, boardSourceType为csv时无效"
                      }
                    },
                    "type": "object",
                    "required": [
                      "boardSourceType",
                      "sourceId",
                      "projectId",
                      "boardId"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/project/bug_per_k_dev_eq_trending": {
      "post": {
        "summary": "查询迭代表现项目千当量缺陷率指标趋势，如果查询多个项目，可能会比较慢",
        "description": "查询迭代表现项目千当量缺陷率指标趋势，如果查询多个项目，可能会比较慢， 本方法需要登录账户拥有至少以下一个workspace的权限: [sprintsv2-performance]",
        "tags": [
          "IssueTracking"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BugPerKDevEqTrendingResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目筛选，不传则返回当前用户有权限的所有项目"
                      },
                      "dateQuery": {
                        "$ref": "#/components/schemas/DateQuery",
                        "description": "时间筛选, 时间范围最多不能超过1年"
                      },
                      "groupDimension": {
                        "type": "string",
                        "enum": [
                          "sprint",
                          "week",
                          "month"
                        ],
                        "description": "分组维度"
                      }
                    },
                    "type": "object",
                    "required": [
                      "dateQuery",
                      "groupDimension"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/query-aspect-metric": {
      "post": {
        "summary": "查询切面数据",
        "description": "查询切面数据",
        "tags": [
          "AspectMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/AspectMetricResult"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "developers": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "开发者邮箱列表"
                      },
                      "snapshotTime": {
                        "format": "date-time",
                        "type": "string",
                        "description": "历史数据切面时间（返回的结果是这个时间点之前的最后一次分析的数据，默认为当前时间）"
                      },
                      "pageSize": {
                        "maximum": 10000,
                        "type": "integer",
                        "minimum": 1,
                        "description": "分页大小"
                      },
                      "page": {
                        "minimum": 1,
                        "type": "integer",
                        "description": "页码"
                      }
                    },
                    "type": "object",
                    "required": [
                      "pageSize",
                      "page"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/aspect-dev-value-ranking": {
      "post": {
        "summary": "查询距离入参时间最近一次分析的代码影响力榜",
        "description": "返回值里的value表示代码影响力的具体值，返回结果按影响力倒序排序，影响力大的在最前面；代码影响力的计算受【分析配置】->【代码影响力回溯时长】配置的影响。",
        "tags": [
          "AspectMetric"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperAspectDevValueRankingResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID（和代码库ID不能同时为空）"
                      },
                      "repoIds": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表（和项目ID不能同时为空。在项目ID不为空时，repoIds只能选择项目范围内的代码库，项目之外的代码库会被忽略）"
                      },
                      "date": {
                        "format": "date-time",
                        "type": "string",
                        "description": "切面日期"
                      }
                    },
                    "type": "object",
                    "required": [
                      "date"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/quality/function-metrics-by-language": {
      "post": {
        "summary": "按语言划分的函数指标",
        "description": "按语言划分的函数指标",
        "tags": [
          "Quality"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/FunctionMetricDetailByLanguageResponse"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "对象ID"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "project",
                          "repository"
                        ],
                        "description": "对象类型。项目或者代码库"
                      },
                      "contributors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "贡献者"
                      },
                      "filter": {
                        "$ref": "#/components/schemas/FunctionFiltler",
                        "description": "滤波器"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "type"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/quality/time-series": {
      "post": {
        "summary": "历史时段项目和代码库的质量数据",
        "description": "历史时段项目和代码库的质量数据",
        "tags": [
          "Quality"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TimeSeries"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "id": {
                        "format": "uuid",
                        "type": "string",
                        "description": "对象ID"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "project",
                          "repository"
                        ],
                        "description": "对象类型，项目或者代码库"
                      },
                      "time_query": {
                        "$ref": "#/components/schemas/TimeQuery",
                        "description": "时间范围"
                      }
                    },
                    "type": "object",
                    "required": [
                      "id",
                      "type",
                      "time_query"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/quality/contributor-time-series": {
      "post": {
        "summary": "历史时段贡献者质量数据",
        "description": "历史时段贡献者质量数据",
        "tags": [
          "Quality"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DeveloperTimeSeries"
                      }
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "primaryEmailStrs": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "maxItems": 100,
                        "description": "邮箱集合"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID列表"
                      },
                      "projectIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "项目ID列表"
                      },
                      "time_query": {
                        "$ref": "#/components/schemas/TimeQuery",
                        "description": "时间范围（不能超过365天）"
                      }
                    },
                    "type": "object",
                    "required": [
                      "primaryEmailStrs",
                      "time_query"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/code-issue/list": {
      "post": {
        "summary": "代码问题列表",
        "description": "代码问题列表",
        "tags": [
          "CodeIssue"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ListCodeIssueResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "projectId": {
                        "format": "uuid",
                        "type": "string",
                        "description": "项目ID（和repoIds不能都为空）"
                      },
                      "repoIds": {
                        "items": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "type": "array",
                        "description": "代码库ID（和projectId不能都为空）"
                      },
                      "startDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "起始时间"
                      },
                      "endDate": {
                        "format": "date-time",
                        "type": "string",
                        "description": "结束时间"
                      },
                      "authors": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "提交者Email"
                      },
                      "rules": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "规则key"
                      },
                      "type": {
                        "items": {
                          "enum": [
                            "PERFORMANCE",
                            "VULNERABILITY",
                            "SECURITY_HOTSPOT",
                            "PORTABILITY",
                            "BUG",
                            "CODE_SMELL"
                          ],
                          "type": "string"
                        },
                        "type": "array",
                        "description": "问题类型"
                      },
                      "severity": {
                        "items": {
                          "enum": [
                            "BLOCKER",
                            "MINOR",
                            "CRITICAL",
                            "MAJOR",
                            "INFO"
                          ],
                          "type": "string"
                        },
                        "type": "array",
                        "description": "严重程度"
                      },
                      "filename": {
                        "type": "string",
                        "description": "文件名（正则表达式匹配）"
                      },
                      "page": {
                        "type": "number"
                      },
                      "pageSize": {
                        "maximum": 1000,
                        "type": "number"
                      }
                    },
                    "type": "object",
                    "required": [
                      "page",
                      "pageSize"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/virtual_project/list": {
      "post": {
        "summary": "列出虚拟项目",
        "description": "列出虚拟项目",
        "tags": [
          "VirtualProject"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/ListVPsResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "search": {
                        "type": "string",
                        "description": "根据虚拟项目名称搜索"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/virtual_project/delete": {
      "post": {
        "summary": "删除虚拟项目",
        "description": "删除虚拟项目",
        "tags": [
          "VirtualProject"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeleteVirtualProjectResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "虚拟项目名称"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/virtual_project/update": {
      "post": {
        "summary": "编辑虚拟项目(目前只支持更新代码库配置)",
        "description": "编辑虚拟项目(目前只支持更新代码库配置)",
        "tags": [
          "VirtualProject"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/UpdateVPResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "虚拟项目名称"
                      },
                      "repos": {
                        "items": {
                          "$ref": "#/components/schemas/VPRepositoryConfig"
                        },
                        "type": "array",
                        "description": "代码库配置"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "repos"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/virtual_project/add": {
      "post": {
        "summary": "创建虚拟项目",
        "description": "创建虚拟项目",
        "tags": [
          "VirtualProject"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "success"
                    },
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "data": {
                      "$ref": "#/components/schemas/AddVirtualProjectResponse"
                    }
                  },
                  "required": [
                    "message",
                    "code",
                    "data"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "description": "",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/AuthSignature"
                  },
                  {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "虚拟项目名称"
                      },
                      "description": {
                        "type": "string",
                        "description": "虚拟项目描述"
                      },
                      "repos": {
                        "items": {
                          "$ref": "#/components/schemas/VPRepositoryConfig"
                        },
                        "type": "array",
                        "description": "虚拟项目代码库配置"
                      },
                      "accounts": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "虚拟项目成员邮箱"
                      },
                      "permissionAccounts": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "虚拟项目有数据查看权限的成员邮箱"
                      },
                      "permissionTeams": {
                        "items": {
                          "type": "string"
                        },
                        "type": "array",
                        "description": "虚拟项目有数据查看权限的团队名称"
                      }
                    },
                    "type": "object",
                    "required": [
                      "name",
                      "repos"
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "FilterPeriod": {
        "properties": {
          "counts": {
            "type": "integer",
            "description": "时间量值"
          },
          "unit": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "时间量词"
          }
        },
        "type": "object",
        "required": [
          "counts",
          "unit"
        ]
      },
      "DateQuery": {
        "properties": {
          "recentPeriod": {
            "$ref": "#/components/schemas/FilterPeriod",
            "description": "最近一段时间"
          },
          "dateRange": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "[start_date, end_date]，例如：[2022-01-01, 2022-01-31]"
          }
        },
        "type": "object"
      },
      "LabelFilter": {
        "properties": {
          "groupName": {
            "type": "string"
          },
          "labelValue": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "groupName"
        ]
      },
      "RecordFilterValue": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository",
              "developer",
              "team"
            ]
          },
          "email": {
            "type": "string"
          },
          "groupId": {
            "format": "uuid",
            "type": "string"
          },
          "squadIds": {
            "format": "uuid",
            "type": "string"
          },
          "metric": {
            "format": "uuid",
            "type": "string"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tags": {},
          "labelFilters": {
            "items": {
              "$ref": "#/components/schemas/LabelFilter"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "type"
        ]
      },
      "FiltersValue": {
        "properties": {
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "ignoreIncompleteSteps": {
            "type": "boolean"
          },
          "skipOutlier": {
            "type": "boolean"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/RecordFilterValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "records"
        ]
      },
      "QueryWithTimeStep": {
        "properties": {
          "unitNumber": {
            "type": "number"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string"
          },
          "timezoneName": {},
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "ignoreIncompleteSteps": {
            "type": "boolean"
          },
          "skipOutlier": {
            "type": "boolean"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/RecordFilterValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "records"
        ]
      },
      "SavedFilter": {
        "properties": {
          "name": {
            "type": "string"
          },
          "creator_account_id": {
            "format": "uuid",
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/FiltersValue"
          },
          "is_delete": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "creator_account_id",
          "is_delete"
        ]
      },
      "SavedFilterCondition": {
        "properties": {
          "name": {
            "type": "string"
          },
          "is_private": {
            "type": "boolean"
          },
          "creator_account_id": {
            "format": "uuid",
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "scope_id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "is_delete": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "creator_account_id",
          "is_delete"
        ]
      },
      "LoginLog": {
        "properties": {
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "ip",
          "type"
        ]
      },
      "OperationLog": {
        "properties": {
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "ip": {
            "type": "string"
          },
          "kind": {
            "type": "string"
          },
          "subkind": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "ip",
          "kind",
          "subkind"
        ]
      },
      "TestFileConfig": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "regex": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "language",
          "regex"
        ]
      },
      "RepoStatusPush": {
        "properties": {
          "create_account_id": {
            "format": "uuid",
            "type": "string"
          },
          "types": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "time": {
            "type": "string"
          },
          "role_ids": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "create_account_id",
          "types",
          "frequency",
          "time",
          "role_ids"
        ]
      },
      "SuperBaseEntity": {
        "properties": {
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "analysis_id",
          "dt",
          "project_id"
        ]
      },
      "BaseEntity": {
        "properties": {
          "iid": {
            "type": "integer"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "iid",
          "analysis_id",
          "dt",
          "project_id"
        ]
      },
      "CodeQualityIssue": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "AE判断有可能引入issue的commit"
          },
          "key": {
            "type": "string"
          },
          "rule": {
            "type": "string"
          },
          "effort": {
            "type": "string",
            "description": "修复问题需要的时常"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string",
            "description": "代码问题类型"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string",
            "description": "代码问题级别"
          },
          "text_ranges": {
            "type": "string"
          },
          "file_path": {
            "type": "string"
          },
          "is_merico": {
            "type": "boolean"
          },
          "email": {
            "format": "email",
            "type": "string",
            "description": "Issue负责人"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "key",
          "rule",
          "effort",
          "type",
          "severity",
          "text_ranges",
          "file_path",
          "is_merico",
          "email",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "CAGNode": {
        "properties": {
          "node_id": {
            "type": "string",
            "description": "Code Aspect Graph Node"
          },
          "language": {
            "type": "string",
            "description": "programming language"
          },
          "file_path": {
            "type": "string",
            "description": "file path"
          },
          "name": {
            "type": "string",
            "description": "function name"
          },
          "parameters": {
            "type": "string",
            "description": "function parameters list"
          },
          "returns": {
            "type": "string",
            "description": "function return type"
          },
          "enc_func_name": {
            "type": "string",
            "description": "?"
          },
          "start_line": {
            "type": "integer",
            "description": "start line"
          },
          "end_line": {
            "type": "integer",
            "description": "start line"
          },
          "start_column": {
            "type": "integer",
            "description": "start column"
          },
          "end_column": {
            "type": "integer",
            "description": "end column"
          },
          "start_range": {
            "type": "integer",
            "description": "?"
          },
          "end_range": {
            "type": "integer",
            "description": "?"
          },
          "code_hash": {
            "type": "string",
            "description": "?"
          },
          "class_name": {
            "type": "string",
            "description": "class name"
          },
          "cyclomatic_complexity": {
            "type": "integer"
          },
          "latest_hexsha": {
            "type": "string"
          },
          "earliest_hexsha": {
            "type": "string"
          },
          "frequent_hexsha": {
            "type": "string"
          },
          "in_degree": {
            "type": "integer"
          },
          "out_degree": {
            "type": "integer"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "comment_count": {
            "type": "integer"
          },
          "is_test_covered": {
            "type": "boolean"
          },
          "is_test_func": {
            "type": "boolean"
          },
          "dryness_group_key": {
            "type": "string"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "node_id",
          "language",
          "file_path",
          "name",
          "parameters",
          "returns",
          "enc_func_name",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "start_range",
          "end_range",
          "code_hash",
          "class_name",
          "cyclomatic_complexity",
          "latest_hexsha",
          "earliest_hexsha",
          "frequent_hexsha",
          "in_degree",
          "out_degree",
          "email",
          "comment_count",
          "is_test_covered",
          "is_test_func",
          "dryness_group_key",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "Edit": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "commit hash"
          },
          "edit_id": {
            "type": "string",
            "description": "函数修改记录ID"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          },
          "diff_type": {
            "type": "string",
            "description": "?"
          },
          "node_id": {
            "type": "string",
            "description": "ccg function node id"
          },
          "file_path": {
            "type": "string",
            "description": "file path"
          },
          "name": {
            "type": "string",
            "description": "function name"
          },
          "parameters": {
            "type": "string",
            "description": "function parameters list"
          },
          "enc_func_name": {
            "type": "string",
            "description": "encrypted function name"
          },
          "start_line": {
            "type": "integer",
            "description": "start line"
          },
          "end_line": {
            "type": "integer",
            "description": "start line"
          },
          "start_column": {
            "type": "integer",
            "description": "start column"
          },
          "end_column": {
            "type": "integer",
            "description": "end column"
          },
          "start_range": {
            "type": "integer",
            "description": "?"
          },
          "end_range": {
            "type": "integer",
            "description": "?"
          },
          "class_name": {
            "type": "string",
            "description": "class name"
          },
          "cyclomatic_complexity": {
            "type": "integer"
          },
          "removed": {
            "type": "boolean"
          },
          "dev_eq": {
            "type": "integer"
          },
          "dev_rank": {
            "type": "integer"
          },
          "add_line": {
            "type": "integer"
          },
          "delete_line": {
            "type": "integer"
          },
          "eloc_duplication_weight": {
            "type": "integer"
          },
          "exception": {
            "type": "string"
          },
          "bulk_edit_lines": {
            "type": "integer"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "edit_id",
          "language",
          "diff_type",
          "node_id",
          "file_path",
          "name",
          "parameters",
          "enc_func_name",
          "start_line",
          "end_line",
          "start_column",
          "end_column",
          "start_range",
          "end_range",
          "class_name",
          "cyclomatic_complexity",
          "removed",
          "dev_eq",
          "dev_rank",
          "add_line",
          "delete_line",
          "eloc_duplication_weight",
          "exception",
          "bulk_edit_lines",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "Analyses": {
        "properties": {
          "proto_version": {
            "type": "integer"
          },
          "version": {
            "type": "string"
          },
          "semver": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "analysis_type": {
            "type": "string"
          },
          "path_blacklist": {
            "format": "json",
            "type": "string"
          },
          "commit_blacklist": {
            "format": "json",
            "type": "string"
          },
          "default_ref": {
            "type": "string"
          },
          "default_ref_hexsha": {
            "type": "string"
          },
          "real_default_ref": {
            "type": "string"
          },
          "single_branch": {
            "type": "boolean"
          },
          "commit_before": {
            "type": "integer"
          },
          "commit_after": {
            "type": "integer"
          },
          "report_id": {
            "type": "string"
          },
          "total_dev_eq": {
            "type": "integer"
          },
          "doc_coverage_score": {
            "type": "number"
          },
          "doc_coverage_count": {
            "type": "integer"
          },
          "dryness_score": {
            "type": "number"
          },
          "dryness_group_count": {
            "type": "integer"
          },
          "dryness_func_count": {
            "type": "integer"
          },
          "static_test_coverage_score": {
            "type": "number"
          },
          "static_test_coverage_func_count": {
            "type": "integer"
          },
          "static_test_uncoverage_func_count": {
            "type": "integer"
          },
          "modularity_score": {
            "type": "number"
          },
          "robustness_score": {
            "type": "number"
          },
          "velocity_score": {
            "type": "number"
          },
          "ccg_summary": {
            "format": "json",
            "type": "string"
          },
          "cag_summary": {
            "format": "json",
            "type": "string"
          },
          "earliest_hexsha": {
            "type": "string"
          },
          "latest_hexsha": {
            "type": "string"
          },
          "source_id": {
            "type": "string"
          },
          "source_type": {
            "type": "string"
          },
          "code_quality_issue_count": {
            "type": "integer"
          },
          "custom_code_quality_issue_count": {
            "type": "integer"
          },
          "writer": {
            "type": "string"
          },
          "commit_count": {
            "type": "integer"
          },
          "file_count": {
            "type": "integer"
          },
          "linguist_langs": {
            "format": "json",
            "type": "string"
          },
          "aspect_ast_node_count": {
            "type": "integer"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "proto_version",
          "version",
          "semver",
          "git_url",
          "analysis_type",
          "path_blacklist",
          "commit_blacklist",
          "default_ref",
          "default_ref_hexsha",
          "real_default_ref",
          "single_branch",
          "commit_before",
          "commit_after",
          "report_id",
          "total_dev_eq",
          "doc_coverage_score",
          "doc_coverage_count",
          "dryness_score",
          "dryness_group_count",
          "dryness_func_count",
          "static_test_coverage_score",
          "static_test_coverage_func_count",
          "static_test_uncoverage_func_count",
          "modularity_score",
          "robustness_score",
          "velocity_score",
          "ccg_summary",
          "cag_summary",
          "earliest_hexsha",
          "latest_hexsha",
          "source_id",
          "source_type",
          "code_quality_issue_count",
          "custom_code_quality_issue_count",
          "writer",
          "commit_count",
          "file_count",
          "linguist_langs",
          "aspect_ast_node_count",
          "analysis_id",
          "dt",
          "project_id"
        ]
      },
      "Commit": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "Git Commit的hash值"
          },
          "author_email": {
            "format": "email",
            "type": "string",
            "description": "作者的email"
          },
          "author_name": {
            "type": "string",
            "description": "作者的名称"
          },
          "author_time": {
            "type": "integer",
            "description": "作者提价时间"
          },
          "author_offset": {
            "type": "integer",
            "description": "？"
          },
          "committer_email": {
            "format": "email",
            "type": "string",
            "description": "提交者email（在rebase或cherry-pick时可能与作者不同"
          },
          "committer_name": {
            "type": "string",
            "description": "提交者姓名（在rebase或cherry-pick时可能与作者不同"
          },
          "committer_time": {
            "type": "integer",
            "description": "提交时间（在rebase或cherry-pick时可能与作者不同"
          },
          "committer_offset": {
            "type": "integer",
            "description": "？"
          },
          "message": {
            "type": "string",
            "description": "代码提交注释"
          },
          "parents": {
            "type": "string",
            "description": "父级提交hash，在merge时可以有两个父节点"
          },
          "files_changed": {
            "type": "integer",
            "description": "修改文件个数"
          },
          "insertions": {
            "type": "integer"
          },
          "deletions": {
            "type": "integer"
          },
          "supported_new_blank_lines": {
            "type": "integer",
            "description": "空白行"
          },
          "supported_new_comment_lines": {
            "type": "integer",
            "description": "注释行"
          },
          "supported_nbnc": {
            "type": "integer",
            "description": "非空非注行"
          },
          "supported_deletions_for_nbnc": {
            "type": "integer",
            "description": "计算nbnc的删除行"
          },
          "supported_insertions_for_nbnc": {
            "type": "integer",
            "description": "计算nbnc的增加行"
          },
          "supported_insertions": {
            "type": "integer"
          },
          "supported_deletions": {
            "type": "integer"
          },
          "complexity": {
            "type": "integer"
          },
          "cyclomatic_complexity": {
            "type": "integer"
          },
          "big_cc_func_count": {
            "type": "integer"
          },
          "cherry_pick_from": {
            "type": "string"
          },
          "large_insertion": {
            "type": "boolean"
          },
          "large_deletion": {
            "type": "boolean"
          },
          "revert": {
            "type": "boolean"
          },
          "merge": {
            "type": "boolean"
          },
          "blacklisted": {
            "type": "boolean"
          },
          "too_many_files_changed": {
            "type": "boolean"
          },
          "is_analyzed": {
            "type": "boolean"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "author_email",
          "author_name",
          "author_time",
          "author_offset",
          "committer_email",
          "committer_name",
          "committer_time",
          "committer_offset",
          "message",
          "parents",
          "files_changed",
          "insertions",
          "deletions",
          "supported_new_blank_lines",
          "supported_new_comment_lines",
          "supported_nbnc",
          "supported_deletions_for_nbnc",
          "supported_insertions_for_nbnc",
          "supported_insertions",
          "supported_deletions",
          "complexity",
          "cyclomatic_complexity",
          "big_cc_func_count",
          "cherry_pick_from",
          "large_insertion",
          "large_deletion",
          "revert",
          "merge",
          "blacklisted",
          "too_many_files_changed",
          "is_analyzed",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "File": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "Git Commit Hash"
          },
          "file_path": {
            "type": "string"
          },
          "ignored": {
            "type": "string"
          },
          "pojo": {
            "type": "boolean"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "file_path",
          "ignored",
          "pojo",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "LanguageFeatureCommitFeature": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "Git Commit Hash"
          },
          "language": {
            "type": "string"
          },
          "feature_key": {
            "type": "string"
          },
          "locations": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "language",
          "feature_key",
          "locations",
          "count",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "TechTagCommitPackage": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "Git Commit Hash"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          },
          "package_id": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "count": {
            "type": "integer"
          },
          "locations": {
            "type": "string"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "language",
          "package_id",
          "symbol",
          "count",
          "locations",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "TechTagPackageTag": {
        "properties": {
          "package_id": {
            "type": "string"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          },
          "tag_id": {
            "type": "string"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "package_id",
          "language",
          "tag_id",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "CommitLabel": {
        "properties": {
          "hexsha": {
            "type": "string",
            "description": "Git Commit的hash值"
          },
          "label_name": {
            "type": "string",
            "description": "标签名称"
          },
          "label_value": {
            "type": "string",
            "description": "标签值"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "analysis_id": {
            "format": "uuid",
            "type": "string"
          },
          "dt": {
            "format": "date-time",
            "type": "string"
          },
          "project_id": {
            "type": "string"
          },
          "iid": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hexsha",
          "label_name",
          "label_value",
          "id",
          "analysis_id",
          "dt",
          "project_id",
          "iid"
        ]
      },
      "TeamRecord": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string",
            "description": "团队 ID"
          },
          "teamName": {
            "type": "string",
            "description": "团队名称"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "加入团队时间"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "离开团队时间"
          }
        },
        "type": "object",
        "required": [
          "teamId",
          "teamName",
          "startTime",
          "endTime"
        ]
      },
      "AccountTeamHistory": {
        "properties": {
          "accountId": {
            "format": "uuid",
            "type": "string",
            "description": "用户 ID"
          },
          "accountName": {
            "type": "string",
            "description": "用户姓名"
          },
          "accountEmail": {
            "format": "email",
            "type": "string",
            "description": "账户邮箱"
          },
          "teamRecords": {
            "items": {
              "$ref": "#/components/schemas/TeamRecord"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "accountId",
          "accountName",
          "accountEmail",
          "teamRecords"
        ]
      },
      "AccountCustomProperty": {
        "properties": {
          "propertyId": {
            "format": "uuid",
            "type": "string"
          },
          "optionId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "propertyId",
          "optionId"
        ]
      },
      "CustomPropertySimplify": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "org_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "alias": {
            "type": "string"
          },
          "options": {
            "items": {
              "$ref": "#/components/schemas/CustomPropertyOptionSimplify"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "org_id",
          "name",
          "disabled",
          "options"
        ]
      },
      "CustomPropertyOptionSimplify": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "custom_property_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "custom_property_id",
          "name",
          "disabled"
        ]
      },
      "PaginationRequest": {
        "properties": {
          "page": {
            "minimum": 1,
            "type": "integer"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          },
          "pagesize": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize",
          "pagesize"
        ]
      },
      "UpdateDashboardPageGroupsDTO": {
        "properties": {
          "groupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateDashboardPageDTO": {
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "shortName": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "groupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "shortName"
        ]
      },
      "CreateDashboardPageDTO": {
        "properties": {
          "content": {
            "type": "object"
          },
          "groupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "shortName": {
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "content",
          "name",
          "shortName"
        ]
      },
      "DashboardPageListRequest": {
        "properties": {
          "keyword": {
            "type": "string"
          },
          "isPublished": {
            "type": "boolean"
          },
          "isPreset": {
            "type": "boolean"
          },
          "groupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "field": {
            "type": "string",
            "enum": [
              "createTime",
              "publishTime",
              "latestAccessTime"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "DashboardGroupDTO": {
        "properties": {
          "name": {
            "not": {
              "type": "string",
              "enum": [
                "PRESET",
                "null"
              ]
            },
            "minLength": 1,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "OrderDashboardGroupDTO": {
        "properties": {
          "groupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "groupIds"
        ]
      },
      "OrderDashboardGroupPageDTO": {
        "properties": {
          "groupId": {
            "format": "uuid",
            "type": "string"
          },
          "pageIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "groupId",
          "pageIds"
        ]
      },
      "DashboardPagePublicTokenListRequest": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "createTime",
              "latestAccessTime"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "DashboardPagePublicTokenDTO": {
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "name",
          "data"
        ]
      },
      "CreateDashboardPagePublicTokenDTO": {
        "properties": {
          "dashboardPageId": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "dashboardPageId",
          "name",
          "data"
        ]
      },
      "DeleteDashboardPagePublicTokenDTO": {
        "properties": {
          "tokenIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "tokenIds"
        ]
      },
      "LDAPLoginDTO": {
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ]
      },
      "PlatformSSOQuery": {
        "properties": {
          "state": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "state"
        ]
      },
      "CronConfig": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "custom",
              "manual"
            ]
          },
          "day": {
            "minimum": 0,
            "type": "integer",
            "maximum": 6
          },
          "time": {
            "pattern": "\\d\\d:\\d\\d:\\d\\d",
            "type": "string"
          },
          "cron": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ]
      },
      "CronConfigDTO": {
        "properties": {
          "timeAfter": {
            "type": "string"
          },
          "mode": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "custom",
              "manual"
            ]
          },
          "day": {
            "minimum": 0,
            "type": "integer",
            "maximum": 6
          },
          "time": {
            "pattern": "\\d\\d:\\d\\d:\\d\\d",
            "type": "string"
          },
          "cron": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ]
      },
      "JenkinsConnectionOptions": {
        "properties": {
          "name": {
            "type": "string"
          },
          "endpoint": {
            "format": "url",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "endpoint",
          "username",
          "password"
        ]
      },
      "JiraConnectionSetting": {
        "properties": {
          "storyPointField": {
            "type": "string"
          },
          "commitShaPattern": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "storyPointField",
          "commitShaPattern"
        ]
      },
      "SonarqubeConnectionOptions": {
        "properties": {
          "name": {
            "type": "string"
          },
          "endpoint": {
            "format": "url",
            "type": "string"
          },
          "token": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "endpoint",
          "token"
        ]
      },
      "StdStatusItem": {
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "enabled": {
            "type": "boolean"
          },
          "statusCategory": {
            "type": "string",
            "enum": [
              "TODO",
              "IN_PROGRESS",
              "DONE"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "color",
          "sort",
          "enabled",
          "statusCategory"
        ]
      },
      "StdTypeItem": {
        "properties": {
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "typeCategory": {
            "type": "string",
            "enum": [
              "BUG",
              "REQUIREMENT",
              "INCIDENT",
              "TECH_DEBT"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "color",
          "sort",
          "typeCategory"
        ]
      },
      "StdStatusItemForConfig": {
        "properties": {
          "statusMapping": {
            "type": "array",
            "items": {
              "items": {},
              "type": "array"
            }
          },
          "name": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "enabled": {
            "type": "boolean"
          },
          "statusCategory": {
            "type": "string",
            "enum": [
              "TODO",
              "IN_PROGRESS",
              "DONE"
            ]
          }
        },
        "type": "object",
        "required": [
          "statusMapping",
          "name",
          "color",
          "sort",
          "enabled",
          "statusCategory"
        ]
      },
      "SprintMetricFilter": {
        "properties": {
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "dateQuery"
        ]
      },
      "WorkInProgressItem": {
        "properties": {
          "date": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "issueCount": {
            "type": "integer"
          },
          "sprints": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "periods": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "date",
          "issueCount",
          "sprints",
          "periods"
        ]
      },
      "WorkInProgressStats": {
        "properties": {
          "average": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "average"
        ]
      },
      "IssueListRequest": {
        "properties": {
          "periodType": {
            "type": "string",
            "enum": [
              "sprint",
              "natural"
            ]
          },
          "step": {
            "type": "string",
            "enum": [
              "week",
              "month"
            ]
          },
          "periodId": {},
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "sort": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "periodType",
          "step",
          "sort"
        ]
      },
      "TapdConfigStatusRequest": {
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/Array"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "value"
        ]
      },
      "TapdConfigTypeRequest": {
        "properties": {
          "value": {
            "items": {
              "$ref": "#/components/schemas/Array"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "value"
        ]
      },
      "BambooConnectionOptions": {
        "properties": {
          "name": {
            "type": "string"
          },
          "endpoint": {
            "format": "url",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "endpoint",
          "username",
          "password"
        ]
      },
      "NotificationData": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "create_time": {
            "type": "number"
          },
          "view_time": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "severity",
          "info",
          "user_id",
          "email",
          "create_time",
          "view_time"
        ]
      },
      "OperateUser": {
        "properties": {
          "userId": {
            "format": "uuid",
            "type": "string"
          },
          "orgId": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "teamId": {
            "format": "uuid",
            "type": "string"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "userId",
          "orgId",
          "name",
          "email",
          "teamUserId",
          "teamId",
          "primaryEmail"
        ]
      },
      "ResponseFileExport": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "expireTime": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "enum": [
              "created",
              "processing",
              "success",
              "failed",
              "canceled",
              "outdated"
            ],
            "type": "string"
          },
          "statusInfo": {},
          "category": {
            "enum": [
              "ee_log",
              "ae_log",
              "repo_import_result",
              "user_import_result",
              "data_report_efficient",
              "data_report_quality",
              "login_log",
              "operation_log",
              "contributor_list",
              "account_list",
              "commit_list",
              "repo_list",
              "analysis_stats",
              "behavior_log",
              "issue_tracking/board_issues",
              "issue_tracking_project_board",
              "issue_tracking_project_board_error",
              "sonar_project_no_scm",
              "analysis_data",
              "csv_issues"
            ],
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "orgId": {
            "format": "uuid",
            "type": "string"
          },
          "star": {
            "type": "boolean"
          },
          "userId": {
            "format": "uuid",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/OperateUser"
          },
          "extraInfo": {},
          "teamId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "createTime",
          "updateTime",
          "status",
          "statusInfo",
          "category",
          "filename",
          "link",
          "orgId",
          "star",
          "userId",
          "extraInfo",
          "teamId"
        ]
      },
      "ProjectFolderFilter": {
        "properties": {
          "includePath": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "包含的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持dev_value和dev_equivalent"
          },
          "excludePath": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "排除的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持dev_value和dev_equivalent"
          }
        },
        "type": "object"
      },
      "RangeFilter": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库id列表"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目组id列表"
          },
          "developers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "开发者email列表（不处理email和account的关系）"
          },
          "since": {
            "format": "date-time",
            "type": "string",
            "description": "commit起始时间"
          },
          "until": {
            "format": "date-time",
            "type": "string",
            "description": "commit结束时间"
          },
          "hashes": {
            "description": "指定项目的commit hash列表"
          },
          "path_filter": {
            "description": "指定项目的文件路径过滤条件"
          },
          "test_code": {
            "description": "查询测试/非测试代码"
          }
        },
        "type": "object",
        "description": "表达查询数据范围的过滤条件"
      },
      "CodeIssueCount": {
        "properties": {
          "issue_blocker_count": {
            "type": "integer"
          },
          "issue_critical_count": {
            "type": "integer"
          },
          "issue_major_count": {
            "type": "integer"
          },
          "issue_minor_count": {
            "type": "integer"
          },
          "issue_info_count": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "issue_blocker_count",
          "issue_critical_count",
          "issue_major_count",
          "issue_minor_count",
          "issue_info_count"
        ]
      },
      "QualityMetricResult": {
        "properties": {
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "integer",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "integer",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "duplicate_groups": {
            "type": "number",
            "description": "重复分组个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          },
          "function_depend": {
            "type": "number",
            "description": "代码影响力 (只有以开发者维度聚合查询时有意义)"
          }
        },
        "type": "object",
        "required": [
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "cyclomatic_total"
        ]
      },
      "QualityMetricByRepository": {
        "properties": {
          "modularity": {
            "type": "number",
            "description": "模块度"
          },
          "velocity": {
            "type": "number",
            "description": "开发增速"
          },
          "date": {
            "type": "string",
            "description": "质量数据时间维度查询"
          },
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "integer",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "integer",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "duplicate_groups": {
            "type": "number",
            "description": "重复分组个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          },
          "function_depend": {
            "type": "number",
            "description": "代码影响力 (只有以开发者维度聚合查询时有意义)"
          }
        },
        "type": "object",
        "required": [
          "modularity",
          "velocity",
          "date",
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "cyclomatic_total"
        ]
      },
      "QualityMetricByProject": {
        "properties": {
          "modularity": {
            "type": "number",
            "description": "模块度 (多代码库按开发当量加权平均)"
          },
          "date": {
            "type": "string",
            "description": "质量数据时间维度查询"
          },
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "integer",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "integer",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "duplicate_groups": {
            "type": "number",
            "description": "重复分组个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          },
          "function_depend": {
            "type": "number",
            "description": "代码影响力 (只有以开发者维度聚合查询时有意义)"
          }
        },
        "type": "object",
        "required": [
          "modularity",
          "date",
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "cyclomatic_total"
        ]
      },
      "QualityMetricByLanguage": {
        "properties": {
          "language": {
            "type": "string"
          },
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "integer",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "integer",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "duplicate_groups": {
            "type": "number",
            "description": "重复分组个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          },
          "function_depend": {
            "type": "number",
            "description": "代码影响力 (只有以开发者维度聚合查询时有意义)"
          }
        },
        "type": "object",
        "required": [
          "language",
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "cyclomatic_total"
        ]
      },
      "EfficiencyMetrics": {
        "properties": {
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "EfficiencyByRepository": {
        "properties": {
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "hashes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "account_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "date": {
            "type": "string"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "name",
          "git_url",
          "hashes",
          "account_ids",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "EfficiencyByDeveloper": {
        "properties": {
          "rank": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "rank",
          "email",
          "name",
          "title",
          "account_id",
          "job_number",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "EfficiencyByProject": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "account_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "date": {
            "type": "string"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "account_ids",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "EfficiencyByTeam": {
        "properties": {
          "team_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "name",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "EfficiencyByCommit": {
        "properties": {
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "author_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "commit_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "repo_id": {
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          },
          "is_excluded": {
            "type": "boolean"
          },
          "dev_value": {
            "type": "number"
          },
          "ratio_value_loc": {
            "type": "number"
          },
          "effective_add_line": {
            "type": "number"
          },
          "effective_delete_line": {
            "type": "number"
          },
          "punish_info": {
            "type": "object"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "name",
          "title",
          "email",
          "hash",
          "author_timestamp",
          "commit_timestamp",
          "repo_id",
          "repo_name",
          "effective_add_line",
          "effective_delete_line",
          "punish_info",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "CommitEfficiency": {
        "properties": {
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "blank_line": {
            "type": "integer",
            "description": "可度量增加行数中的空白行（依据分析引擎通过git命令获取的空行行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "comment_line": {
            "type": "integer",
            "description": "可度量增加行数中的纯注释行（依据分析引擎通过git命令获取的纯注释行数，不包含有行内注释的代码行，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "nbnc_line": {
            "type": "integer",
            "description": "可度量非空非注行数（计算方式为：nbncs_insertions - blanks - comments ）"
          },
          "deletions_nbnc_line": {
            "type": "integer",
            "description": "可度量删除行数（依据分析引擎通过git命令获取的可度量的删除行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "insertions_nbnc_line": {
            "type": "integer",
            "description": "可度量增加行数（依据分析引擎通过git命令获取的可度量的增加行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "author_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "commit_timestamp": {
            "format": "date-time",
            "type": "string"
          },
          "repo_id": {
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          },
          "is_excluded": {
            "type": "boolean"
          },
          "dev_value": {
            "type": "number"
          },
          "ratio_value_loc": {
            "type": "number"
          },
          "effective_add_line": {
            "type": "number"
          },
          "effective_delete_line": {
            "type": "number"
          },
          "punish_info": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "dev_eq",
          "add_line",
          "delete_line",
          "blank_line",
          "comment_line",
          "nbnc_line",
          "deletions_nbnc_line",
          "insertions_nbnc_line",
          "function_num",
          "abs_dev_value",
          "commit_num",
          "name",
          "title",
          "email",
          "hash",
          "author_timestamp",
          "commit_timestamp",
          "repo_id",
          "repo_name",
          "effective_add_line",
          "effective_delete_line",
          "punish_info"
        ]
      },
      "EfficiencyByJira": {
        "properties": {
          "metric_value": {
            "format": "uuid",
            "type": "string"
          },
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "abs_dev_value": {
            "type": "number",
            "description": "开发价值"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "add_line": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "add_line_without_merge_commit": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白，不包含合并提交）"
          },
          "delete_line": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "delete_line_without_merge_commit": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白，不包含合并提交）"
          },
          "function_num": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "cyclomatic_diff": {
            "type": "number",
            "description": "圈复杂度变化"
          }
        },
        "type": "object",
        "required": [
          "metric_value",
          "dev_eq",
          "abs_dev_value",
          "commit_num",
          "add_line",
          "add_line_without_merge_commit",
          "delete_line",
          "delete_line_without_merge_commit",
          "function_num",
          "developer_num",
          "cyclomatic_diff"
        ]
      },
      "SourceCodeSegment": {
        "properties": {
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "start_line": {
            "type": "string"
          },
          "end_line": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "git_url",
          "hash",
          "start_line",
          "end_line",
          "language"
        ]
      },
      "FunctionItem": {
        "properties": {
          "location": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "params": {
            "type": "string"
          },
          "in_degree": {
            "type": "number"
          },
          "out_degree": {
            "type": "number"
          },
          "cyclomatic": {
            "type": "number"
          },
          "is_toplevel": {
            "type": "boolean"
          },
          "duplicates": {
            "type": "number"
          },
          "frequentAuthorEmail": {
            "type": "string"
          },
          "frequentAuthorName": {
            "type": "string"
          },
          "latest_commit": {
            "type": "string"
          },
          "is_test_covered": {
            "type": "boolean"
          },
          "is_doc_covered": {
            "type": "boolean"
          },
          "earliest_author_time": {
            "format": "date-time",
            "type": "string"
          },
          "latest_author_time": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "start_line": {
            "type": "string"
          },
          "end_line": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "location",
          "name",
          "params",
          "in_degree",
          "out_degree",
          "cyclomatic",
          "is_toplevel",
          "duplicates",
          "frequentAuthorEmail",
          "frequentAuthorName",
          "latest_commit",
          "is_test_covered",
          "is_doc_covered",
          "earliest_author_time",
          "latest_author_time",
          "id",
          "filename",
          "git_url",
          "hash",
          "start_line",
          "end_line",
          "language"
        ]
      },
      "FunctionFiltler": {
        "properties": {
          "create_since": {
            "format": "date-time",
            "type": "string",
            "description": "创建开始时间, 示例:\"2020-01-01Z+08:00\""
          },
          "create_until": {
            "format": "date-time",
            "type": "string",
            "description": "创建结束时间, 示例:\"2020-01-01Z+08:00\""
          },
          "update_since": {
            "format": "date-time",
            "type": "string",
            "description": "更新开始时间, 示例:\"2020-01-01Z+08:00\""
          },
          "update_until": {
            "format": "date-time",
            "type": "string",
            "description": "更新结束时间, 示例:\"2020-01-01Z+08:00\""
          },
          "file_path": {
            "type": "string",
            "description": "文件路径"
          },
          "lang": {
            "type": "string",
            "description": "语言"
          }
        },
        "type": "object"
      },
      "FunctionFilterDuplicateGroups": {
        "properties": {
          "with_num_duplicate_groups": {
            "type": "boolean"
          },
          "create_since": {
            "format": "date-time",
            "type": "string",
            "description": "创建开始时间, 示例:\"2020-01-01Z+08:00\""
          },
          "create_until": {
            "format": "date-time",
            "type": "string",
            "description": "创建结束时间, 示例:\"2020-01-01Z+08:00\""
          },
          "update_since": {
            "format": "date-time",
            "type": "string",
            "description": "更新开始时间, 示例:\"2020-01-01Z+08:00\""
          },
          "update_until": {
            "format": "date-time",
            "type": "string",
            "description": "更新结束时间, 示例:\"2020-01-01Z+08:00\""
          },
          "file_path": {
            "type": "string",
            "description": "文件路径"
          },
          "lang": {
            "type": "string",
            "description": "语言"
          }
        },
        "type": "object"
      },
      "IssueListItem": {
        "properties": {
          "id": {
            "type": "string"
          },
          "rule_key": {
            "type": "string",
            "description": "检查规则Key"
          },
          "filename": {
            "type": "string",
            "description": "文件名"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string",
            "description": "问题严重级别"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string",
            "description": "问题类型"
          },
          "name": {
            "type": "string",
            "description": "标题"
          },
          "name_cn": {
            "type": "string",
            "description": "标题（中文）"
          },
          "project_id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "project_name": {
            "type": "string",
            "description": "代码库名称"
          },
          "author_email": {
            "type": "string",
            "description": "问题归属人email（在Sonarqube未开启代码库集成可能为空）"
          },
          "author_name": {
            "type": "string",
            "description": "问题归属人email（在Sonarqube未开启代码库集成可能为空）"
          },
          "author_time": {
            "format": "date-time",
            "type": "string",
            "description": "问题出现时间（在Sonarqube代码库集成启用时为代码行最后修改时间，未启用SCM集成时为Sonar分析时间）"
          },
          "text_ranges": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "description": "问题代码段范围（包含文件名，行数）"
          }
        },
        "type": "object",
        "required": [
          "id",
          "rule_key",
          "filename",
          "severity",
          "type",
          "name",
          "name_cn",
          "project_id",
          "project_name",
          "author_email",
          "author_name",
          "author_time"
        ]
      },
      "ProjectHashParam": {
        "properties": {
          "revList": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "rev-list参数，branch ^branch branch..branch branch...branch 四种类型组成的数组，tag/hash也可以"
          },
          "maxCount": {
            "type": "integer",
            "description": "同git rev-list，最多寻找N个"
          },
          "maxParents": {
            "type": "integer",
            "description": "父节点至多N个"
          },
          "minParents": {
            "type": "integer",
            "description": "父节点最少N个"
          },
          "skip": {
            "type": "integer",
            "description": "忽略时间最近的N个"
          },
          "since": {
            "type": "number",
            "description": "时间戳"
          },
          "after": {
            "type": "number",
            "description": "时间戳"
          },
          "until": {
            "type": "number",
            "description": "时间戳"
          },
          "before": {
            "type": "number",
            "description": "时间戳"
          },
          "authors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "匹配作者的glob数组"
          },
          "commiters": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "匹配提交者的glob数组"
          },
          "greps": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "匹配提交的glob数组"
          },
          "ignoreCase": {
            "type": "boolean",
            "description": "是否忽略大小写"
          }
        },
        "type": "object",
        "required": [
          "revList"
        ]
      },
      "RepoContributor": {
        "properties": {
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "commits": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "account_id",
          "commits"
        ]
      },
      "CodeCheckRuleDetail": {
        "properties": {
          "name": {
            "type": "string"
          },
          "name_cn": {
            "type": "string"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string"
          },
          "desc": {
            "type": "string"
          },
          "desc_cn": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "name_cn",
          "type",
          "severity",
          "desc",
          "desc_cn"
        ]
      },
      "IssueDetail": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "project_id": {
            "format": "uuid",
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "rule": {
            "$ref": "#/components/schemas/CodeCheckRuleDetail"
          },
          "annotations": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "language",
          "project_id",
          "filename",
          "rule",
          "annotations",
          "code"
        ]
      },
      "IssueQueryFilter": {
        "properties": {
          "authors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "空数组表示不限"
          },
          "rules": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "空数组表示不限"
          },
          "type": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "空数组表示不限"
          },
          "severity": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "空数组表示不限"
          },
          "filename": {
            "type": "string"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "authors",
          "rules",
          "type",
          "severity",
          "filename",
          "page",
          "pageSize"
        ]
      },
      "Order": {
        "properties": {
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object"
      },
      "ExampleOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "createdAt"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "MaintainPathsRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "paths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "paths"
        ]
      },
      "RepoOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "create_time"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "ExportRepoFilter": {
        "properties": {
          "exportAll": {
            "type": "boolean"
          },
          "projectIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search": {
            "type": "string"
          },
          "watchedOnly": {
            "type": "boolean"
          },
          "since": {
            "format": "date-time",
            "type": "string"
          },
          "until": {
            "format": "date-time",
            "type": "string"
          },
          "authType": {
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/RepoOrder"
          }
        },
        "type": "object"
      },
      "RepoAnalysisSettingInfo": {
        "properties": {
          "repoId": {
            "type": "string"
          },
          "repoName": {
            "type": "string"
          },
          "gitUrl": {
            "type": "string"
          },
          "analysisBranch": {
            "type": "string"
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "analysisExcludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "aspectAnalysis": {
            "type": "boolean"
          },
          "codeQualityAnalysis": {
            "type": "boolean"
          },
          "analysisGitRef": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "repoName",
          "gitUrl",
          "analysisBranch",
          "analysisIncludeRefs",
          "analysisExcludeRefs",
          "aspectAnalysis",
          "codeQualityAnalysis",
          "analysisGitRef"
        ]
      },
      "RepositoryLastQualityAnalysisInfoRequest": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "projectIds",
          "repoIds",
          "page",
          "pageSize"
        ]
      },
      "FailedReauthorizationRepo": {
        "properties": {
          "id": {
            "type": "string",
            "description": "代码库ID"
          },
          "git_url": {
            "type": "string",
            "description": "代码库git地址"
          },
          "name": {
            "type": "string",
            "description": "代码库名字"
          },
          "project_id": {
            "type": "string",
            "description": "项目ID"
          },
          "project_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "项目名字"
          }
        },
        "type": "object",
        "required": [
          "id",
          "git_url",
          "name",
          "project_id"
        ]
      },
      "ReauthorizeReposResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "description": "授权是否成功"
          },
          "successCount": {
            "type": "number",
            "description": "授权成功数量"
          },
          "failureCount": {
            "type": "number",
            "description": "授权失败数量"
          },
          "failedRepos": {
            "items": {
              "$ref": "#/components/schemas/FailedReauthorizationRepo"
            },
            "type": "array",
            "description": "授权失败代码库"
          }
        },
        "type": "object",
        "required": [
          "success",
          "successCount",
          "failureCount",
          "failedRepos"
        ]
      },
      "UpdateIssueTrackingConfig": {
        "properties": {
          "issueSizeBy": {
            "type": "string",
            "enum": [
              "dev_eq",
              "story_point",
              "worklog"
            ]
          }
        },
        "type": "object",
        "required": [
          "issueSizeBy"
        ]
      },
      "IssueTrackingGlobalConfig": {
        "properties": {
          "deliveryCycleTimeType": {
            "enum": [
              "flowtime",
              "leadtime"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "deliveryCycleTimeType"
        ]
      },
      "CreateIssueExportRequest": {
        "properties": {
          "lakeBoardId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "lakeBoardId"
        ]
      },
      "GetProjectTemplateRequest": {
        "properties": {
          "projectIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "projectIds"
        ]
      },
      "RepoStatusPushTime": {
        "properties": {
          "day": {
            "type": "integer"
          },
          "date": {
            "type": "integer"
          },
          "once_date": {
            "type": "string"
          },
          "hour": {
            "type": "integer"
          },
          "minutes": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hour",
          "minutes"
        ]
      },
      "RepoStatusPushInfo": {
        "properties": {
          "id": {
            "type": "string"
          },
          "types": {
            "items": {
              "type": "string",
              "enum": [
                "webhook",
                "email"
              ]
            },
            "minItems": 1,
            "type": "array"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "once"
            ]
          },
          "time": {
            "$ref": "#/components/schemas/RepoStatusPushTime"
          },
          "role_ids": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "update_time": {}
        },
        "type": "object",
        "required": [
          "types",
          "frequency",
          "role_ids"
        ]
      },
      "AccountReceiver": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "TaskCronConfig": {
        "properties": {
          "mode": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "custom",
              "manual"
            ]
          },
          "day": {
            "type": "integer"
          },
          "time": {
            "type": "string"
          },
          "cron": {
            "type": "string"
          },
          "timeAfter": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "mode"
        ]
      },
      "LakeStatusPushTime": {
        "properties": {
          "day": {
            "type": "integer"
          },
          "date": {
            "type": "integer"
          },
          "onceDate": {
            "type": "string"
          },
          "hour": {
            "type": "integer"
          },
          "minutes": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "hour",
          "minutes"
        ]
      },
      "LakeStatusPushInfo": {
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceId": {
            "type": "string"
          },
          "types": {
            "items": {
              "type": "string",
              "enum": [
                "email"
              ]
            },
            "minItems": 1,
            "type": "array"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "hourly",
              "daily",
              "weekly",
              "monthly",
              "once"
            ]
          },
          "time": {
            "$ref": "#/components/schemas/LakeStatusPushTime"
          },
          "emailReceivers": {
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array"
          },
          "accountReceivers": {
            "not": {
              "type": "null"
            },
            "items": {
              "$ref": "#/components/schemas/AccountReceiver"
            },
            "type": "array"
          },
          "createTime": {},
          "updateTime": {}
        },
        "type": "object",
        "required": [
          "types",
          "frequency",
          "time",
          "emailReceivers",
          "accountReceivers"
        ]
      },
      "LDAPConfigDTO": {
        "properties": {
          "bindType": {
            "type": "string",
            "enum": [
              "admin",
              "user"
            ]
          },
          "serverUrl": {
            "format": "url",
            "type": "string"
          },
          "userDnTemplate": {
            "pattern": "{{username}}",
            "type": "string"
          },
          "searchFilter": {
            "pattern": "{{username}}",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "bindType",
          "serverUrl"
        ]
      },
      "OpenIDConfigDTO": {
        "properties": {
          "authEndpoint": {
            "type": "string"
          },
          "tokenEndpoint": {
            "type": "string"
          },
          "userinfoEndpoint": {
            "type": "string"
          },
          "supportedScopes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "tokenEndpointMethod": {
            "type": "string",
            "enum": [
              "header",
              "body"
            ]
          }
        },
        "type": "object",
        "required": [
          "authEndpoint",
          "tokenEndpoint",
          "userinfoEndpoint",
          "supportedScopes",
          "tokenEndpointMethod"
        ]
      },
      "OAuth2ConfigDTO": {
        "properties": {
          "siteUrl": {
            "format": "url",
            "type": "string"
          },
          "clientId": {
            "type": "string"
          },
          "clientSecret": {},
          "authEndpoint": {
            "type": "string"
          },
          "tokenEndpoint": {
            "type": "string"
          },
          "userinfoEndpoint": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "tokenEndpointMethod": {
            "type": "string",
            "enum": [
              "header",
              "body"
            ]
          },
          "userinfoExtract": {}
        },
        "type": "object",
        "required": [
          "siteUrl",
          "clientId",
          "authEndpoint",
          "tokenEndpoint",
          "userinfoEndpoint",
          "scope",
          "tokenEndpointMethod"
        ]
      },
      "TestUserCustomExcludedPathDTO": {
        "properties": {
          "globRule": {
            "type": "string"
          },
          "path": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "globRule",
          "path"
        ]
      },
      "RepositoryStatus": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "name": {
            "type": "string",
            "description": "代码库名称"
          },
          "git_url": {
            "type": "string",
            "description": "代码库git地址"
          },
          "status": {
            "type": "string",
            "description": "代码库clone状态"
          },
          "analysis_status": {
            "type": "string",
            "description": "代码库分析状态"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "git_url",
          "status",
          "analysis_status"
        ]
      },
      "DevEqLangDist": {
        "properties": {
          "dev_eq": {
            "type": "integer",
            "description": "开发当量"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          }
        },
        "type": "object",
        "required": [
          "dev_eq",
          "language"
        ]
      },
      "DevEqByLangResponse": {
        "properties": {
          "primary_email": {
            "format": "email",
            "type": "string",
            "description": "开发者邮箱"
          },
          "account_id": {
            "format": "uuid",
            "type": "string",
            "description": "开发者用户ID"
          },
          "name": {
            "type": "string",
            "description": "开发者姓名"
          },
          "dev_eq_dist": {
            "items": {
              "$ref": "#/components/schemas/DevEqLangDist"
            },
            "type": "array",
            "description": "开发当量的编程语言分布"
          }
        },
        "type": "object",
        "required": [
          "primary_email",
          "account_id",
          "name",
          "dev_eq_dist"
        ]
      },
      "DeveloperDailyStats": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "date": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "日期"
          },
          "name": {
            "type": "string",
            "description": "开发者姓名"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string",
            "description": "开发者Email"
          },
          "devEquivalent": {
            "type": "integer",
            "description": "开发当量"
          },
          "absDevValue": {
            "type": "number",
            "description": "开发价值（绝对值）"
          },
          "commitCount": {
            "type": "integer",
            "description": "提交个数"
          },
          "functionCount": {
            "type": "integer",
            "description": "修改函数个数"
          },
          "cyclomaticTotal": {
            "type": "number",
            "description": "总复杂度"
          },
          "cyclomaticDiff": {
            "type": "number",
            "description": "复杂度变化"
          },
          "addLine": {
            "type": "integer",
            "description": "添加行数"
          },
          "deleteLine": {
            "type": "integer",
            "description": "删除行数"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "date",
          "name",
          "primaryEmail",
          "devEquivalent",
          "absDevValue",
          "commitCount",
          "functionCount",
          "cyclomaticTotal",
          "cyclomaticDiff",
          "addLine",
          "deleteLine"
        ]
      },
      "FileFunctionQuality": {
        "properties": {
          "source_file": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "repo_id": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "integer",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "integer",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "duplicate_groups": {
            "type": "number",
            "description": "重复分组个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          },
          "function_depend": {
            "type": "number",
            "description": "代码影响力 (只有以开发者维度聚合查询时有意义)"
          }
        },
        "type": "object",
        "required": [
          "source_file",
          "language",
          "repo_name",
          "repo_id",
          "git_url",
          "hash",
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "cyclomatic_total"
        ]
      },
      "NumRange": {
        "properties": {
          "min": {
            "type": "number"
          },
          "max": {
            "type": "number"
          }
        },
        "type": "object"
      },
      "DateRange": {
        "properties": {
          "start": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "end": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DuplicQueryFilter": {
        "properties": {
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "pageSize": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "contributors",
          "pageSize",
          "page"
        ]
      },
      "FunctionsQueryQuery": {
        "properties": {
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "descend",
              "ascend"
            ]
          },
          "page": {
            "type": "integer"
          },
          "pageSize": {
            "type": "integer"
          },
          "name": {},
          "location": {},
          "cyclomatic": {
            "$ref": "#/components/schemas/NumRange"
          },
          "duplicates": {
            "$ref": "#/components/schemas/NumRange"
          },
          "in_degree": {
            "$ref": "#/components/schemas/NumRange"
          },
          "out_degree": {
            "$ref": "#/components/schemas/NumRange"
          },
          "earliest_author_time": {
            "$ref": "#/components/schemas/DateRange"
          },
          "latest_author_time": {
            "$ref": "#/components/schemas/DateRange"
          },
          "frequentAuthors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isTestCovered": {
            "type": "boolean"
          },
          "isDocCovered": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "sortField",
          "sortOrder",
          "page",
          "pageSize"
        ]
      },
      "DuplicationPoint": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "func_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "source_file": {
            "type": "string"
          },
          "start_line": {
            "type": "integer"
          },
          "end_line": {
            "type": "integer"
          },
          "language": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repo_id",
          "func_name",
          "git_url",
          "project_name",
          "hash",
          "source_file",
          "start_line",
          "end_line",
          "language",
          "email",
          "name"
        ]
      },
      "DataWithoutCode": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "max_num_dup_lines": {
            "type": "integer"
          },
          "dups": {
            "items": {
              "$ref": "#/components/schemas/DuplicationPoint"
            },
            "type": "array"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "max_num_dup_lines",
          "dups",
          "emails"
        ]
      },
      "DuplicationResult": {
        "properties": {
          "num_groups": {
            "type": "integer"
          },
          "num_lines": {
            "type": "integer"
          },
          "num_opt_lines": {
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/DataWithoutCode"
            },
            "type": "array"
          },
          "dupIdToCode": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "num_groups",
          "num_lines",
          "num_opt_lines",
          "data",
          "dupIdToCode"
        ]
      },
      "FunctionDetailFilter": {
        "properties": {
          "authorEmail": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "isTest": {
            "type": "boolean"
          },
          "isTestCovered": {
            "type": "boolean"
          },
          "isDocCovered": {
            "type": "boolean"
          },
          "hasDuplication": {
            "type": "boolean"
          },
          "filePath": {
            "type": "string",
            "description": "文件路径正则表达式"
          }
        },
        "type": "object",
        "required": [
          "authorEmail"
        ]
      },
      "FunctionDetailItem": {
        "properties": {
          "nodeId": {
            "format": "uuid",
            "type": "string",
            "description": "函数节点ID"
          },
          "fileName": {
            "type": "string",
            "description": "文件名"
          },
          "functionName": {
            "type": "string",
            "description": "函数名"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          },
          "authorEmail": {
            "type": "string",
            "description": "作者email（修改行数最多的author）"
          },
          "isTest": {
            "type": "boolean",
            "description": "是否为测试函数"
          },
          "isTestCovered": {
            "type": "boolean",
            "description": "是否有测试覆盖"
          },
          "hasDuplication": {
            "type": "boolean",
            "description": "是否有重复代码"
          },
          "commentLines": {
            "type": "integer",
            "description": "注释行数"
          },
          "inDegree": {
            "type": "integer",
            "description": "入度（被调用次数）"
          },
          "outDegree": {
            "type": "integer",
            "description": "出度（调用函数个数）"
          },
          "complexity": {
            "type": "integer",
            "description": "圈复杂度"
          },
          "editCount": {
            "type": "integer",
            "description": "修改次数"
          },
          "devEquivalent": {
            "type": "integer",
            "description": "开发当量"
          }
        },
        "type": "object",
        "required": [
          "nodeId",
          "fileName",
          "functionName",
          "language",
          "authorEmail",
          "isTest",
          "isTestCovered",
          "hasDuplication",
          "commentLines",
          "inDegree",
          "outDegree",
          "complexity",
          "editCount",
          "devEquivalent"
        ]
      },
      "FunctionDetailResponse": {
        "properties": {
          "total": {
            "type": "number",
            "description": "总数"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/FunctionDetailItem"
            },
            "type": "array",
            "description": "函数详情"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "DeveloperQualityResult": {
        "properties": {
          "email": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "test_coverage": {
            "type": "number"
          },
          "doc_coverage": {
            "type": "number"
          },
          "dryness": {
            "type": "number"
          },
          "repo_count": {
            "type": "integer"
          },
          "functions": {
            "type": "integer"
          },
          "named_functions": {
            "type": "integer"
          },
          "test_functions": {
            "type": "integer"
          },
          "anonymous_functions": {
            "type": "integer"
          },
          "tested_functions": {
            "type": "integer"
          },
          "commented_functions": {
            "type": "integer"
          },
          "commented_functions_named": {
            "type": "integer"
          },
          "duplicate_functions": {
            "type": "number"
          },
          "duplicate_groups": {
            "type": "number"
          },
          "cyclomatic_total": {
            "type": "number"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {
            "type": "number"
          },
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {
            "type": "number"
          },
          "denominator": {}
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "value"
        ]
      },
      "RankingResult": {
        "properties": {
          "v": {
            "type": "number",
            "description": "值"
          },
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "title": {
            "type": "string",
            "description": "职位"
          },
          "testCoverageFactor": {
            "type": "number"
          },
          "commentCoverageFactor": {
            "type": "number"
          },
          "codeQualityFactor": {
            "type": "number"
          },
          "devEquivalentFactor": {
            "type": "number"
          },
          "devValueFactor": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "v",
          "email",
          "username",
          "title",
          "testCoverageFactor",
          "commentCoverageFactor",
          "codeQualityFactor",
          "devEquivalentFactor",
          "devValueFactor"
        ]
      },
      "AccountOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "primary_email",
              "salary"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "ExportAccountFilter": {
        "properties": {
          "squadId": {
            "format": "uuid",
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "search": {
            "type": "string"
          },
          "exportAll": {
            "type": "boolean"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "order": {
            "$ref": "#/components/schemas/AccountOrder"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "IssueNumsByRepoOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "issue_number",
              "issue_blocker_number",
              "issue_critical_number",
              "issue_major_number",
              "issue_minor_number",
              "issue_info_number"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "IssueNumsByRepoRequest": {
        "properties": {
          "email": {
            "type": "string"
          },
          "repoIds": {},
          "orderBy": {},
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "email",
          "page",
          "pageSize"
        ]
      },
      "IssueNumsByRepoResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "page",
          "pageSize"
        ]
      },
      "ContributorIssuesResponse": {
        "properties": {
          "devEquivalent": {
            "type": "number"
          },
          "issueBlockerNum": {
            "type": "number"
          },
          "issueCriticalNum": {
            "type": "number"
          },
          "issueMajorNum": {
            "type": "number"
          },
          "issueMinorNum": {
            "type": "number"
          },
          "issueInfoNum": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "devEquivalent",
          "issueBlockerNum",
          "issueCriticalNum",
          "issueMajorNum",
          "issueMinorNum",
          "issueInfoNum"
        ]
      },
      "SearchContributorRequest": {
        "properties": {
          "projectId": {
            "type": "string"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "search": {
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ]
      },
      "BasicMetrics": {
        "properties": {
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "add_line": {
            "type": "integer"
          },
          "delete_line": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "dev_value",
          "dev_equivalent",
          "add_line",
          "delete_line"
        ]
      },
      "YearlyActivityData": {
        "properties": {
          "total_line": {
            "type": "integer"
          },
          "date": {
            "type": "string"
          },
          "num_commits": {
            "type": "integer"
          },
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "add_line": {
            "type": "integer"
          },
          "delete_line": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "total_line",
          "date",
          "num_commits",
          "dev_value",
          "dev_equivalent",
          "add_line",
          "delete_line"
        ]
      },
      "ProjectPieData": {
        "properties": {
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "num_commits": {
            "type": "integer"
          },
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "add_line": {
            "type": "integer"
          },
          "delete_line": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "num_commits",
          "dev_value",
          "dev_equivalent",
          "add_line",
          "delete_line"
        ]
      },
      "ContributorRepositoryInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "latest_report_id": {
            "format": "uuid",
            "type": "string"
          },
          "projects": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "project_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "user_dev_value": {
            "type": "number"
          },
          "user_dev_equivalent": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "git_url",
          "project_name",
          "repo_name",
          "latest_report_id",
          "projects",
          "project_ids",
          "dev_equivalent",
          "user_dev_value",
          "user_dev_equivalent"
        ]
      },
      "LibraryBarData": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "times": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "times"
        ]
      },
      "SquadMemberTagAndValueItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "tagValue": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "tagValue"
        ]
      },
      "EntityName": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "EntityBridge": {
        "properties": {
          "parent_id": {
            "format": "uuid",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "parent_id",
          "id",
          "name"
        ]
      },
      "TeamUserInfoWithRoleDepartment": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "team_id": {
            "format": "uuid",
            "type": "string"
          },
          "user_id": {
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "enable": {
            "type": "boolean",
            "description": "账户是否启用（与产品订阅费用计算有关）"
          },
          "allowLogin": {
            "type": "boolean",
            "description": "是否允许登陆"
          },
          "primary_email": {
            "format": "email",
            "type": "string",
            "description": "用户的主邮箱，作为登录账号"
          },
          "is_super_admin": {
            "type": "boolean",
            "description": "是否为team manager"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "用户的其他邮箱，关联git数据中的提交作者"
          },
          "excluded_emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "在提交作者黑名单中的email"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array",
            "description": "用户权限角色列表"
          },
          "squads": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array",
            "description": "用户所属部门列表"
          },
          "belongToSquads": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/SquadMemberTagAndValueItem"
            },
            "type": "array"
          },
          "projects": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          },
          "projectGroups": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          },
          "normal_updated": {
            "type": "boolean",
            "description": "团队和标签变更历史保存方式：false 配置模式  true 转岗模式"
          },
          "virtualProjects": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          },
          "allVpManager": {
            "type": "boolean",
            "description": "账户是否对所有虚拟项目有权限"
          },
          "lakeAccounts": {
            "items": {
              "$ref": "#/components/schemas/LakeAccountInfo"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "team_id",
          "user_id",
          "create_time",
          "update_time",
          "name",
          "enable",
          "allowLogin",
          "primary_email",
          "is_super_admin",
          "emails",
          "excluded_emails",
          "roles",
          "squads",
          "belongToSquads",
          "tags",
          "projects",
          "projectGroups",
          "normal_updated",
          "virtualProjects",
          "allVpManager",
          "lakeAccounts"
        ]
      },
      "PagedTeamUserInfo": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/TeamUserInfoWithRoleDepartment"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "TeamUserQueryFilter": {
        "properties": {
          "squadIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enable": {
            "type": "boolean"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "search": {
            "type": "string"
          },
          "onlyAccountsInEE": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "SortOption": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "primary_email",
              "salary"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object"
      },
      "TeamUserQuery": {
        "properties": {
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "filter": {
            "$ref": "#/components/schemas/TeamUserQueryFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/SortOption"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "NewTeamUserInfo": {
        "properties": {
          "job_number": {},
          "name": {
            "type": "string"
          },
          "title": {},
          "salary": {},
          "rank": {},
          "allVpManager": {
            "type": "boolean"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "primary_email": {
            "format": "email",
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "vpIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tags": {},
          "squadIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "belongToSquadIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "lakeAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "primary_email",
          "emails",
          "roleIds",
          "projectIds",
          "vpIds",
          "projectGroupIds",
          "squadIds",
          "belongToSquadIds",
          "lakeAccountIds"
        ]
      },
      "NewTeamUserReq": {
        "properties": {
          "userInfo": {
            "$ref": "#/components/schemas/NewTeamUserInfo",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "userInfo"
        ]
      },
      "BatchAddTeamUserItem": {
        "properties": {
          "job_number": {},
          "name": {
            "type": "string"
          },
          "title": {},
          "salary": {},
          "rank": {},
          "promotion_date": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "primary_email": {
            "format": "email",
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "primary_email",
          "emails"
        ]
      },
      "BatchAddTeamUser": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/BatchAddTeamUserItem"
            },
            "type": "array"
          },
          "departmentId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "data"
        ]
      },
      "UpdateTeamUserReq": {
        "properties": {
          "job_number": {},
          "name": {
            "type": "string"
          },
          "title": {},
          "salary": {},
          "rank": {},
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enable": {
            "type": "boolean"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "vpIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "allVpManager": {
            "type": "boolean"
          },
          "projectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "tags": {},
          "squadIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "belongToSquadIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "lakeAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "emails",
          "enable",
          "allowLogin",
          "roleIds",
          "projectIds",
          "vpIds",
          "projectGroupIds",
          "squadIds",
          "belongToSquadIds",
          "lakeAccountIds"
        ]
      },
      "BatchAllowLogin": {
        "properties": {
          "teamUserIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "password": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "teamUserIds",
          "allowLogin"
        ]
      },
      "UpdateTeamUserRequest": {
        "properties": {
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "userInfo": {
            "$ref": "#/components/schemas/UpdateTeamUserReq"
          },
          "normal": {
            "type": "boolean",
            "description": ""
          }
        },
        "type": "object",
        "required": [
          "teamUserId",
          "userInfo",
          "normal"
        ]
      },
      "SSOUserRequest": {
        "properties": {
          "strategy": {
            "format": "uuid",
            "type": "string",
            "description": "认证方式"
          },
          "user_id": {
            "type": "string",
            "description": "外部用户ID"
          },
          "email": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "app_id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "strategy",
          "user_id"
        ]
      },
      "CustomTagValue": {
        "properties": {
          "propertyId": {
            "format": "uuid",
            "type": "string"
          },
          "optionId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "propertyId",
          "optionId"
        ]
      },
      "AccountDetailInfo": {
        "properties": {
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean",
            "description": "账户是否启用（与产品订阅费用计算有关）"
          },
          "email": {
            "format": "email",
            "type": "string",
            "description": "用户的主邮箱，作为登录账号"
          },
          "user_type": {
            "type": "integer",
            "description": "是否为管理员: 0 隐藏，20 不可登录账户，30 可登录 ，50 超级管理员"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "用户的其他邮箱，关联git数据中的提交作者"
          },
          "roles": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户权限角色列表"
          },
          "teams": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户所属团队列表"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/CustomTagValue"
            },
            "type": "array"
          },
          "projects": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "repos": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "account_id",
          "name",
          "is_enabled",
          "email",
          "user_type",
          "emails",
          "roles",
          "teams",
          "tags",
          "projects",
          "repos",
          "create_time",
          "update_time"
        ]
      },
      "AddAccountInfoReq": {
        "properties": {
          "user_email": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": ""
          },
          "job_number": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "salary": {
            "type": "integer"
          },
          "password": {
            "type": "string"
          },
          "rank": {
            "type": "string"
          },
          "promotion_date": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "retainHistory": {
            "type": "boolean"
          },
          "all_vp_manager": {
            "type": "boolean"
          },
          "role_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": ""
          }
        },
        "type": "object",
        "required": [
          "user_email",
          "name",
          "emails"
        ]
      },
      "UpdateAccountInfoReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": ""
          },
          "retain_history": {
            "type": "boolean",
            "description": "团队设置和自定义属性设置，是否保存历史"
          },
          "all_vp_manager": {
            "type": "boolean",
            "description": "是否对所有虚拟项目有权限"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": ""
          },
          "name": {
            "type": "string",
            "description": ""
          },
          "job_number": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "salary": {
            "type": "integer"
          },
          "rank": {
            "type": "string"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "role_ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": ""
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "UpdateAccountStatus": {
        "properties": {
          "is_enabled": {
            "type": "boolean",
            "description": "设置用户是否启用"
          },
          "allow_login": {
            "type": "boolean",
            "description": "设置用户是否可登录"
          }
        },
        "type": "object"
      },
      "AccountQueryFilter": {
        "properties": {
          "squadIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "enable": {
            "type": "boolean"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "search": {
            "type": "string"
          },
          "onlyAccountsInEE": {
            "type": "boolean"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "AccountQuerySort": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "primary_email",
              "salary"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object"
      },
      "LakeRunnableOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "status",
              "createTime"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "AeAnalysisRunnableRequest": {
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "CREATED",
              "SUBMITTED",
              "RUNNING",
              "CANCELED",
              "SUCCESS",
              "FAILURE"
            ]
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "search": {
            "type": "string"
          },
          "orderBy": {
            "$ref": "#/components/schemas/LakeRunnableOrder"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "GetProjectResourceRequest": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "projectIds"
        ]
      },
      "ResourceBindToProject": {
        "properties": {
          "repos": {
            "items": {},
            "type": "array"
          },
          "lakeTasks": {
            "items": {},
            "type": "array"
          },
          "empty": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "repos",
          "lakeTasks",
          "empty"
        ]
      },
      "DevTableProjectsBindedDomainParams": {
        "properties": {
          "binded_domain": {
            "type": "string",
            "enum": [
              "cicd",
              "code_review",
              "issue_tracking"
            ]
          }
        },
        "type": "object"
      },
      "DevTableFiltersItem": {
        "properties": {
          "value": {
            "format": "uuid",
            "type": "string"
          },
          "parent_value": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "value",
          "parent_value"
        ]
      },
      "GitlabConfig": {
        "properties": {
          "appId": {
            "type": "string"
          },
          "appSecret": {
            "type": "string"
          },
          "url": {
            "format": "url",
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "appId",
          "appSecret",
          "url"
        ]
      },
      "GitlabConfigWithId": {
        "properties": {
          "id": {
            "type": "string"
          },
          "appId": {
            "type": "string"
          },
          "appSecret": {
            "type": "string"
          },
          "url": {
            "format": "url",
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "appId",
          "appSecret",
          "url"
        ]
      },
      "BatchUpdateDomainRequest": {
        "properties": {
          "taskIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "domains": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "taskIds",
          "domains"
        ]
      },
      "GitlabUser": {
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "format": "email",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "state": {
            "type": "string",
            "enum": [
              "active",
              "blocked"
            ]
          },
          "avatar_url": {
            "type": "string"
          },
          "web_url": {
            "type": "string"
          },
          "created_at": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "is_admin": {
            "type": "boolean"
          },
          "bio": {
            "type": "string"
          },
          "location": {
            "type": "string"
          },
          "public_email": {
            "format": "email",
            "type": "string"
          },
          "commit_email": {
            "format": "email",
            "type": "string"
          },
          "skype": {
            "type": "string"
          },
          "linkedin": {
            "type": "string"
          },
          "twitter": {
            "type": "string"
          },
          "website_url": {
            "type": "string"
          },
          "organization": {
            "type": "string"
          },
          "last_sign_in_at": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "confirmed_at": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "theme_id": {
            "type": "number"
          },
          "last_activity_on": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "color_scheme_id": {
            "type": "number"
          },
          "projects_limit": {
            "type": "number"
          },
          "current_sign_in_at": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "identities": {
            "items": {
              "type": "object"
            },
            "type": "array"
          },
          "can_create_group": {
            "type": "boolean"
          },
          "can_create_project": {
            "type": "boolean"
          },
          "two_factor_enabled": {
            "type": "boolean"
          },
          "external": {
            "type": "boolean"
          },
          "private_profile": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "email",
          "name",
          "state",
          "avatar_url",
          "web_url",
          "created_at",
          "skype",
          "linkedin",
          "twitter",
          "website_url",
          "organization",
          "color_scheme_id",
          "projects_limit"
        ]
      },
      "StatusFlowtimeItem": {
        "properties": {
          "flowTime": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "flowTime"
        ]
      },
      "LogBehaviorRequest": {
        "properties": {
          "action": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "action"
        ]
      },
      "CommitOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "dev_value",
              "author_timestamp",
              "dev_equivalent",
              "ratio_value_loc",
              "num_functions",
              "nbnc_line"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "ExportCommitsFilter": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ]
          },
          "filename": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "contributor": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "order": {
            "$ref": "#/components/schemas/CommitOrder"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ]
      },
      "RepoQualityResult": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "git_url": {
            "type": "string"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "value",
          "git_url"
        ]
      },
      "RepoQualityResultExtended": {
        "properties": {
          "functions": {
            "type": "number",
            "description": "函数总个数"
          },
          "dev_equivalent": {
            "type": "number",
            "description": "开发当量"
          },
          "named_functions": {
            "type": "number",
            "description": "非匿名函数总个数"
          },
          "tested_functions": {
            "type": "number",
            "description": "有测试代码覆盖的函数总个数"
          },
          "anonymous_functions": {
            "type": "number",
            "description": "匿名函数总个数"
          },
          "commented_functions": {
            "type": "number",
            "description": "有注释覆盖的函数总个数"
          },
          "commented_functions_named": {
            "type": "number",
            "description": "有注释覆盖的函数总个数（非匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "重复函数总个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "函数圈复杂度"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "git_url": {
            "type": "string"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "functions",
          "dev_equivalent",
          "named_functions",
          "tested_functions",
          "anonymous_functions",
          "commented_functions",
          "commented_functions_named",
          "duplicate_functions",
          "cyclomatic_total",
          "id",
          "name",
          "value",
          "git_url"
        ]
      },
      "TeamRobustness": {
        "properties": {
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "add_line": {
            "type": "number"
          },
          "delete_line": {
            "type": "number"
          },
          "num_commits": {
            "type": "number"
          },
          "share_commits": {
            "type": "number"
          },
          "ratio_value_commits": {
            "type": "number"
          },
          "share_loc": {
            "type": "number"
          },
          "ratio_value_loc": {
            "type": "number"
          },
          "contributor_email": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "min_commit_timestamp": {
            "type": "number"
          },
          "max_commit_timestamp": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "dev_value",
          "dev_equivalent",
          "add_line",
          "delete_line",
          "num_commits",
          "share_commits",
          "ratio_value_commits",
          "share_loc",
          "ratio_value_loc",
          "contributor_email",
          "name",
          "min_commit_timestamp",
          "max_commit_timestamp"
        ]
      },
      "RepoMetrics": {
        "properties": {
          "modularity": {
            "type": "number",
            "description": "模块度 (多代码库按开发当量加权平均)"
          },
          "velocity": {
            "type": "number",
            "description": "开发增速"
          },
          "total_add_line": {
            "type": "integer",
            "description": "新增代码总行数"
          },
          "total_delete_line": {
            "type": "integer",
            "description": "删除代码总行数"
          },
          "total_commits": {
            "type": "integer",
            "description": "总提交数"
          },
          "total_dev_eq": {
            "type": "integer",
            "description": "总开发当量"
          }
        },
        "type": "object",
        "required": [
          "modularity",
          "velocity",
          "total_add_line",
          "total_delete_line",
          "total_commits",
          "total_dev_eq"
        ]
      },
      "RepoMetricByRepo": {
        "properties": {
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "modularity": {
            "type": "number",
            "description": "模块度 (多代码库按开发当量加权平均)"
          },
          "velocity": {
            "type": "number",
            "description": "开发增速"
          },
          "total_add_line": {
            "type": "integer",
            "description": "新增代码总行数"
          },
          "total_delete_line": {
            "type": "integer",
            "description": "删除代码总行数"
          },
          "total_commits": {
            "type": "integer",
            "description": "总提交数"
          },
          "total_dev_eq": {
            "type": "integer",
            "description": "总开发当量"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "name",
          "git_url",
          "modularity",
          "velocity",
          "total_add_line",
          "total_delete_line",
          "total_commits",
          "total_dev_eq"
        ]
      },
      "RepoMetricByProject": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "modularity": {
            "type": "number",
            "description": "模块度 (多代码库按开发当量加权平均)"
          },
          "velocity": {
            "type": "number",
            "description": "开发增速"
          },
          "total_add_line": {
            "type": "integer",
            "description": "新增代码总行数"
          },
          "total_delete_line": {
            "type": "integer",
            "description": "删除代码总行数"
          },
          "total_commits": {
            "type": "integer",
            "description": "总提交数"
          },
          "total_dev_eq": {
            "type": "integer",
            "description": "总开发当量"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "name",
          "modularity",
          "velocity",
          "total_add_line",
          "total_delete_line",
          "total_commits",
          "total_dev_eq"
        ]
      },
      "DistributionInfo": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repo"
            ]
          }
        },
        "type": "object",
        "required": [
          "type"
        ]
      },
      "ReposComplexityOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "avg_complexity",
              "num_fns",
              "latest_analysis_time"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "ProjectComplexityDistributionFilter": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ]
      },
      "ProjectReposComplexityFilter": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string"
          },
          "order": {
            "$ref": "#/components/schemas/ReposComplexityOrder"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "page",
          "pageSize"
        ]
      },
      "CreateIssueImporterRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "issues",
              "issue_repo_commits"
            ]
          },
          "objectName": {
            "type": "string"
          },
          "taskId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "type",
          "objectName"
        ]
      },
      "JiraBoardBindRequest": {
        "properties": {
          "boardId": {
            "type": "string"
          },
          "boardName": {
            "type": "string"
          },
          "projectId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "boardId",
          "boardName",
          "projectId"
        ]
      },
      "ListKeywordQuery": {
        "properties": {
          "q": {},
          "limit": {}
        },
        "type": "object"
      },
      "ScopeInfo": {
        "properties": {
          "sourceId": {
            "type": "string"
          },
          "sourceType": {
            "type": "string"
          },
          "scopeId": {
            "type": "string"
          },
          "boardName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "sourceId",
          "sourceType",
          "scopeId"
        ]
      },
      "AvailableVP": {
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "label",
          "value"
        ]
      },
      "AccountInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "isDeleted": {
            "type": "boolean"
          },
          "jobNumber": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "promotionDate": {
            "type": "integer"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "email",
          "isDeleted"
        ]
      },
      "TeamInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parentId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "CommitLabelConfig": {
        "properties": {
          "groupName": {
            "type": "string"
          },
          "customLabel": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "groupName"
        ]
      },
      "RepoConfig": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "analysisBranch": {
            "type": "string"
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "commitLabels": {
            "items": {
              "$ref": "#/components/schemas/CommitLabelConfig"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "analysisBranch",
          "analysisIncludeRefs",
          "commitLabels"
        ]
      },
      "RepoConfigDetail": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "repoName": {
            "type": "string"
          },
          "repoGitUrl": {
            "type": "string"
          },
          "analysisBranch": {
            "type": "string"
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "commitLabels": {
            "items": {
              "$ref": "#/components/schemas/CommitLabelConfig"
            },
            "type": "array"
          },
          "repoExists": {
            "type": "boolean"
          },
          "repoAnalysisBranch": {
            "type": "string"
          },
          "repoAnalysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "repoAspectAnalysis": {
            "type": "boolean"
          },
          "repoCodeQualityAnalysis": {
            "type": "boolean"
          },
          "currentUserHasAccess": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "repoName",
          "repoGitUrl",
          "analysisBranch",
          "analysisIncludeRefs",
          "commitLabels",
          "repoExists",
          "repoAnalysisBranch",
          "repoAnalysisIncludeRefs",
          "repoAspectAnalysis",
          "repoCodeQualityAnalysis",
          "currentUserHasAccess"
        ]
      },
      "ListVPOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "numRepos",
              "numAccountsWithPermission",
              "numTeamsWithPermission",
              "createTime"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "ListVirtualProjectsRequest": {
        "properties": {
          "search": {
            "type": "string"
          },
          "orderBy": {
            "$ref": "#/components/schemas/ListVPOrder"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "VirtualProjectListItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "invalid": {
            "type": "boolean"
          },
          "numRepos": {
            "type": "number"
          },
          "numDataSource": {
            "type": "number"
          },
          "numAccounts": {
            "type": "number"
          },
          "numAccountsWithPermission": {
            "type": "number"
          },
          "numTeamsWithPermission": {
            "type": "number"
          },
          "currentUserHasAccess": {
            "type": "boolean"
          },
          "sourceId": {
            "format": "uuid",
            "type": "string"
          },
          "taskId": {
            "format": "uuid",
            "type": "string"
          },
          "taskLastSuccessTime": {
            "format": "date-time",
            "type": "string"
          },
          "cronConfig": {
            "$ref": "#/components/schemas/CronConfig"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "invalid",
          "numRepos",
          "numDataSource",
          "numAccounts",
          "numAccountsWithPermission",
          "numTeamsWithPermission",
          "currentUserHasAccess",
          "sourceId",
          "taskId",
          "taskLastSuccessTime",
          "cronConfig"
        ]
      },
      "CreateVirtualProjectRequest": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "repoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "permissionAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionTeamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceId": {
            "format": "uuid",
            "type": "string"
          },
          "scopes": {},
          "cronConfig": {
            "$ref": "#/components/schemas/CronConfig"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "accountIds",
          "repoConfigs",
          "permissionAccountIds",
          "permissionTeamIds",
          "cronConfig"
        ]
      },
      "UpdateVirtualProjectRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "repoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionTeamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceId": {
            "format": "uuid",
            "type": "string"
          },
          "scopes": {},
          "cronConfig": {
            "$ref": "#/components/schemas/CronConfig"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoConfigs",
          "accountIds",
          "permissionAccountIds",
          "permissionTeamIds",
          "cronConfig"
        ]
      },
      "VirtualProjectInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "repoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionTeamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "sourceId": {
            "type": "string"
          },
          "cronConfig": {
            "$ref": "#/components/schemas/CronConfig"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoConfigs",
          "accountIds",
          "permissionAccountIds",
          "permissionTeamIds",
          "cronConfig"
        ]
      },
      "VirtualProjectDetailInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "repoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfigDetail"
            },
            "type": "array"
          },
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/AccountInfo"
            },
            "type": "array"
          },
          "permissionAccounts": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "permissionTeams": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "scopes": {
            "items": {
              "$ref": "#/components/schemas/ScopeInfo"
            },
            "type": "array"
          },
          "cronConfig": {
            "$ref": "#/components/schemas/CronConfig"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repoConfigs",
          "accounts",
          "permissionAccounts",
          "permissionTeams",
          "scopes",
          "cronConfig"
        ]
      },
      "UpdateVirtualProjectResponse": {
        "properties": {
          "virtualProjectInfo": {
            "$ref": "#/components/schemas/VirtualProjectInfo"
          },
          "removedRepoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "addedRepoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "updatedRepoConfigs": {
            "items": {
              "$ref": "#/components/schemas/RepoConfig"
            },
            "type": "array"
          },
          "removedAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "addedAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "addedScopes": {
            "items": {
              "$ref": "#/components/schemas/ScopeInfo"
            },
            "type": "array"
          },
          "removedScopes": {
            "items": {
              "$ref": "#/components/schemas/ScopeInfo"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "virtualProjectInfo",
          "removedRepoConfigs",
          "addedRepoConfigs",
          "updatedRepoConfigs",
          "removedAccountIds",
          "addedAccountIds",
          "addedScopes",
          "removedScopes"
        ]
      },
      "VPSyncHistoryRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "page",
          "pageSize"
        ]
      },
      "VPSyncJobInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "repoName": {
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "jobStatus": {
            "type": "string"
          },
          "taskType": {
            "type": "string",
            "enum": [
              "cron",
              "repo_analysis"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "repoId",
          "repoName",
          "createTime",
          "jobStatus",
          "taskType"
        ]
      },
      "IndustryBaselineRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ]
          },
          "metric": {
            "items": {
              "type": "string",
              "enum": [
                "static_test_coverage",
                "doc_coverage",
                "modularity",
                "dryness",
                "issue_rate",
                "severe_issue_rate",
                "efficiency"
              ]
            },
            "type": "array"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "unitNumber": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "metric"
        ]
      },
      "TechDebtProjectMaintainabilityFilter": {
        "properties": {
          "search": {
            "type": "string"
          },
          "docCoverage": {
            "$ref": "#/components/schemas/NumRange"
          },
          "testCoverage": {
            "$ref": "#/components/schemas/NumRange"
          },
          "complexity": {
            "$ref": "#/components/schemas/NumRange"
          }
        },
        "type": "object"
      },
      "TechDebtProjectMaintainabilityOrder": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "numFns",
              "docCoverage",
              "testCoverage",
              "avgComplexity",
              "latestAnalysisTime"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        },
        "type": "object",
        "required": [
          "field"
        ]
      },
      "TechDebtProjectMaintainabilityRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/TechDebtProjectMaintainabilityFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/TechDebtProjectMaintainabilityOrder"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "id",
          "page",
          "pageSize"
        ]
      },
      "QualityData": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "日期"
          },
          "re_usability": {
            "type": "number",
            "description": "代码不重复度"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖率"
          },
          "test_coverage": {
            "type": "number",
            "description": "单元测试覆盖率"
          },
          "issue_blocker_num": {
            "type": "number",
            "description": "阻塞问题"
          },
          "issue_critical_num": {
            "type": "number",
            "description": "严重问题"
          },
          "issue_major_num": {
            "type": "number",
            "description": "主要问题"
          },
          "issue_minor_num": {
            "type": "number",
            "description": "次要问题"
          },
          "issue_info_num": {
            "type": "number",
            "description": "提示问题"
          },
          "issue_density": {
            "type": "number",
            "description": "重点问题密度"
          }
        },
        "type": "object",
        "required": [
          "date",
          "re_usability",
          "doc_coverage",
          "test_coverage",
          "issue_blocker_num",
          "issue_critical_num",
          "issue_major_num",
          "issue_minor_num",
          "issue_info_num",
          "issue_density"
        ]
      },
      "TimeSeries": {
        "properties": {
          "modularity": {
            "type": "number",
            "description": "模块性"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "日期"
          },
          "re_usability": {
            "type": "number",
            "description": "代码不重复度"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖率"
          },
          "test_coverage": {
            "type": "number",
            "description": "单元测试覆盖率"
          },
          "issue_blocker_num": {
            "type": "number",
            "description": "阻塞问题"
          },
          "issue_critical_num": {
            "type": "number",
            "description": "严重问题"
          },
          "issue_major_num": {
            "type": "number",
            "description": "主要问题"
          },
          "issue_minor_num": {
            "type": "number",
            "description": "次要问题"
          },
          "issue_info_num": {
            "type": "number",
            "description": "提示问题"
          },
          "issue_density": {
            "type": "number",
            "description": "重点问题密度"
          }
        },
        "type": "object",
        "required": [
          "modularity",
          "date",
          "re_usability",
          "doc_coverage",
          "test_coverage",
          "issue_blocker_num",
          "issue_critical_num",
          "issue_major_num",
          "issue_minor_num",
          "issue_info_num",
          "issue_density"
        ]
      },
      "DeveloperTimeSeries": {
        "properties": {
          "primary_email": {
            "type": "string",
            "description": "贡献者主邮箱"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/QualityData"
            },
            "type": "array",
            "description": "贡献者历史质量数据列表"
          }
        },
        "type": "object",
        "required": [
          "primary_email",
          "data"
        ]
      },
      "RecalculateBaselineRequest": {
        "properties": {
          "date": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "date"
        ]
      },
      "RecalculateBaselineResponse": {
        "properties": {
          "taskId": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "taskId",
          "date"
        ]
      },
      "GetLastTimeTriggerRecalculateResponse": {
        "properties": {
          "everTriggered": {
            "type": "boolean"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "everTriggered"
        ]
      },
      "QueryBaselineDataRequest": {
        "properties": {
          "metric": {
            "type": "string",
            "enum": [
              "perCapitaDevEqs",
              "slope",
              "cv",
              "pareto",
              "commitDays",
              "commitRepos",
              "testCoverage",
              "docCoverage",
              "modularity",
              "dryness",
              "cyclomatic",
              "keyIssueDensity",
              "testCoverageTime",
              "docCoverageTime",
              "modularityTime",
              "drynessTime",
              "keyIssueDensityTime",
              "cyclomaticTime"
            ]
          },
          "sampleType": {
            "type": "string",
            "enum": [
              "account",
              "project",
              "team",
              "company"
            ]
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "step": {
            "type": "string",
            "enum": [
              "daily",
              "weekly",
              "bi-weekly",
              "monthly",
              "quarterly"
            ]
          }
        },
        "type": "object",
        "required": [
          "metric",
          "sampleType",
          "startDate",
          "endDate",
          "step"
        ]
      },
      "BaselineData": {
        "properties": {
          "baselineId": {
            "format": "uuid",
            "type": "string"
          },
          "range": {
            "type": "number"
          },
          "step": {
            "type": "number"
          },
          "endDateDimId": {
            "type": "number"
          },
          "mean": {
            "type": "number"
          },
          "median": {
            "type": "number"
          },
          "upperQuartile": {
            "type": "number"
          },
          "lowerQuartile": {
            "type": "number"
          },
          "p85": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "baselineId",
          "range",
          "step",
          "endDateDimId",
          "mean",
          "median",
          "upperQuartile",
          "lowerQuartile",
          "p85"
        ]
      },
      "QueryBaselineDataResult": {
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errMsg": {
            "type": "string"
          },
          "data": {
            "$ref": "#/components/schemas/BaselineData"
          }
        },
        "type": "object",
        "required": [
          "success"
        ]
      },
      "MyWorkspace": {
        "properties": {
          "name": {
            "type": "string"
          },
          "isDynamic": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "dashboardPageId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "isDynamic",
          "displayName"
        ]
      },
      "AllWorkspaceItem": {
        "properties": {
          "workspaceId": {
            "type": "string"
          },
          "sort": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "isDynamic": {
            "type": "boolean"
          },
          "displayName": {
            "type": "string"
          },
          "dashboardPageId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "workspaceId",
          "sort",
          "name",
          "isDynamic",
          "displayName"
        ]
      },
      "WorkspaceList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/Array"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "data"
        ]
      },
      "CommitRegex": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "customLabel": {}
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "FilterObject": {
        "properties": {
          "value": {
            "type": "string"
          },
          "isFuzzy": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "value",
          "isFuzzy"
        ]
      },
      "PermissionResource": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "APIKEY"
            ]
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {},
          "permission": {
            "type": "string",
            "enum": [
              "VIEW",
              "EDIT",
              "REMOVE"
            ]
          }
        },
        "type": "object",
        "required": [
          "type",
          "id",
          "permission"
        ]
      },
      "ApiErrorDetail": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "message"
        ]
      },
      "DevtableApiError": {
        "properties": {
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "code"
        ]
      },
      "Dashboard": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "content_id": {
            "type": "string"
          },
          "is_removed": {
            "type": "boolean"
          },
          "is_preset": {
            "type": "boolean"
          },
          "group": {
            "type": "string"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          },
          "owner_id": {
            "type": "string"
          },
          "owner_type": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "content_id",
          "is_removed",
          "is_preset",
          "group",
          "create_time",
          "update_time",
          "owner_id",
          "owner_type"
        ]
      },
      "DashboardFilterObject": {
        "properties": {
          "name": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          },
          "group": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "isPreset": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "DashboardSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "name",
              "create_time",
              "is_preset",
              "group"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "DashboardPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "DashboardListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/DashboardFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/DashboardSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "DashboardCreateRequest": {
        "properties": {
          "name": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "group": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "group"
        ]
      },
      "DashboardUpdateRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "contentId": {
            "format": "uuid",
            "type": "string"
          },
          "isRemoved": {
            "type": "boolean"
          },
          "group": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "DashboardIDRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "DashboardNameRequest": {
        "properties": {
          "name": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "isPreset": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "name",
          "isPreset"
        ]
      },
      "DashboardContent": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "dashboard_id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "content": {
            "type": "object"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dashboard_id",
          "name",
          "content",
          "create_time",
          "update_time"
        ]
      },
      "DashboardContentCreateRequest": {
        "properties": {
          "dashboardId": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "content": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "dashboardId",
          "name",
          "content"
        ]
      },
      "DashboardContentUpdateRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "content": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "DashboardContentIDRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "DashboardChangelog": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "dashboard_id": {
            "format": "uuid",
            "type": "string"
          },
          "diff": {
            "type": "string"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dashboard_id",
          "diff",
          "create_time"
        ]
      },
      "DashboardChangelogFilterObject": {
        "properties": {
          "dashboardId": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardChangelogSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "dashboard_id",
              "create_time"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "DashboardChangelogListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/DashboardChangelogFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/DashboardChangelogSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "DashboardChangelogPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "DashboardContentChangelog": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "dashboard_content_id": {
            "format": "uuid",
            "type": "string"
          },
          "diff": {
            "type": "string"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "dashboard_content_id",
          "diff",
          "create_time"
        ]
      },
      "DashboardContentChangelogFilterObject": {
        "properties": {
          "dashboardContentId": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DashboardContentChangelogSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "dashboard_content_id",
              "create_time"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "DashboardContentChangelogListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/DashboardContentChangelogFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/DashboardContentChangelogSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "DashboardContentChangelogPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "DataSourceProcessingConfig": {
        "properties": {
          "pre": {
            "type": "string"
          },
          "post": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "pre",
          "post"
        ]
      },
      "DataSourceConfig": {
        "properties": {
          "host": {
            "type": "string"
          },
          "processing": {
            "items": {
              "$ref": "#/components/schemas/DataSourceProcessingConfig"
            },
            "type": "object"
          },
          "port": {
            "type": "integer"
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "database": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "host"
        ]
      },
      "DataSource": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "is_preset": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "key",
          "is_preset"
        ]
      },
      "DataSourceFilterObject": {
        "properties": {
          "type": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          },
          "key": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "DataSourceSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "type",
              "key",
              "create_time",
              "is_preset"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "DataSourceListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/DataSourceFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/DataSourceSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "DataSourcePaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "DataSourceCreateRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "postgresql",
              "mysql",
              "http"
            ]
          },
          "key": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          },
          "config": {
            "items": {
              "$ref": "#/components/schemas/DataSourceConfig"
            },
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "type",
          "key",
          "config"
        ]
      },
      "DataSourceIDRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "DataSourceRenameRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "key": {
            "minLength": 1,
            "maxLength": 250,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "key"
        ]
      },
      "DataSourceUpdateRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "config": {
            "items": {
              "$ref": "#/components/schemas/DataSourceConfig"
            },
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "id",
          "config"
        ]
      },
      "CustomFunction": {
        "properties": {
          "id": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          },
          "is_preset": {
            "type": "boolean"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "definition",
          "is_preset",
          "create_time",
          "update_time"
        ]
      },
      "CustomFunctionFilterObject": {
        "properties": {
          "id": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "CustomFunctionSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "id",
              "create_time",
              "is_preset"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "CustomFunctionListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/CustomFunctionFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/CustomFunctionSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "CustomFunctionPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "CustomFunctionCreateOrUpdateRequest": {
        "properties": {
          "id": {
            "type": "string"
          },
          "definition": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "definition"
        ]
      },
      "CustomFunctionIDRequest": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "SqlSnippet": {
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "is_preset": {
            "type": "boolean"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content",
          "is_preset",
          "create_time",
          "update_time"
        ]
      },
      "SqlSnippetFilterObject": {
        "properties": {
          "id": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "SqlSnippetSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "id",
              "create_time",
              "update_time",
              "is_preset"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "SqlSnippetListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/SqlSnippetFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/SqlSnippetSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "SqlSnippetPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "SqlSnippetCreateOrUpdateRequest": {
        "properties": {
          "id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "content"
        ]
      },
      "SqlSnippetIDRequest": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "Job": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "params": {
            "type": "object"
          },
          "result": {
            "type": "object"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "status",
          "params",
          "result",
          "create_time",
          "update_time"
        ]
      },
      "JobFilterObject": {
        "properties": {
          "type": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          },
          "status": {
            "items": {
              "$ref": "#/components/schemas/FilterObject"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "JobSortObject": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "type",
              "create_time",
              "status"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "JobListRequest": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/JobFilterObject"
            },
            "type": "array"
          },
          "sort": {
            "items": {
              "$ref": "#/components/schemas/JobSortObject"
            },
            "type": "array"
          },
          "pagination": {
            "items": {
              "$ref": "#/components/schemas/PaginationRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "sort",
          "pagination"
        ]
      },
      "JobPaginationResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "JobRunRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "RENAME_DATASOURCE",
              "FIX_DASHBOARD_PERMISSION"
            ]
          }
        },
        "type": "object",
        "required": [
          "type"
        ]
      },
      "QueryParams": {
        "properties": {
          "filters": {
            "type": "object"
          },
          "context": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "filters",
          "context"
        ]
      },
      "QueryRequest": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "postgresql",
              "mysql",
              "http"
            ]
          },
          "key": {
            "type": "string"
          },
          "query": {
            "type": "string"
          },
          "contentId": {
            "format": "uuid",
            "type": "string"
          },
          "queryId": {
            "type": "string"
          },
          "params": {
            "items": {
              "$ref": "#/components/schemas/QueryParams"
            },
            "type": "array"
          },
          "env": {
            "type": "object"
          },
          "refreshCache": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "type",
          "key",
          "query",
          "contentId",
          "queryId",
          "params"
        ]
      },
      "QueryStructureRequest": {
        "properties": {
          "queryType": {
            "type": "string",
            "enum": [
              "TABLES",
              "COLUMNS",
              "INDEXES"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "postgresql",
              "mysql"
            ]
          },
          "key": {
            "type": "string"
          },
          "tableSchema": {
            "type": "string"
          },
          "tableName": {
            "type": "string"
          },
          "limit": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "queryType",
          "type",
          "key",
          "tableSchema",
          "tableName"
        ]
      },
      "UpdateDashboardPageContent": {
        "properties": {
          "content": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "content"
        ]
      },
      "TimeQueryRequest": {
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "bi-week",
              "month",
              "year",
              "quarter"
            ],
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "unitNumber": {
            "type": "integer"
          },
          "stepKeyFormat": {
            "type": "string"
          },
          "yoy": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "unitOfTime",
          "timezone",
          "unitNumber"
        ]
      },
      "CustomTimeQueryRequest": {
        "properties": {
          "start": {
            "type": "string"
          },
          "end": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "start",
          "end",
          "timezone"
        ]
      },
      "MetricQueryRequest": {
        "properties": {
          "timeQuery": {
            "$ref": "#/components/schemas/TimeQueryRequest"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "timeQuery",
          "page",
          "pageSize"
        ]
      },
      "CustomPropertyFilter": {
        "properties": {
          "propertyId": {
            "type": "string",
            "minLength": 1
          },
          "options": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "minItems": 1
          }
        },
        "type": "object",
        "required": [
          "propertyId",
          "options"
        ]
      },
      "SearchAccountRequest": {
        "properties": {
          "teamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search": {
            "type": "string"
          },
          "customPropertyFilters": {
            "items": {
              "$ref": "#/components/schemas/CustomPropertyFilter"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "teamIds",
          "search",
          "customPropertyFilters"
        ]
      },
      "FilterByRepoContributorRequest": {
        "properties": {
          "projectId": {
            "type": "string"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ]
      },
      "FilterByTeamMemberRequest": {
        "properties": {
          "teamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "teamIds"
        ]
      },
      "ContributorCondition": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "scopeId": {
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "scope",
          "scopeId",
          "values"
        ]
      },
      "FilterConditionDetail": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "scope": {
            "type": "string"
          },
          "scope_id": {
            "type": "string"
          },
          "values": {
            "items": {},
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "scope",
          "scope_id",
          "values"
        ]
      },
      "TimePeriodValue": {
        "properties": {
          "counts": {
            "type": "integer"
          },
          "unit": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ]
          }
        },
        "type": "object",
        "required": [
          "counts",
          "unit"
        ]
      },
      "SearchTeamMemberRequest": {
        "properties": {
          "teamIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "search": {
            "type": "string"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "teamIds"
        ]
      },
      "InitConfig": {
        "properties": {
          "site_url": {
            "type": "string"
          },
          "timezone": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "smtp_username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "smtp": {
            "type": "string"
          },
          "secure": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "site_url",
          "timezone",
          "email",
          "password",
          "smtp",
          "secure"
        ]
      },
      "CreateRepoItem": {
        "properties": {
          "gitUrl": {
            "type": "string"
          },
          "selectedBranch": {
            "type": "string"
          },
          "selectedProjectGroup": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "gitUrl",
          "selectedBranch"
        ]
      },
      "ReqCreateRepos": {
        "properties": {
          "repoItems": {
            "items": {
              "$ref": "#/components/schemas/CreateRepoItem"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "repoItems"
        ]
      },
      "AnalyticsSetting": {
        "properties": {
          "defaultRef": {
            "type": "string"
          },
          "single_branch": {
            "type": "boolean"
          },
          "analysisBranch": {
            "type": "string"
          },
          "systemExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userGlobExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "excludedCommitHashes": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "maintainPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "commitAfterTime": {
            "format": "date-time",
            "type": "string"
          },
          "threshold": {},
          "aspectAnalysis": {
            "type": "boolean"
          },
          "codeQualityAnalysis": {
            "type": "boolean"
          },
          "analysisRefRegex": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "threshold"
        ]
      },
      "DefaultAnalyticsSetting": {
        "properties": {
          "recommendedExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "systemExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "userGlobExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "commitAfterTime": {
            "format": "date-time",
            "type": "string"
          },
          "maintainPaths": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "threshold": {},
          "aspectAnalysis": {
            "type": "boolean"
          },
          "codeQualityAnalysis": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "recommendedExcludedPaths",
          "systemExcludedPaths",
          "userGlobExcludedPaths",
          "maintainPaths",
          "threshold",
          "aspectAnalysis",
          "codeQualityAnalysis"
        ]
      },
      "ProjectAbnormalInfo": {
        "properties": {
          "reportId": {
            "format": "uuid",
            "type": "string"
          },
          "analysisId": {
            "format": "uuid",
            "type": "string"
          },
          "analysisType": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "traceback": {
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProjectInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "latest_report_id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "git_url"
        ]
      },
      "AccessEntityCount": {
        "properties": {
          "total": {
            "type": "integer"
          },
          "has_access": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "total",
          "has_access"
        ]
      },
      "LastAnalysisInfo": {
        "properties": {
          "analysisFinishTime": {
            "format": "date-time",
            "type": "string"
          },
          "gitRef": {
            "type": "string"
          },
          "realGitRef": {
            "type": "string"
          },
          "commitHash": {
            "type": "string"
          },
          "commitTitle": {
            "type": "string"
          },
          "commitMessage": {
            "type": "string"
          },
          "commitAuthorName": {
            "type": "string"
          },
          "commitAuthorTime": {
            "format": "date-time",
            "type": "string"
          },
          "commitCommitTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "analysisFinishTime",
          "gitRef",
          "realGitRef",
          "commitHash",
          "commitTitle",
          "commitMessage",
          "commitAuthorName",
          "commitAuthorTime",
          "commitCommitTime"
        ]
      },
      "AddProjectGroup": {
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "parentGroupId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "parentGroupId"
        ]
      },
      "ReposOpRequest": {
        "properties": {
          "repositoryIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "targetGroupId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "targetGroupId"
        ]
      },
      "RemoveReposRequest": {
        "properties": {
          "repositoryIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "ProjectGroupValue": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "logo_url": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "UpdateProjectGroup": {
        "properties": {
          "groupId": {
            "format": "uuid",
            "type": "string"
          },
          "parentGroupId": {
            "format": "uuid",
            "type": "string"
          },
          "values": {
            "$ref": "#/components/schemas/ProjectGroupValue"
          }
        },
        "type": "object",
        "required": [
          "groupId",
          "values"
        ]
      },
      "ProjectGroupForMove": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "type": "string"
          },
          "covered": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "covered"
        ]
      },
      "ProjectGroupResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description"
        ]
      },
      "CodeCheckRule": {
        "properties": {
          "key": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "html_desc": {
            "type": "string"
          },
          "html_desc_cn": {
            "type": "string"
          },
          "is_ignore": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "key",
          "name",
          "severity",
          "type",
          "html_desc",
          "html_desc_cn",
          "is_ignore"
        ]
      },
      "CodeCheckRuleResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CodeCheckRule"
            },
            "type": "array"
          },
          "dataKey": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data",
          "dataKey"
        ]
      },
      "SystemStatsResult": {
        "properties": {
          "analysisLines": {
            "type": "number"
          },
          "commitCount": {
            "type": "number"
          },
          "commitLines": {
            "type": "number"
          },
          "licenseValid": {
            "type": "boolean"
          },
          "commitUsers": {
            "type": "number"
          },
          "issueCount": {
            "type": "number"
          },
          "repoCount": {
            "type": "number"
          },
          "caVersion": {
            "type": "string"
          },
          "projectCount": {
            "type": "number"
          },
          "expiration": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "analysisLines",
          "commitCount",
          "commitLines",
          "licenseValid",
          "commitUsers",
          "issueCount",
          "repoCount",
          "caVersion",
          "projectCount",
          "expiration"
        ]
      },
      "SsoUserEmailRequest": {
        "properties": {
          "ssoUserId": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "strategy": {
            "type": "string"
          },
          "sign": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "ssoUserId",
          "email",
          "password",
          "username",
          "strategy",
          "sign"
        ]
      },
      "CodeCheckRuleQuery": {
        "properties": {
          "locale": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "search": {
            "type": "string"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string"
          },
          "watching": {
            "type": "boolean"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "locale",
          "lang",
          "search",
          "page",
          "pageSize"
        ]
      },
      "TeamUserAccount": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "enable": {
            "type": "boolean"
          },
          "allowLogin": {
            "type": "boolean"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string"
          },
          "is_super_admin": {
            "type": "boolean"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          },
          "departments": {
            "items": {
              "$ref": "#/components/schemas/EntityName"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "create_time",
          "name",
          "enable",
          "allowLogin",
          "primaryEmail",
          "is_super_admin",
          "emails",
          "roles",
          "departments"
        ]
      },
      "CommitInfo": {
        "properties": {
          "hash": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "author_name": {
            "type": "string"
          },
          "author_email": {
            "type": "string"
          },
          "commit_timestamp": {
            "type": "number"
          },
          "ref": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "hash",
          "title",
          "author_name",
          "author_email",
          "commit_timestamp",
          "ref",
          "message"
        ]
      },
      "ReportWithAnalysisCommit": {
        "properties": {
          "report_id": {
            "format": "uuid",
            "type": "string"
          },
          "analysis_ref": {
            "type": "string"
          },
          "analysis_commit": {
            "$ref": "#/components/schemas/CommitInfo"
          },
          "analysis_commit_time": {
            "type": "number"
          },
          "analysis_create_time": {
            "type": "number"
          },
          "analysis_finish_time": {
            "type": "number"
          },
          "commit_before_time": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "report_id",
          "analysis_ref",
          "analysis_commit",
          "analysis_commit_time",
          "analysis_create_time",
          "analysis_finish_time",
          "commit_before_time"
        ]
      },
      "LogExportRequest": {
        "properties": {
          "startDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "endDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string"
          },
          "filename": {
            "maxLength": 50,
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "filename"
        ]
      },
      "RbacCheckParams": {
        "properties": {
          "checkProjectGroupId": {
            "format": "uuid",
            "type": "string"
          },
          "checkProjectId": {
            "format": "uuid",
            "type": "string"
          },
          "checkEmail": {
            "type": "string"
          },
          "checkReportIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "checkProjectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "checkProjectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "checkDepartmentIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "checkDepartmentTeamUserIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "checkDepartmentId": {
            "format": "uuid",
            "type": "string"
          },
          "checkDepartmentTeamUserId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserBasicInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "primary_email": {
            "format": "email",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "username",
          "primary_email"
        ]
      },
      "TeamBasicInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "num_partner_text": {
            "type": "string"
          },
          "domains_str": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "num_partner_text",
          "domains_str"
        ]
      },
      "TeamUserBasicInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "salary": {
            "type": "number"
          },
          "rank": {
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "promotion_date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "role"
        ]
      },
      "MyInfoResponse": {
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserBasicInfo"
          },
          "team": {
            "$ref": "#/components/schemas/TeamBasicInfo"
          },
          "teamUser": {
            "$ref": "#/components/schemas/TeamUserBasicInfo"
          },
          "workspace": {
            "items": {
              "$ref": "#/components/schemas/MyWorkspace"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "user",
          "team",
          "teamUser",
          "workspace"
        ]
      },
      "NonMemberContrib": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "timestamp": {
            "type": "number"
          },
          "primary_email": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "emails",
          "name",
          "timestamp",
          "primary_email"
        ]
      },
      "ProcessLogResult": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "status": {
            "enum": [
              "waiting",
              "active",
              "failed",
              "completed",
              "canceled",
              "unknown"
            ],
            "type": "string"
          },
          "adder": {
            "type": "string"
          },
          "add_time": {
            "format": "date-time",
            "type": "string"
          },
          "starter": {
            "type": "string"
          },
          "start_time": {
            "format": "date-time",
            "type": "string"
          },
          "last_work_time": {
            "format": "date-time",
            "type": "string"
          },
          "finish_time": {
            "format": "date-time",
            "type": "string"
          },
          "fail_summary": {
            "type": "string"
          },
          "fail_message": {
            "type": "string"
          },
          "change_log": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "status",
          "adder",
          "add_time",
          "fail_summary",
          "fail_message",
          "change_log"
        ]
      },
      "ProcessLogFilter": {
        "properties": {
          "status": {
            "items": {},
            "type": "array"
          },
          "type": {
            "type": "string"
          },
          "adder": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "ProcessLogSortOption": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "type",
              "status",
              "adder",
              "add_time",
              "starter",
              "start_time",
              "finish_time"
            ]
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "field",
          "order"
        ]
      },
      "ProcessLogQuery": {
        "properties": {
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "filter": {
            "$ref": "#/components/schemas/ProcessLogFilter"
          },
          "sort": {
            "$ref": "#/components/schemas/ProcessLogSortOption"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "ProcessLogQueryResult": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/ProcessLogResult"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "TechTagMetrics": {
        "properties": {
          "techtags": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "techtags"
        ]
      },
      "TechTagPackageMetricByRepo": {
        "properties": {
          "repo_id": {
            "type": "string",
            "description": "代码库ID"
          },
          "name": {
            "type": "string",
            "description": "代码库名称"
          },
          "git_url": {
            "type": "string",
            "description": "git链接URL"
          },
          "packages": {
            "type": "object",
            "description": "标签和package的信息"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "name",
          "git_url",
          "packages"
        ]
      },
      "LabeledValue": {
        "properties": {
          "label": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "label",
          "value"
        ]
      },
      "ContributorInfo": {
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "team_user_id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ]
      },
      "ContributorDetail": {
        "properties": {
          "rank": {
            "type": "integer"
          },
          "share_commits": {
            "type": "integer"
          },
          "ratio_value_commits": {
            "type": "integer"
          },
          "share_loc": {
            "type": "integer"
          },
          "ratio_value_loc": {
            "type": "integer"
          },
          "contributor_email": {
            "type": "string"
          },
          "job_number": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "type": "string"
          },
          "num_commits": {
            "type": "integer"
          },
          "custom_property_options": {
            "type": "object"
          },
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "add_line": {
            "type": "integer"
          },
          "delete_line": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "rank",
          "share_commits",
          "ratio_value_commits",
          "share_loc",
          "ratio_value_loc",
          "contributor_email",
          "job_number",
          "name",
          "position",
          "num_commits",
          "dev_value",
          "dev_equivalent",
          "add_line",
          "delete_line"
        ]
      },
      "ListContributorsQueryFilter": {
        "properties": {
          "positions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "contributor": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "pageSize": {
            "type": "integer"
          },
          "custom_property_options": {},
          "current": {
            "minimum": 1,
            "type": "integer"
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        },
        "type": "object",
        "required": [
          "positions",
          "contributor",
          "dateQuery",
          "pageSize",
          "current",
          "sortField",
          "sortOrder"
        ]
      },
      "ListContributorsQueryScope": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ]
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type"
        ]
      },
      "ContributorProject": {
        "properties": {
          "accountId": {
            "type": "string",
            "description": "用户标识，可能是用户的account_id，或者是用户邮箱"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "accountId",
          "dateQuery"
        ]
      },
      "ContributorDevEqDistribution": {
        "properties": {
          "accountId": {
            "type": "string",
            "description": "用户标识，可能是用户的account_id，或者是用户邮箱"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "step": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month"
            ]
          }
        },
        "type": "object",
        "required": [
          "accountId",
          "dateQuery",
          "step"
        ]
      },
      "ProjectQualityResult": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "value"
        ]
      },
      "ProjectQualityResultExtended": {
        "properties": {
          "functions": {
            "type": "number",
            "description": "函数总个数"
          },
          "dev_equivalent": {
            "type": "number",
            "description": "开发当量"
          },
          "named_functions": {
            "type": "number",
            "description": "非匿名函数总个数"
          },
          "tested_functions": {
            "type": "number",
            "description": "有测试代码覆盖的函数总个数"
          },
          "anonymous_functions": {
            "type": "number",
            "description": "匿名函数总个数"
          },
          "commented_functions": {
            "type": "number",
            "description": "有注释覆盖的函数总个数"
          },
          "commented_functions_named": {
            "type": "number",
            "description": "有注释覆盖的函数总个数（非匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "重复函数总个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "函数圈复杂度"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "functions",
          "dev_equivalent",
          "named_functions",
          "tested_functions",
          "anonymous_functions",
          "commented_functions",
          "commented_functions_named",
          "duplicate_functions",
          "cyclomatic_total",
          "id",
          "name",
          "value"
        ]
      },
      "RepoQualityRecord": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "git_url": {
            "type": "string"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "type",
          "id",
          "name",
          "value",
          "git_url"
        ]
      },
      "ProjectQualityRecord": {
        "properties": {
          "type": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "number"
          },
          "issue_blocker_number": {},
          "issue_critical_number": {},
          "issue_major_number": {},
          "issue_minor_number": {},
          "issue_info_number": {},
          "issue_number": {},
          "issue_blocker_density": {},
          "issue_critical_density": {},
          "issue_major_density": {},
          "issue_minor_density": {},
          "issue_info_density": {},
          "issue_blocker_rate": {},
          "issue_critical_rate": {},
          "issue_info_rate": {},
          "issue_major_rate": {},
          "issue_minor_rate": {},
          "issue_rate": {},
          "test_coverage": {},
          "doc_coverage": {},
          "dryness": {},
          "modularity": {},
          "denominator": {}
        },
        "type": "object",
        "required": [
          "type",
          "id",
          "name",
          "value"
        ]
      },
      "QualityFiltersValue": {
        "properties": {
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "ignoreIncompleteSteps": {
            "type": "boolean"
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/RecordFilterValue"
            },
            "type": "array"
          },
          "graph": {
            "enum": [
              "testCoverage",
              "docCoverage",
              "dryness",
              "modularity",
              "issueNumber",
              "issueRate",
              "issueDensity",
              "severeIssueRate",
              "complexity"
            ],
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "records",
          "graph"
        ]
      },
      "SelectRangeQuery": {
        "properties": {
          "isGroup": {
            "type": "boolean"
          },
          "itemId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "isGroup",
          "itemId"
        ]
      },
      "MetricQueryResult": {
        "properties": {
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "date"
        ],
        "additionalProperties": {
          "type": "string"
        },
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段"
      },
      "MetricQueryByDeveloperResult": {
        "properties": {
          "email": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "email",
          "date"
        ]
      },
      "MetricQueryByTeamResult": {
        "properties": {
          "team_id": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "team_id",
          "date"
        ]
      },
      "MetricQueryByRepoResult": {
        "properties": {
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "date"
        ]
      },
      "MetricQueryByProjectResult": {
        "properties": {
          "project_id": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "project_id",
          "date"
        ]
      },
      "MetricQueryByJiraResult": {
        "properties": {
          "jira_metric": {
            "type": "string"
          },
          "date": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "jira_metric",
          "date"
        ]
      },
      "ListVPsRequest": {
        "properties": {
          "search": {
            "type": "string",
            "description": "根据虚拟项目名称搜索"
          }
        },
        "type": "object"
      },
      "VPListItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "虚拟项目Id"
          },
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          },
          "description": {
            "type": "string",
            "description": "虚拟项目描述"
          },
          "invalid": {
            "type": "boolean",
            "description": "虚拟项目是否失效"
          },
          "numRepos": {
            "type": "number",
            "description": "代码库数"
          },
          "numDataSource": {
            "type": "number",
            "description": "数据源数"
          },
          "numAccounts": {
            "type": "number",
            "description": "要度量的账户数"
          },
          "numAccountsWithPermission": {
            "type": "number",
            "description": "有权限账户数"
          },
          "numTeamsWithPermission": {
            "type": "number",
            "description": "有权限团队数"
          },
          "sourceId": {
            "format": "uuid",
            "type": "string",
            "description": "绑定的数据源Id"
          },
          "taskLastSuccessTime": {
            "format": "date-time",
            "type": "string",
            "description": "数据源同步任务最近一次成功时间"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "invalid",
          "numRepos",
          "numDataSource",
          "numAccounts",
          "numAccountsWithPermission",
          "numTeamsWithPermission",
          "sourceId",
          "taskLastSuccessTime"
        ]
      },
      "ListVPsResponse": {
        "properties": {
          "total": {
            "type": "number",
            "description": "虚拟项目总数"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/VPListItem"
            },
            "type": "array",
            "description": "虚拟项目列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "VPRepoCommitLabelConfig": {
        "properties": {
          "groupName": {
            "type": "string",
            "description": "效能分析提交类别标签组"
          },
          "customLabel": {
            "type": "string",
            "description": "效能分析提交类别标签（仅限非自动标签组标签）"
          }
        },
        "type": "object",
        "required": [
          "groupName"
        ]
      },
      "VPRepositoryConfig": {
        "properties": {
          "name": {
            "type": "string",
            "description": "代码库名称（注意是代码库名称，而不是git url）"
          },
          "analysisBranch": {
            "type": "string",
            "enum": [
              "default",
              "all",
              "include",
              "exclude"
            ],
            "description": "效能分析分支"
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "自定义效能分析分支（仅能从已有的自定义效能分支中选择）"
          },
          "commitLabels": {
            "items": {
              "$ref": "#/components/schemas/VPRepoCommitLabelConfig"
            },
            "type": "array",
            "description": "效能分析提交类别（仅限系统中已配置的标签）"
          }
        },
        "type": "object",
        "required": [
          "name",
          "analysisBranch"
        ]
      },
      "AddVirtualProjectRequest": {
        "properties": {
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          },
          "description": {
            "type": "string",
            "description": "虚拟项目描述"
          },
          "repos": {
            "items": {
              "$ref": "#/components/schemas/VPRepositoryConfig"
            },
            "type": "array",
            "description": "虚拟项目代码库配置"
          },
          "accounts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目成员邮箱"
          },
          "permissionAccounts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目有数据查看权限的成员邮箱"
          },
          "permissionTeams": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目有数据查看权限的团队名称"
          }
        },
        "type": "object",
        "required": [
          "name",
          "repos"
        ]
      },
      "DeleteVirtualProjectRequest": {
        "properties": {
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "DeleteVirtualProjectResponse": {
        "properties": {
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          }
        },
        "type": "object",
        "required": [
          "name"
        ]
      },
      "UpdateVPRequest": {
        "properties": {
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          },
          "repos": {
            "items": {
              "$ref": "#/components/schemas/VPRepositoryConfig"
            },
            "type": "array",
            "description": "代码库配置"
          }
        },
        "type": "object",
        "required": [
          "name",
          "repos"
        ]
      },
      "UpdateVPResponse": {
        "properties": {
          "repos": {
            "items": {
              "$ref": "#/components/schemas/VPRepositoryConfig"
            },
            "type": "array",
            "description": "更新后的代码库配置"
          }
        },
        "type": "object",
        "required": [
          "repos"
        ]
      },
      "AddVirtualProjectResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "虚拟项目ID"
          },
          "name": {
            "type": "string",
            "description": "虚拟项目名称"
          },
          "description": {
            "type": "string",
            "description": "虚拟项目描述"
          },
          "repos": {
            "items": {
              "$ref": "#/components/schemas/VPRepositoryConfig"
            },
            "type": "array",
            "description": "虚拟项目代码库配置"
          },
          "accountIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目成员ID"
          },
          "permissionAccountIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目有数据查看权限的成员ID"
          },
          "permissionTeamIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "虚拟项目有数据查看权限的团队ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "repos",
          "accountIds",
          "permissionAccountIds",
          "permissionTeamIds"
        ]
      },
      "QualityMetricColumns": {
        "properties": {
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportQualityMetricType"
                },
                {
                  "$ref": "#/components/schemas/ReportOtherMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持质量类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "EfficiencyMetricColumns": {
        "properties": {
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "EfficiencyColumnResult": {
        "properties": {
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object"
      },
      "QualityColumnResult": {
        "properties": {
          "doc_coverage_function_num": {
            "type": "integer",
            "description": "有注释覆盖的函数个数"
          },
          "doc_coverage_total_function_num": {
            "type": "integer",
            "description": "计算注释覆盖度的总函数个数（包含所有函数）"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖度"
          },
          "static_test_coverage_function_num": {
            "type": "integer",
            "description": "有测试覆盖的函数个数"
          },
          "static_test_coverage_total_function_num": {
            "type": "integer",
            "description": "计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）"
          },
          "static_test_coverage": {
            "type": "number",
            "description": "测试覆盖度"
          },
          "issue_blocker_num": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issue_critical_num": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issue_major_num": {
            "type": "integer",
            "description": "重要问题数"
          },
          "issue_minor_num": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issue_info_num": {
            "type": "integer",
            "description": "提醒问题数"
          },
          "issue_num": {
            "type": "integer",
            "description": "总代码问题数"
          },
          "issue_rate": {
            "type": "integer",
            "description": "代码问题率（分母为总函数个数）"
          },
          "severe_issue_rate": {
            "type": "integer",
            "description": "重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq"
          },
          "weighted_issue_rate": {
            "type": "integer",
            "description": "加权问题数比例（各级别权重依次为: 1, 0.5, 0.1, 0.02, 0.004, 分母为总函数个数）"
          },
          "function_depend": {
            "type": "integer",
            "description": "开发者影响力（某开发者的函数被其他人使用的次数，此指标只在以开发者维度聚合时有意义）"
          },
          "ccg_snapshot_function_num": {
            "type": "integer",
            "description": "函数总个数"
          },
          "duplicate_function_num": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复率 (1 - duplicate_function_num / ccg_snapshot_function_num)"
          },
          "modularity": {
            "type": "number",
            "description": "代码模块度 (只有在以代码库维度汇总时有意义)"
          },
          "cyclomatic_total": {
            "type": "integer",
            "description": "全函数圈复杂度之和"
          },
          "cyclomatic_total_every_function": {
            "type": "number",
            "description": "平均每个函数圈复杂度"
          },
          "cyclomatic_total_every_1k_dev_eq": {
            "type": "number",
            "description": "平均每个千当量圈复杂度"
          },
          "techtag": {
            "type": "object",
            "description": "技能标签"
          }
        },
        "type": "object"
      },
      "DeveloperEfficiencyMetricResponse": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "accountId": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "description": "根据请求的selectColumns字段列表，返回数据中将包含相应的字段"
      },
      "DeveloperQualityMetricResponse": {
        "properties": {
          "email": {
            "format": "email",
            "type": "string"
          },
          "accountId": {
            "format": "uuid",
            "type": "string"
          },
          "doc_coverage_function_num": {
            "type": "integer",
            "description": "有注释覆盖的函数个数"
          },
          "doc_coverage_total_function_num": {
            "type": "integer",
            "description": "计算注释覆盖度的总函数个数（包含所有函数）"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖度"
          },
          "static_test_coverage_function_num": {
            "type": "integer",
            "description": "有测试覆盖的函数个数"
          },
          "static_test_coverage_total_function_num": {
            "type": "integer",
            "description": "计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）"
          },
          "static_test_coverage": {
            "type": "number",
            "description": "测试覆盖度"
          },
          "issue_blocker_num": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issue_critical_num": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issue_major_num": {
            "type": "integer",
            "description": "重要问题数"
          },
          "issue_minor_num": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issue_info_num": {
            "type": "integer",
            "description": "提醒问题数"
          },
          "issue_num": {
            "type": "integer",
            "description": "总代码问题数"
          },
          "issue_rate": {
            "type": "integer",
            "description": "代码问题率（分母为总函数个数）"
          },
          "severe_issue_rate": {
            "type": "integer",
            "description": "重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq"
          },
          "weighted_issue_rate": {
            "type": "integer",
            "description": "加权问题数比例（各级别权重依次为: 1, 0.5, 0.1, 0.02, 0.004, 分母为总函数个数）"
          },
          "function_depend": {
            "type": "integer",
            "description": "开发者影响力（某开发者的函数被其他人使用的次数，此指标只在以开发者维度聚合时有意义）"
          },
          "ccg_snapshot_function_num": {
            "type": "integer",
            "description": "函数总个数"
          },
          "duplicate_function_num": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复率 (1 - duplicate_function_num / ccg_snapshot_function_num)"
          },
          "modularity": {
            "type": "number",
            "description": "代码模块度 (只有在以代码库维度汇总时有意义)"
          },
          "cyclomatic_total": {
            "type": "integer",
            "description": "全函数圈复杂度之和"
          },
          "cyclomatic_total_every_function": {
            "type": "number",
            "description": "平均每个函数圈复杂度"
          },
          "cyclomatic_total_every_1k_dev_eq": {
            "type": "number",
            "description": "平均每个千当量圈复杂度"
          },
          "techtag": {
            "type": "object",
            "description": "技能标签"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "description": "根据请求的selectColumns字段列表，返回数据中将包含相应的字段"
      },
      "ProjectEfficiencyMetricResponse": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "date": {
            "type": "string",
            "description": "日期"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ],
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段"
      },
      "ProjectQualityMetricResponse": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "doc_coverage_function_num": {
            "type": "integer",
            "description": "有注释覆盖的函数个数"
          },
          "doc_coverage_total_function_num": {
            "type": "integer",
            "description": "计算注释覆盖度的总函数个数（包含所有函数）"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖度"
          },
          "static_test_coverage_function_num": {
            "type": "integer",
            "description": "有测试覆盖的函数个数"
          },
          "static_test_coverage_total_function_num": {
            "type": "integer",
            "description": "计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）"
          },
          "static_test_coverage": {
            "type": "number",
            "description": "测试覆盖度"
          },
          "issue_blocker_num": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issue_critical_num": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issue_major_num": {
            "type": "integer",
            "description": "重要问题数"
          },
          "issue_minor_num": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issue_info_num": {
            "type": "integer",
            "description": "提醒问题数"
          },
          "issue_num": {
            "type": "integer",
            "description": "总代码问题数"
          },
          "issue_rate": {
            "type": "integer",
            "description": "代码问题率（分母为总函数个数）"
          },
          "severe_issue_rate": {
            "type": "integer",
            "description": "重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq"
          },
          "weighted_issue_rate": {
            "type": "integer",
            "description": "加权问题数比例（各级别权重依次为: 1, 0.5, 0.1, 0.02, 0.004, 分母为总函数个数）"
          },
          "function_depend": {
            "type": "integer",
            "description": "开发者影响力（某开发者的函数被其他人使用的次数，此指标只在以开发者维度聚合时有意义）"
          },
          "ccg_snapshot_function_num": {
            "type": "integer",
            "description": "函数总个数"
          },
          "duplicate_function_num": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复率 (1 - duplicate_function_num / ccg_snapshot_function_num)"
          },
          "modularity": {
            "type": "number",
            "description": "代码模块度 (只有在以代码库维度汇总时有意义)"
          },
          "cyclomatic_total": {
            "type": "integer",
            "description": "全函数圈复杂度之和"
          },
          "cyclomatic_total_every_function": {
            "type": "number",
            "description": "平均每个函数圈复杂度"
          },
          "cyclomatic_total_every_1k_dev_eq": {
            "type": "number",
            "description": "平均每个千当量圈复杂度"
          },
          "techtag": {
            "type": "object",
            "description": "技能标签"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ],
        "description": "根据请求的selectColumns字段列表，返回数据中将包含相应的字段"
      },
      "RepoEfficiencyMetricResponse": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "date": {
            "type": "string",
            "description": "日期"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object",
        "required": [
          "repoId"
        ],
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段"
      },
      "RepoQualityMetricResponse": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "doc_coverage_function_num": {
            "type": "integer",
            "description": "有注释覆盖的函数个数"
          },
          "doc_coverage_total_function_num": {
            "type": "integer",
            "description": "计算注释覆盖度的总函数个数（包含所有函数）"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖度"
          },
          "static_test_coverage_function_num": {
            "type": "integer",
            "description": "有测试覆盖的函数个数"
          },
          "static_test_coverage_total_function_num": {
            "type": "integer",
            "description": "计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）"
          },
          "static_test_coverage": {
            "type": "number",
            "description": "测试覆盖度"
          },
          "issue_blocker_num": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issue_critical_num": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issue_major_num": {
            "type": "integer",
            "description": "重要问题数"
          },
          "issue_minor_num": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issue_info_num": {
            "type": "integer",
            "description": "提醒问题数"
          },
          "issue_num": {
            "type": "integer",
            "description": "总代码问题数"
          },
          "issue_rate": {
            "type": "integer",
            "description": "代码问题率（分母为总函数个数）"
          },
          "severe_issue_rate": {
            "type": "integer",
            "description": "重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq"
          },
          "weighted_issue_rate": {
            "type": "integer",
            "description": "加权问题数比例（各级别权重依次为: 1, 0.5, 0.1, 0.02, 0.004, 分母为总函数个数）"
          },
          "function_depend": {
            "type": "integer",
            "description": "开发者影响力（某开发者的函数被其他人使用的次数，此指标只在以开发者维度聚合时有意义）"
          },
          "ccg_snapshot_function_num": {
            "type": "integer",
            "description": "函数总个数"
          },
          "duplicate_function_num": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复率 (1 - duplicate_function_num / ccg_snapshot_function_num)"
          },
          "modularity": {
            "type": "number",
            "description": "代码模块度 (只有在以代码库维度汇总时有意义)"
          },
          "cyclomatic_total": {
            "type": "integer",
            "description": "全函数圈复杂度之和"
          },
          "cyclomatic_total_every_function": {
            "type": "number",
            "description": "平均每个函数圈复杂度"
          },
          "cyclomatic_total_every_1k_dev_eq": {
            "type": "number",
            "description": "平均每个千当量圈复杂度"
          },
          "techtag": {
            "type": "object",
            "description": "技能标签"
          }
        },
        "type": "object",
        "required": [
          "repoId"
        ],
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段"
      },
      "TeamEfficiencyMetricResponse": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string"
          },
          "date": {
            "type": "string"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object",
        "required": [
          "teamId"
        ],
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段"
      },
      "TeamQualityMetricResponse": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string"
          },
          "doc_coverage_function_num": {
            "type": "integer",
            "description": "有注释覆盖的函数个数"
          },
          "doc_coverage_total_function_num": {
            "type": "integer",
            "description": "计算注释覆盖度的总函数个数（包含所有函数）"
          },
          "doc_coverage": {
            "type": "number",
            "description": "注释覆盖度"
          },
          "static_test_coverage_function_num": {
            "type": "integer",
            "description": "有测试覆盖的函数个数"
          },
          "static_test_coverage_total_function_num": {
            "type": "integer",
            "description": "计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）"
          },
          "static_test_coverage": {
            "type": "number",
            "description": "测试覆盖度"
          },
          "issue_blocker_num": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issue_critical_num": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issue_major_num": {
            "type": "integer",
            "description": "重要问题数"
          },
          "issue_minor_num": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issue_info_num": {
            "type": "integer",
            "description": "提醒问题数"
          },
          "issue_num": {
            "type": "integer",
            "description": "总代码问题数"
          },
          "issue_rate": {
            "type": "integer",
            "description": "代码问题率（分母为总函数个数）"
          },
          "severe_issue_rate": {
            "type": "integer",
            "description": "重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq"
          },
          "weighted_issue_rate": {
            "type": "integer",
            "description": "加权问题数比例（各级别权重依次为: 1, 0.5, 0.1, 0.02, 0.004, 分母为总函数个数）"
          },
          "function_depend": {
            "type": "integer",
            "description": "开发者影响力（某开发者的函数被其他人使用的次数，此指标只在以开发者维度聚合时有意义）"
          },
          "ccg_snapshot_function_num": {
            "type": "integer",
            "description": "函数总个数"
          },
          "duplicate_function_num": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复率 (1 - duplicate_function_num / ccg_snapshot_function_num)"
          },
          "modularity": {
            "type": "number",
            "description": "代码模块度 (只有在以代码库维度汇总时有意义)"
          },
          "cyclomatic_total": {
            "type": "integer",
            "description": "全函数圈复杂度之和"
          },
          "cyclomatic_total_every_function": {
            "type": "number",
            "description": "平均每个函数圈复杂度"
          },
          "cyclomatic_total_every_1k_dev_eq": {
            "type": "number",
            "description": "平均每个千当量圈复杂度"
          },
          "techtag": {
            "type": "object",
            "description": "技能标签"
          }
        },
        "type": "object",
        "required": [
          "teamId"
        ],
        "description": "根据请求的selectColumns字段列表，返回数据中将包含相应的字段"
      },
      "RepoHashMetricResponse": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "date": {
            "type": "string",
            "description": "日期"
          },
          "hashs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "效率指标对应的commit hash列表 (commit_metric.hash)"
          },
          "developers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "效率指标对应的开发者的名称列表 (account.name)"
          },
          "commit_num": {
            "type": "integer",
            "description": "提交数"
          },
          "function_num": {
            "type": "integer",
            "description": "commit中的修改涉及的函数个数"
          },
          "loc": {
            "type": "integer",
            "description": "修改代码行数"
          },
          "loc_add_line": {
            "type": "integer",
            "description": "新增代码行数（有效行数）"
          },
          "loc_delete_line": {
            "type": "integer",
            "description": "删除代码行数（有效行数）"
          },
          "share_loc": {
            "type": "number",
            "description": "修改代码行数占比"
          },
          "developer_num": {
            "type": "integer",
            "description": "开发者人数"
          },
          "dev_equivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "dev_value": {
            "type": "number",
            "description": "开发价值（在总开发价值中的占比）（已废弃）"
          },
          "dev_value_robustness": {
            "type": "number",
            "description": "开发价值鲁棒性, 开发者开发价值贡献是否均衡（仅支持代码库和项目维度查询，并且不支持按时间聚合）: -SUM(dev_value * LOG(dev_value)) OVER developers / LOG(developer_num)"
          },
          "dev_equivalent_every_developer": {
            "type": "integer",
            "description": "开发者平均开发当量"
          }
        },
        "type": "object",
        "required": [
          "repoId"
        ],
        "description": "根据请求的selectColumn(s)字段列表，返回数据中将包含相应的字段",
        "example": {
          "repoId": "16556370-1743-4dcf-aa5f-300854fc5113",
          "dev_equivalent": 23,
          "commit_num": 2,
          "developer_num": 2,
          "hashs": [
            "cf25a4a88699ea3a0422b175a38629cd3fe01adc",
            "2ad3b167cb298941ce7c5d160e350609558905c4"
          ],
          "developers": [
            "Test User",
            "Leric Zhang"
          ]
        }
      },
      "MetricOptionTimeRange": {
        "properties": {
          "startDate": {
            "type": "string",
            "description": "开始时间, 示例:\"2020-01-01Z+08:00\""
          },
          "endDate": {
            "type": "string",
            "description": "结束时间, 示例:\"2020-01-15Z+08:00\""
          }
        },
        "type": "object",
        "required": [
          "startDate",
          "endDate"
        ]
      },
      "EfficiencyParam": {
        "properties": {
          "authorTime": {
            "$ref": "#/components/schemas/MetricOptionTimeRange",
            "description": "时间范围，目前仅效率类支持"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "HashEfficiencyParam": {
        "properties": {
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "BranchEfficiencyParam": {
        "properties": {
          "startHash": {
            "type": "string",
            "description": "开始hash（包括）"
          },
          "endHash": {
            "type": "string",
            "description": "结束hash（包括）"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          }
        },
        "type": "object",
        "required": [
          "startHash",
          "endHash",
          "selectColumns"
        ]
      },
      "GetEmailResp": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "所有贡献者的邮箱"
          },
          "primaryEmails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者的主要邮箱"
          }
        },
        "type": "object",
        "required": [
          "emails",
          "primaryEmails"
        ]
      },
      "NamedUUIDItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "ResourceAuthInfo": {
        "properties": {
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/NamedUUIDItem"
            },
            "type": "array",
            "description": "授权的用户列表"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/NamedUUIDItem"
            },
            "type": "array",
            "description": "授权的团队列表"
          }
        },
        "type": "object",
        "required": [
          "accounts",
          "teams"
        ]
      },
      "ResourceUpdateAuthQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "accountIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户 id 数组，可选，不传时保持不变"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "团队 id 数组，可选，不传时保持不变"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ProjectStabilityQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目或者代码库ID"
          },
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目或者代码库ID列表"
          },
          "startDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
          },
          "endDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "开始日期 格式为 ISO，如 2017-10-09T07:26:45.000Z"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "步长单位:'day' | 'week' | 'month' | 'quarter' | 'year'"
          },
          "unitNumber": {
            "type": "integer",
            "description": "步长值。如 unitNumber=2,unitOfTime=day,步长即为两天"
          },
          "timezoneName": {
            "type": "string",
            "description": "时区，可选，默认为PRC"
          }
        },
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "unitOfTime",
          "unitNumber"
        ]
      },
      "ProjectStabilityInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "productionRate": {
            "type": "number",
            "description": "生产率"
          },
          "stability": {
            "type": "number",
            "description": "稳定性"
          }
        },
        "type": "object",
        "required": [
          "id",
          "productionRate",
          "stability"
        ]
      },
      "RepoItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "orgId": {
            "format": "uuid",
            "type": "string",
            "description": "所属组织id"
          },
          "createTime": {
            "format": "date-time",
            "type": "string",
            "description": "创建时间"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "代码库名称"
          },
          "gitUrl": {
            "type": "string",
            "description": "代码库地址"
          },
          "normalizeGitUrl": {
            "type": "string",
            "description": "标准化代码库地址"
          },
          "isPrivate": {
            "type": "boolean",
            "description": "是否是私有代码库"
          },
          "latestSuccessAnalysisFinishTime": {
            "format": "date-time",
            "type": "string",
            "description": "最新一次分析成功的时间"
          },
          "status": {
            "enum": [
              "NOT_START",
              "UNDERWAY",
              "CANCELED",
              "SUCCESS",
              "DUPLICATE",
              "FAILURE"
            ],
            "type": "string",
            "description": "代码库分析状态"
          },
          "readiness": {
            "enum": [
              "NOT_INIT",
              "WAITING",
              "AUTH_REQUIRE",
              "NOT_REPO",
              "PRE_UNDERWAY",
              "PRE_READY",
              "UNDERWAY",
              "PULLING",
              "READY",
              "FAILURE",
              "UNSUPPORTED",
              "CANCELED"
            ],
            "type": "string",
            "description": "旧版的代码库分析状态"
          },
          "priorityLevel": {
            "type": "string",
            "description": "优先级"
          },
          "priorityUpdateTime": {
            "format": "date-time",
            "type": "string",
            "description": "优先级更新时间"
          },
          "latestAnalysisId": {
            "format": "uuid",
            "type": "string",
            "description": "最新一次成功分析的id"
          },
          "analysisId": {
            "format": "uuid",
            "type": "string",
            "description": "最新一次分析的id"
          },
          "failureType": {
            "type": "string",
            "description": "错误类型"
          },
          "errorMessage": {
            "type": "string",
            "description": "错误信息"
          },
          "traceback": {
            "type": "string",
            "description": "错误信息详情"
          },
          "projectId": {
            "type": "string",
            "description": "项目id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "orgId",
          "createTime",
          "updateTime",
          "name",
          "gitUrl",
          "normalizeGitUrl",
          "isPrivate",
          "latestSuccessAnalysisFinishTime",
          "status",
          "readiness",
          "priorityLevel",
          "priorityUpdateTime",
          "latestAnalysisId",
          "analysisId",
          "failureType",
          "errorMessage",
          "traceback",
          "projectId"
        ]
      },
      "IssueItem": {
        "properties": {
          "id": {
            "type": "string",
            "description": "ID"
          },
          "ruleKey": {
            "type": "string",
            "description": "规则键"
          },
          "hash": {
            "type": "string",
            "description": "hash",
            "deprecated": true
          },
          "filename": {
            "type": "string",
            "description": "文件路径"
          },
          "sourceStartLine": {
            "type": "integer",
            "description": "源起始行"
          },
          "sourceEndLine": {
            "type": "integer",
            "description": "源结束行"
          },
          "sourceStartColumn": {
            "type": "integer",
            "description": "源起始列"
          },
          "sourceEndColumn": {
            "type": "integer",
            "description": "源结束列"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string",
            "description": "严重程度"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string",
            "description": "类型"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "nameCn": {
            "type": "string",
            "description": "中文名称"
          },
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "repoName": {
            "type": "string",
            "description": "代码库名字"
          },
          "authorEmail": {
            "type": "string",
            "description": "作者邮箱"
          },
          "authorName": {
            "type": "string",
            "description": "作者姓名"
          }
        },
        "type": "object",
        "required": [
          "id",
          "ruleKey",
          "hash",
          "filename",
          "sourceStartLine",
          "sourceEndLine",
          "sourceStartColumn",
          "sourceEndColumn",
          "severity",
          "type",
          "name",
          "nameCn",
          "repoId",
          "repoName",
          "authorEmail",
          "authorName"
        ]
      },
      "DeveloperEfficiencyParam": {
        "properties": {
          "authorTime": {
            "$ref": "#/components/schemas/MetricOptionTimeRange",
            "description": "时间范围，目前仅效率类支持"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID，或代码库ID的数组"
          },
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "DeveloperEfficiencyQuery": {
        "properties": {
          "primaryEmailStrs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "邮箱集合"
          },
          "options": {
            "$ref": "#/components/schemas/DeveloperEfficiencyParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "primaryEmailStrs",
          "options"
        ]
      },
      "DeveloperQualityParam": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID，或代码库ID的数组"
          },
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportQualityMetricType"
                },
                {
                  "$ref": "#/components/schemas/ReportOtherMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持质量类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "DeveloperQualityQuery": {
        "properties": {
          "primaryEmailStrs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "邮箱集合"
          },
          "options": {
            "$ref": "#/components/schemas/DeveloperQualityParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "primaryEmailStrs",
          "options"
        ]
      },
      "TechTagQuery": {
        "properties": {
          "primaryEmailStrs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "邮箱集合"
          },
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID，或代码库ID的数组"
          },
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          }
        },
        "type": "object",
        "required": [
          "primaryEmailStrs"
        ]
      },
      "DeveloperRepoQuery": {
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          }
        },
        "type": "object",
        "required": [
          "email"
        ]
      },
      "DeveloperRepoResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "repoName": {
            "type": "string",
            "description": "代码库名称"
          },
          "gitUrl": {
            "type": "string",
            "description": "代码库git地址"
          },
          "readiness": {
            "type": "string",
            "description": "代码库分析状态"
          },
          "lastSyncTime": {
            "format": "date-time",
            "type": "string",
            "description": "最新同步时间"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repoName",
          "gitUrl",
          "readiness",
          "lastSyncTime"
        ]
      },
      "DeveloperRankingQuery": {
        "properties": {
          "rankingType": {
            "type": "string",
            "enum": [
              "test_coverage",
              "comment_coverage",
              "code_quality",
              "dev_equivalent",
              "dev_value",
              "overall"
            ],
            "description": "排名类型"
          },
          "projectId": {
            "type": "string",
            "description": "项目ID（和代码库ID不能同时为空）"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表（和项目ID不能同时为空。在项目ID不为空时，repoIds只能选择项目范围内的代码库，项目之外的代码库会被忽略）"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "开发者Email列表"
          },
          "limit": {
            "type": "integer",
            "description": "返回记录数"
          }
        },
        "type": "object",
        "required": [
          "rankingType",
          "limit"
        ]
      },
      "DeveloperRankingResponse": {
        "properties": {
          "email": {
            "type": "string",
            "description": "开发者邮箱"
          },
          "name": {
            "type": "string",
            "description": "开发者名称"
          },
          "value": {
            "type": "number",
            "description": "Ranking值"
          },
          "testCoverageFactor": {
            "type": "number",
            "description": "计算综合排行分的测试覆盖率因子"
          },
          "commentCoverageFactor": {
            "type": "number",
            "description": "计算综合排行分的注释覆盖率因子"
          },
          "codeQualityFactor": {
            "type": "number",
            "description": "计算综合排行分的代码问题数因子"
          },
          "devEquivalentFactor": {
            "type": "number",
            "description": "计算综合排行分的代码当量因子"
          },
          "devValueFactor": {
            "type": "number",
            "description": "计算综合排行分的代码影响力因子"
          }
        },
        "type": "object",
        "required": [
          "email",
          "name",
          "value"
        ]
      },
      "DevEqByLangRequest": {
        "properties": {
          "developers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "开发者Email列表，不传此参数表示全部"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表，不传此参数表示全部"
          },
          "since": {
            "format": "date-time",
            "type": "string",
            "description": "起始时间"
          },
          "until": {
            "format": "date-time",
            "type": "string",
            "description": "结束时间"
          }
        },
        "type": "object"
      },
      "LangDist": {
        "properties": {
          "devEq": {
            "type": "integer",
            "description": "开发当量"
          },
          "language": {
            "type": "string",
            "description": "编程语言"
          }
        },
        "type": "object",
        "required": [
          "devEq",
          "language"
        ]
      },
      "DevEqByLang": {
        "properties": {
          "primaryEmail": {
            "format": "email",
            "type": "string",
            "description": "开发者邮箱"
          },
          "accountId": {
            "format": "uuid",
            "type": "string",
            "description": "开发者用户ID"
          },
          "name": {
            "type": "string",
            "description": "开发者姓名"
          },
          "devEqDist": {
            "items": {
              "$ref": "#/components/schemas/LangDist"
            },
            "type": "array",
            "description": "开发当量的编程语言分布"
          }
        },
        "type": "object",
        "required": [
          "primaryEmail",
          "accountId",
          "name",
          "devEqDist"
        ]
      },
      "TechTagInfo": {
        "properties": {
          "symbolName": {
            "type": "string",
            "description": "标签名"
          },
          "times": {
            "type": "integer",
            "description": "使用次数"
          }
        },
        "type": "object",
        "required": [
          "symbolName",
          "times"
        ]
      },
      "PackageInfo": {
        "properties": {
          "packageName": {
            "type": "string",
            "description": "包名"
          },
          "times": {
            "type": "integer",
            "description": "使用次数"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TechTagInfo"
            },
            "type": "array",
            "description": "技能标签"
          }
        },
        "type": "object",
        "required": [
          "packageName",
          "times",
          "tags"
        ]
      },
      "PackageInfoResponse": {
        "properties": {
          "email": {
            "type": "string",
            "description": "邮箱"
          },
          "packageInfos": {
            "items": {
              "$ref": "#/components/schemas/PackageInfo"
            },
            "type": "array",
            "description": "报信息"
          }
        },
        "type": "object",
        "required": [
          "email",
          "packageInfos"
        ]
      },
      "AddRepoRequest": {
        "properties": {
          "gitUrl": {
            "minLength": 1,
            "type": "string",
            "maxLength": 255,
            "description": "代码库Git地址"
          },
          "privateKey": {
            "type": "string",
            "description": "访问私有Git仓库的私钥，PEM格式字符串"
          },
          "username": {
            "type": "string",
            "maxLength": 255,
            "description": "访问私有Git仓库的用户名"
          },
          "password": {
            "type": "string",
            "maxLength": 255,
            "description": "访问私有Git仓库的密码"
          },
          "defaultRef": {
            "type": "string",
            "description": "默认分支"
          },
          "projectId": {
            "type": "string",
            "description": "代码库所属项目ID，空值表示在根项目下创建"
          }
        },
        "type": "object",
        "required": [
          "gitUrl"
        ]
      },
      "EfficiencyQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "options": {
            "$ref": "#/components/schemas/EfficiencyParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "repoIds",
          "options"
        ]
      },
      "BranchEfficiencyQuery": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "includePath": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "包含的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持devValue和devEquivalent"
          },
          "excludePath": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "排除的目录列表（相对项目根目录的文件路径前缀）；传递此参数后selectColumn只支持devValue和devEquivalent"
          },
          "options": {
            "$ref": "#/components/schemas/BranchEfficiencyParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "options"
        ]
      },
      "HashEfficiencyQuery": {
        "properties": {
          "repoRevMap": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProjectHashParam"
            },
            "description": "选择代码库的hash的一个Map。其中Key为RepoID，Value中的ProjectHashParam对象定义了一组应用于`git rev-list`命令的参数，来指定一组commit hash",
            "type": "object",
            "example": {
              "16556370-1743-4dcf-aa5f-300854fc5113": {
                "revList": [
                  "master",
                  "^develop",
                  "cf25a4a88699ea3a0422b175a38629cd3fe01adc..2ad3b167cb298941ce7c5d160e350609558905c4"
                ],
                "maxCount": 100
              }
            }
          },
          "repoFolderFilter": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProjectFolderFilter"
            },
            "description": "设置代码库的目录过滤规则。其中Key为RepoID，Value中指定统计结果包含或排除的目录列表",
            "type": "object",
            "example": {
              "16556370-1743-4dcf-aa5f-300854fc5113": {
                "includePath": [
                  "scripts/",
                  "app/"
                ],
                "excludePath": [
                  "test/"
                ]
              }
            }
          },
          "options": {
            "$ref": "#/components/schemas/HashEfficiencyParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "repoRevMap",
          "options"
        ]
      },
      "QualityDateQuery": {
        "properties": {
          "recentPeriod": {
            "$ref": "#/components/schemas/FilterPeriod",
            "description": "最近一段时间"
          },
          "since": {
            "type": "string",
            "description": "例如：2022-01-01"
          },
          "until": {
            "type": "string",
            "description": "例如：2023-01-01"
          }
        },
        "type": "object"
      },
      "RepoQualityQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "options": {
            "$ref": "#/components/schemas/QualityMetricColumns",
            "type": "object"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/QualityDateQuery",
            "description": "查询时间范围"
          }
        },
        "type": "object",
        "required": [
          "repoIds",
          "options"
        ]
      },
      "GetRepoReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "gitUrl": {
            "type": "string",
            "description": "代码库Git地址"
          },
          "page": {
            "type": "integer",
            "description": "页数, 默认为1"
          },
          "pageSize": {
            "maximum": 100000,
            "type": "integer",
            "description": "每页记录书, 默认为最大值100,000"
          }
        },
        "type": "object"
      },
      "RepoInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "gitUrl": {
            "type": "string",
            "description": "代码库git地址"
          },
          "readiness": {
            "type": "string",
            "description": "代码库分析状态"
          },
          "failureType": {
            "type": "string",
            "description": "分析异常错误类型"
          },
          "errorMessage": {
            "type": "string",
            "description": "分析异常错误信息"
          },
          "lastSyncTime": {
            "format": "date-time",
            "type": "string",
            "description": "最新同步时间"
          }
        },
        "type": "object",
        "required": [
          "id",
          "gitUrl",
          "readiness",
          "lastSyncTime"
        ]
      },
      "RepoReportMetric": {
        "properties": {
          "velocity": {
            "type": "number",
            "description": "代码库速度（半年）"
          },
          "robustness": {
            "type": "number",
            "description": "代码库鲁棒性"
          },
          "languageDistribution": {
            "description": "语言占比",
            "additionalProperties": {
              "type": "number"
            }
          },
          "languageDevEq": {
            "type": "object",
            "description": "语言当量分布"
          },
          "languageCodeLines": {
            "type": "object",
            "description": "质量分支可进行当量分析的文件的语言行数分布"
          },
          "codeLines": {
            "type": "integer",
            "description": "质量分支可进行当量分析的文件的总行数"
          }
        },
        "type": "object",
        "required": [
          "velocity",
          "robustness",
          "languageDistribution",
          "languageDevEq",
          "languageCodeLines",
          "codeLines"
        ]
      },
      "ResRepoAnalysisSetting": {
        "properties": {
          "singleBranch": {
            "type": "boolean",
            "description": "当量分析分支选择，true：仅分析默认分支，false：分析全部分支",
            "deprecated": true
          },
          "aspectAnalysis": {
            "type": "boolean",
            "description": "是否开启软件工程质量分析"
          },
          "codeQualityAnalysis": {
            "type": "boolean",
            "description": "是否开启代码质量分析"
          },
          "defaultRef": {
            "type": "string",
            "description": "质量分析的默认分支"
          },
          "excludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "被用户和系统排除的目录们"
          },
          "commitAfterTime": {
            "format": "date-time",
            "type": "string",
            "description": "被分析的代码库提交结束时间"
          },
          "sysExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "系统排除的目录们"
          },
          "customGlobExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "自定义排除的目录们"
          },
          "excludedCommitHashes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "排除提交的hash列表"
          },
          "maintainPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "保留文件路径"
          },
          "commitSlocLimit": {
            "type": "integer",
            "description": "排除模式：SLOC超过这个数, 就排除"
          },
          "commitBeforeTime": {
            "format": "date-time",
            "type": "string",
            "description": "被分析的代码库提交起始时间"
          },
          "priority": {
            "type": "number",
            "description": "优先级"
          },
          "priorityLevel": {
            "type": "string",
            "enum": [
              "TOP",
              "AUTO",
              "BOTTOM",
              "SKIP"
            ],
            "description": "优先级级别"
          },
          "analysisBranch": {
            "type": "string",
            "description": "当量分析分支设置",
            "enum": [
              "all",
              "default",
              "include",
              "exclude"
            ]
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "当量分析包含分支，与排除分支冲突时白名单优先"
          },
          "analysisExcludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "当量分析排除分支"
          },
          "analysisRefRegex": {
            "type": "string",
            "description": "当量分析分支正则表达式"
          }
        },
        "type": "object",
        "required": [
          "singleBranch",
          "aspectAnalysis",
          "codeQualityAnalysis",
          "defaultRef",
          "excludedPaths",
          "sysExcludedPaths",
          "customGlobExcludedPaths",
          "excludedCommitHashes",
          "maintainPaths",
          "priority",
          "priorityLevel",
          "analysisBranch",
          "analysisIncludeRefs",
          "analysisExcludeRefs"
        ]
      },
      "GetRepoResp": {
        "properties": {
          "repo": {
            "$ref": "#/components/schemas/RepoInfo",
            "type": "object"
          },
          "reportMetric": {
            "$ref": "#/components/schemas/RepoReportMetric",
            "type": "object"
          },
          "repoAnalyticsSetting": {
            "$ref": "#/components/schemas/ResRepoAnalysisSetting",
            "type": "object"
          },
          "aeVersion": {
            "type": "string",
            "description": "分析引擎版本"
          },
          "authType": {
            "type": "string",
            "description": "授权类型，共三种：PUBLIC（公开代码库无需授权），SSH_KEY，HTTP_BASE"
          }
        },
        "type": "object",
        "required": [
          "repo",
          "repoAnalyticsSetting",
          "aeVersion",
          "authType"
        ]
      },
      "ListCommitReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "page": {
            "type": "integer",
            "description": ""
          },
          "pagesize": {
            "maximum": 100000,
            "type": "integer",
            "description": "废弃，请使用pageSize代替"
          },
          "pageSize": {
            "maximum": 100000,
            "type": "integer",
            "description": "每页记录数（默认为最大值100000）"
          },
          "authorTimestampFrom": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建开始日期，可选，包含"
          },
          "authorTimestampTo": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建结束日期，可选，不包含"
          },
          "commitTimestampFrom": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交开始日期，可选，包含"
          },
          "commitTimestampTo": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交结束日期，可选，不包含"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "RepoCommitListItem": {
        "properties": {
          "hash": {
            "type": "string",
            "description": "commit hash"
          },
          "authorEmail": {
            "type": "string",
            "description": "作者邮箱"
          },
          "authorName": {
            "type": "string",
            "description": "作者姓名"
          },
          "authorTimestamp": {
            "type": "string",
            "description": "作者时间"
          },
          "commitTimestamp": {
            "type": "string",
            "description": "提交时间"
          },
          "title": {
            "type": "string",
            "description": "提交标题"
          },
          "message": {
            "type": "string",
            "description": "提交信息"
          },
          "insertions": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "deletions": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "blanks": {
            "type": "integer",
            "description": "可度量增加行数中的空白行（依据分析引擎通过git命令获取的空行行数）"
          },
          "comments": {
            "type": "integer",
            "description": "可度量增加行数中的纯注释行（依据分析引擎通过git命令获取的纯注释行数，不包含有行内注释的代码行）"
          },
          "nbncs": {
            "type": "integer",
            "description": "可度量非空非注行数（计算方式为：nbncs_insertions - blanks - comments ）"
          },
          "nbncs_deletions": {
            "type": "integer",
            "description": "可度量删除行数（依据分析引擎通过git命令获取的可度量的删除行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "nbncs_insertions": {
            "type": "integer",
            "description": "可度量增加行数（依据分析引擎通过git命令获取的可度量的增加行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "effectiveInsertions": {
            "type": "integer",
            "description": "有效增加代码行数（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeletions": {
            "type": "integer",
            "description": "有效删除代码行数（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "devValue": {
            "type": "number",
            "description": "开发价值（需要打开软件工程质量分析）（已废弃）"
          },
          "techtag": {
            "description": "技能标签",
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "aeVersion": {
            "type": "string",
            "description": "分析引擎版本"
          },
          "languageFeatures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "语言特性"
          },
          "libraries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "用到的Lib"
          },
          "punishInfo": {
            "type": "object",
            "description": "当量调节信息"
          },
          "remark": {
            "type": "string",
            "description": "提交备注"
          },
          "fileFunctionPunishInfo": {
            "type": "object",
            "description": "文件和函数调节信息"
          }
        },
        "type": "object",
        "required": [
          "hash",
          "authorEmail",
          "authorName",
          "authorTimestamp",
          "commitTimestamp",
          "title",
          "message",
          "insertions",
          "deletions",
          "blanks",
          "comments",
          "nbncs",
          "nbncs_deletions",
          "nbncs_insertions",
          "effectiveInsertions",
          "effectiveDeletions",
          "devEquivalent",
          "devValue",
          "techtag",
          "aeVersion",
          "languageFeatures",
          "libraries",
          "punishInfo",
          "remark",
          "fileFunctionPunishInfo"
        ]
      },
      "RepoCommitListByHashItem": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "repoName": {
            "type": "string",
            "description": "代码库名字"
          },
          "testDevEq": {
            "type": "number",
            "description": "测试当量，如果为null，需要重新分析代码库再重新调用"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          },
          "authorEmail": {
            "type": "string",
            "description": "作者邮箱"
          },
          "authorName": {
            "type": "string",
            "description": "作者姓名"
          },
          "authorTimestamp": {
            "type": "string",
            "description": "作者时间"
          },
          "commitTimestamp": {
            "type": "string",
            "description": "提交时间"
          },
          "title": {
            "type": "string",
            "description": "提交标题"
          },
          "message": {
            "type": "string",
            "description": "提交信息"
          },
          "insertions": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "deletions": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "blanks": {
            "type": "integer",
            "description": "可度量增加行数中的空白行（依据分析引擎通过git命令获取的空行行数）"
          },
          "comments": {
            "type": "integer",
            "description": "可度量增加行数中的纯注释行（依据分析引擎通过git命令获取的纯注释行数，不包含有行内注释的代码行）"
          },
          "nbncs": {
            "type": "integer",
            "description": "可度量非空非注行数（计算方式为：nbncs_insertions - blanks - comments ）"
          },
          "nbncs_deletions": {
            "type": "integer",
            "description": "可度量删除行数（依据分析引擎通过git命令获取的可度量的删除行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "nbncs_insertions": {
            "type": "integer",
            "description": "可度量增加行数（依据分析引擎通过git命令获取的可度量的增加行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "effectiveInsertions": {
            "type": "integer",
            "description": "有效增加代码行数（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeletions": {
            "type": "integer",
            "description": "有效删除代码行数（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "devValue": {
            "type": "number",
            "description": "开发价值（需要打开软件工程质量分析）（已废弃）"
          },
          "techtag": {
            "description": "技能标签",
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "aeVersion": {
            "type": "string",
            "description": "分析引擎版本"
          },
          "languageFeatures": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "语言特性"
          },
          "libraries": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "用到的Lib"
          },
          "punishInfo": {
            "type": "object",
            "description": "当量调节信息"
          },
          "remark": {
            "type": "string",
            "description": "提交备注"
          },
          "fileFunctionPunishInfo": {
            "type": "object",
            "description": "文件和函数调节信息"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "repoName",
          "testDevEq",
          "hash",
          "authorEmail",
          "authorName",
          "authorTimestamp",
          "commitTimestamp",
          "title",
          "message",
          "insertions",
          "deletions",
          "blanks",
          "comments",
          "nbncs",
          "nbncs_deletions",
          "nbncs_insertions",
          "effectiveInsertions",
          "effectiveDeletions",
          "devEquivalent",
          "devValue",
          "techtag",
          "aeVersion",
          "languageFeatures",
          "libraries",
          "punishInfo",
          "remark",
          "fileFunctionPunishInfo"
        ]
      },
      "RepoCommitListByCommitLabelItem": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "groupName": {
            "type": "string",
            "description": "标签组名"
          },
          "labelValue": {
            "type": "string",
            "description": "标签"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          },
          "insertions": {
            "type": "integer",
            "description": "增加代码行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "deletions": {
            "type": "integer",
            "description": "删除代码行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "blanks": {
            "type": "integer",
            "description": "可度量增加行数中的空白行（依据分析引擎通过git命令获取的空行行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "comments": {
            "type": "integer",
            "description": "可度量增加行数中的纯注释行（依据分析引擎通过git命令获取的纯注释行数，不包含有行内注释的代码行，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "nbncs": {
            "type": "integer",
            "description": "可度量非空非注行数（计算方式为：nbncs_insertions - blanks - comments ）"
          },
          "nbncs_deletions": {
            "type": "integer",
            "description": "可度量删除行数（依据分析引擎通过git命令获取的可度量的删除行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "nbncs_insertions": {
            "type": "integer",
            "description": "可度量增加行数（依据分析引擎通过git命令获取的可度量的增加行数，相比于标准git diff应用了一些过滤规则，如二进制文件、自动生成文件等）"
          },
          "effectiveInsertions": {
            "type": "integer",
            "description": "有效增加代码行数（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeletions": {
            "type": "integer",
            "description": "有效删除代码行数（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "devValue": {
            "type": "number",
            "description": "开发价值（需要打开软件工程质量分析）（已废弃）"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "groupName",
          "labelValue",
          "hash",
          "insertions",
          "deletions",
          "blanks",
          "comments",
          "nbncs",
          "nbncs_deletions",
          "nbncs_insertions",
          "effectiveInsertions",
          "effectiveDeletions",
          "devEquivalent",
          "devValue"
        ]
      },
      "RepoCommitListByCommitLabelResponse": {
        "properties": {
          "total": {
            "type": "number",
            "description": "总数"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/RepoCommitListByCommitLabelItem"
            },
            "type": "array",
            "description": "列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "IdHash": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          }
        },
        "type": "object",
        "required": [
          "id",
          "hash"
        ]
      },
      "IdHashGit": {
        "properties": {
          "useGit": {
            "type": "boolean",
            "description": "是否用git的数据源"
          },
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          }
        },
        "type": "object",
        "required": [
          "id",
          "hash"
        ]
      },
      "CommitChangeFile": {
        "properties": {
          "filename": {
            "type": "string",
            "description": "文件路径"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "originalAddLine": {
            "type": "number",
            "description": "原始行数新增, 从git获取，只有/repo/commit/get-changes接口，useGit为true时才有值"
          },
          "originalDeleteLine": {
            "type": "number",
            "description": "原始行数删除, 从git获取，只有/repo/commit/get-changes接口，useGit为true时才有值"
          },
          "effectiveAddLine": {
            "type": "number",
            "description": "有效行数新增（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeleteLine": {
            "type": "number",
            "description": "有效行数删除（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "functionAdd": {
            "type": "number",
            "description": "函数新增"
          },
          "functionModify": {
            "type": "number",
            "description": "函数变更"
          },
          "functionDelete": {
            "type": "number",
            "description": "函数删除"
          },
          "nodeAdd": {
            "type": "number",
            "description": "AST节点新增"
          },
          "nodeModify": {
            "type": "number",
            "description": "AST节点变更"
          },
          "nodeDelete": {
            "type": "number",
            "description": "AST节点删除"
          },
          "nodeMove": {
            "type": "number",
            "description": "AST节点移动"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "devEquivalent",
          "originalAddLine",
          "originalDeleteLine",
          "effectiveAddLine",
          "effectiveDeleteLine",
          "functionAdd",
          "functionModify",
          "functionDelete",
          "nodeAdd",
          "nodeModify",
          "nodeDelete",
          "nodeMove"
        ]
      },
      "CommitChangeSummary": {
        "properties": {
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "originalAddLine": {
            "type": "number",
            "description": "原始行数新增, 从git获取，只有/repo/commit/get-changes接口，useGit为true时才有值"
          },
          "originalDeleteLine": {
            "type": "number",
            "description": "原始行数删除, 从git获取，只有/repo/commit/get-changes接口，useGit为true时才有值"
          },
          "effectiveAddLine": {
            "type": "number",
            "description": "有效行数新增（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeleteLine": {
            "type": "number",
            "description": "有效行数删除（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "functionAdd": {
            "type": "number",
            "description": "函数新增"
          },
          "functionModify": {
            "type": "number",
            "description": "函数变更"
          },
          "functionDelete": {
            "type": "number",
            "description": "函数删除"
          },
          "nodeAdd": {
            "type": "number",
            "description": "AST节点新增"
          },
          "nodeModify": {
            "type": "number",
            "description": "AST节点变更"
          },
          "nodeDelete": {
            "type": "number",
            "description": "AST节点删除"
          },
          "nodeMove": {
            "type": "number",
            "description": "AST节点移动"
          }
        },
        "type": "object",
        "required": [
          "devEquivalent",
          "originalAddLine",
          "originalDeleteLine",
          "effectiveAddLine",
          "effectiveDeleteLine",
          "functionAdd",
          "functionModify",
          "functionDelete",
          "nodeAdd",
          "nodeModify",
          "nodeDelete",
          "nodeMove"
        ],
        "description": "commit变动统计"
      },
      "CommitLanguageSummaryItem": {
        "properties": {
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "effectiveAddLine": {
            "type": "number",
            "description": "有效行数新增（依据分析引擎获取的函数更改当量大于0的新增代码行数）"
          },
          "effectiveDeleteLine": {
            "type": "number",
            "description": "有效行数删除（依据分析引擎获取的函数更改当量大于0的删除代码行数）"
          },
          "functionAdd": {
            "type": "number",
            "description": "函数新增"
          },
          "functionModify": {
            "type": "number",
            "description": "函数变更"
          },
          "functionDelete": {
            "type": "number",
            "description": "函数删除"
          },
          "nodeAdd": {
            "type": "number",
            "description": "AST节点新增"
          },
          "nodeModify": {
            "type": "number",
            "description": "AST节点变更"
          },
          "nodeDelete": {
            "type": "number",
            "description": "AST节点删除"
          },
          "nodeMove": {
            "type": "number",
            "description": "AST节点移动"
          }
        },
        "type": "object",
        "required": [
          "devEquivalent",
          "effectiveAddLine",
          "effectiveDeleteLine",
          "functionAdd",
          "functionModify",
          "functionDelete",
          "nodeAdd",
          "nodeModify",
          "nodeDelete",
          "nodeMove"
        ],
        "description": "语言变动统计数据"
      },
      "CommitLanguageSummary": {
        "properties": {
          "language": {
            "type": "string",
            "description": "编程语言"
          },
          "summary": {
            "$ref": "#/components/schemas/CommitLanguageSummaryItem",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "language",
          "summary"
        ],
        "description": "语言变动统计"
      },
      "CommitChangeResp": {
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/CommitChangeSummary",
            "type": "object"
          },
          "languageSummary": {
            "items": {
              "$ref": "#/components/schemas/CommitLanguageSummary"
            },
            "type": "array",
            "description": "语言变动统计"
          },
          "files": {
            "items": {
              "$ref": "#/components/schemas/CommitChangeFile"
            },
            "type": "array",
            "description": "文件变动统计"
          }
        },
        "type": "object",
        "required": [
          "summary",
          "languageSummary",
          "files"
        ]
      },
      "ListCommitChangesReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "page": {
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 500,
            "type": "integer",
            "description": "每页记录数（默认为最大值500）"
          },
          "authorTimestampFrom": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建开始日期，可选，包含"
          },
          "authorTimestampTo": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 创建结束日期，可选，不包含"
          },
          "commitTimestampFrom": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交开始日期，可选，包含"
          },
          "commitTimestampTo": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "格式为 ISO，如 2017-10-09T07:26:45.000Z 提交结束日期，可选，不包含"
          },
          "hashList": {
            "items": {},
            "maxItems": 500,
            "type": "array",
            "description": "如果指定了hashList参数，会忽略时间筛选器和分页参数, 一次最多500个commit hash"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ListCommitChangesResp": {
        "properties": {
          "hash": {
            "type": "string",
            "description": "commit hash"
          },
          "changes": {
            "$ref": "#/components/schemas/CommitChangeResp",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "hash",
          "changes"
        ]
      },
      "CommitFunsReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "description": "分页单页数量(最大值1000)"
          },
          "current": {
            "type": "integer",
            "description": "分页页码"
          }
        },
        "type": "object",
        "required": [
          "id",
          "hash",
          "pageSize",
          "current"
        ]
      },
      "CommitFunctions": {
        "properties": {
          "id": {
            "type": "string",
            "description": "节点id"
          },
          "analysisId": {
            "format": "uuid",
            "type": "string",
            "description": "分析ID"
          },
          "hexsha": {
            "type": "string",
            "description": "commit hash"
          },
          "devValue": {
            "type": "number",
            "description": "开发价值（需要打开软件工程质量分析）（已废弃）"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "addLine": {
            "type": "integer",
            "description": "行数新增（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "deleteLine": {
            "type": "integer",
            "description": "行数删除（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "filename": {
            "type": "string",
            "description": "文件路径"
          },
          "signature": {
            "type": "string",
            "description": "签名"
          },
          "inDegree": {
            "type": "number",
            "description": "进入顶点的边数（需要打开软件工程质量分析）（已废弃，现在都返回为0）"
          },
          "outDegree": {
            "type": "number",
            "description": "出顶点的边数（需要打开软件工程质量分析）（已废弃，现在都返回为0）"
          },
          "elocDuplicationWeight": {
            "type": "number",
            "description": "eloc复制权重"
          },
          "exception": {
            "type": "string",
            "description": "例外"
          },
          "bulkEditLines": {
            "type": "integer",
            "description": "批量编辑行"
          },
          "punishInfo": {
            "type": "object",
            "description": "惩罚信息"
          }
        },
        "type": "object",
        "required": [
          "id",
          "analysisId",
          "hexsha",
          "devValue",
          "devEquivalent",
          "addLine",
          "deleteLine",
          "filename",
          "signature",
          "inDegree",
          "outDegree",
          "elocDuplicationWeight",
          "exception",
          "bulkEditLines",
          "punishInfo"
        ]
      },
      "CommitFuntionChangeResp": {
        "properties": {
          "total": {
            "type": "number",
            "description": "函数数量"
          },
          "offset": {
            "type": "number",
            "description": "函数数量偏移量"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CommitFunctions"
            },
            "type": "array",
            "description": "函数变动"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "CommitFilePunishInfo": {
        "properties": {
          "filename": {
            "type": "string",
            "description": "文件路径"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "punishInfo": {
            "type": "object",
            "description": "文件惩罚信息"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "devEquivalent",
          "punishInfo"
        ]
      },
      "RepoIdHash": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "hash": {
            "type": "string",
            "description": "commit hash"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "hash"
        ]
      },
      "ListCommitByHashReq": {
        "properties": {
          "queries": {
            "items": {
              "$ref": "#/components/schemas/RepoIdHash"
            },
            "type": "array",
            "minItems": 1,
            "description": "查询条件"
          }
        },
        "type": "object",
        "required": [
          "queries"
        ]
      },
      "ListCommitByCommitLabelReq": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表，与项目ID二选一，都填写默认使用repoIds"
          },
          "projectId": {
            "type": "string",
            "description": "代码库所属项目ID，与代码库ID列表二选一，都填写默认使用repoIds"
          },
          "groupNames": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "标签组名"
          },
          "labelValues": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "标签"
          },
          "commitStartTime": {
            "format": "date-time",
            "type": "string",
            "description": "Commit起始时间，例如：2022-04-01T07:35:54.413Z"
          },
          "commitEndTime": {
            "format": "date-time",
            "type": "string",
            "description": "Commit截止时间，例如：2022-04-01T07:35:54.413Z"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "minimum": 1,
            "description": "每页大小(最大值1000)"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "AnalyzeReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "RepoId, 与ids字段二选一，不能同时为空"
          },
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "RepoId列表, 与id字段二选一，不能同时为空"
          },
          "forceAnalyze": {
            "type": "boolean",
            "description": "是否强制重新分析，默认为 false"
          }
        },
        "type": "object",
        "description": "请求的id和ids字段二选一，不能同时为空"
      },
      "AnalyzeResp": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          }
        },
        "type": "object",
        "required": [
          "ids"
        ]
      },
      "RepoIdQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "RepoDailyStatsQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "startDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "起始日期（格式为2022-02-14）"
          },
          "endDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "结束日期（格式为2022-02-14）"
          }
        },
        "type": "object",
        "required": [
          "repoIds",
          "startDate",
          "endDate"
        ]
      },
      "QualityMetricFilterValue": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目|贡献者|代码库ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ],
            "description": "查询类型"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ]
      },
      "DeveloperQualityMetricFilterValue": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目|贡献者|代码库ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ],
            "description": "查询类型"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ]
      },
      "QualityMetricsReq": {
        "properties": {
          "recentPeriod": {
            "$ref": "#/components/schemas/FilterPeriod"
          },
          "timeRange": {
            "items": {},
            "minItems": 1,
            "type": "array",
            "maxItems": 2,
            "description": ""
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/QualityMetricFilterValue"
            },
            "type": "array"
          },
          "limit": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "records"
        ]
      },
      "DeveloperQualityMetricsReq": {
        "properties": {
          "recentPeriod": {
            "$ref": "#/components/schemas/FilterPeriod"
          },
          "timeRange": {
            "items": {},
            "minItems": 1,
            "type": "array",
            "maxItems": 2,
            "description": ""
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/DeveloperQualityMetricFilterValue"
            },
            "type": "array"
          },
          "limit": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "records"
        ]
      },
      "IssueInfo": {
        "properties": {
          "testCoverage": {
            "type": "number",
            "description": "测试覆盖率：testedFunctions / namedFunctions"
          },
          "docCoverage": {
            "type": "number",
            "description": "注释覆盖率（根据系统配置可能有两种计算方式，包含或不包含匿名函数）: commentedFunctions / functions, commentedFunctionsNamed / (functions - anonymousFunctions)"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复度：(functions - duplicateFunctions) / functions"
          },
          "issueNumber": {
            "type": "number",
            "description": "代码问题数"
          },
          "issueBlockerNumber": {
            "type": "number",
            "description": "阻塞问题数"
          },
          "issueCriticalNumber": {
            "type": "number",
            "description": "严重问题数"
          },
          "issueMajorNumber": {
            "type": "number",
            "description": "主要问题数"
          },
          "issueMinorNumber": {
            "type": "number",
            "description": "次要问题数"
          },
          "issueInfoNumber": {
            "type": "number",
            "description": "提示问题数"
          },
          "issueBlockerRate": {
            "type": "number",
            "description": "阻塞问题率: issueBlockerNumber / functions"
          },
          "issueMajorRate": {
            "type": "number",
            "description": "主要问题率: issueMajorNumber / functions"
          },
          "issueCriticalRate": {
            "type": "number",
            "description": "严重问题率: issueCriticalNumber / functions"
          },
          "issueMinorRate": {
            "type": "number",
            "description": "次要问题率: issueMinorNumber / functions"
          },
          "issueInfoRate": {
            "type": "number",
            "description": "提示问题率: issueInfoNumber / functions"
          },
          "issueRate": {
            "type": "number",
            "description": "总代码问题率: issueNumber / functions"
          },
          "issueBlockerDensity": {
            "type": "number",
            "description": "阻塞问题密度: issueBlockerNumber / devEquivalent"
          },
          "issueMajorDensity": {
            "type": "number",
            "description": "主要问题密度: issueMajorNumber / devEquivalent"
          },
          "issueCriticalDensity": {
            "type": "number",
            "description": "严重问题密度: issueCriticalNumber / devEquivalent"
          },
          "issueMinorDensity": {
            "type": "number",
            "description": "次要问题密度: issueMinorNumber / devEquivalent"
          },
          "issueInfoDensity": {
            "type": "number",
            "description": "提示问题密度: issueInfoNumber / devEquivalent"
          }
        },
        "type": "object",
        "required": [
          "testCoverage",
          "docCoverage",
          "dryness",
          "issueNumber",
          "issueBlockerNumber",
          "issueCriticalNumber",
          "issueMajorNumber",
          "issueMinorNumber",
          "issueInfoNumber",
          "issueBlockerRate",
          "issueMajorRate",
          "issueCriticalRate",
          "issueMinorRate",
          "issueInfoRate",
          "issueRate",
          "issueBlockerDensity",
          "issueMajorDensity",
          "issueCriticalDensity",
          "issueMinorDensity",
          "issueInfoDensity"
        ]
      },
      "QualityMetricsForDevelopersResp": {
        "properties": {
          "name": {
            "type": "string",
            "description": "开发者名称"
          },
          "email": {
            "type": "string",
            "description": "开发者电子邮件"
          },
          "testCoverage": {
            "type": "number",
            "description": "测试覆盖率：testedFunctions / namedFunctions"
          },
          "docCoverage": {
            "type": "number",
            "description": "注释覆盖率（根据系统配置可能有两种计算方式，包含或不包含匿名函数）: commentedFunctions / functions, commentedFunctionsNamed / (functions - anonymousFunctions)"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复度：(functions - duplicateFunctions) / functions"
          },
          "issueNumber": {
            "type": "number",
            "description": "代码问题数"
          },
          "issueBlockerNumber": {
            "type": "number",
            "description": "阻塞问题数"
          },
          "issueCriticalNumber": {
            "type": "number",
            "description": "严重问题数"
          },
          "issueMajorNumber": {
            "type": "number",
            "description": "主要问题数"
          },
          "issueMinorNumber": {
            "type": "number",
            "description": "次要问题数"
          },
          "issueInfoNumber": {
            "type": "number",
            "description": "提示问题数"
          },
          "issueBlockerRate": {
            "type": "number",
            "description": "阻塞问题率: issueBlockerNumber / functions"
          },
          "issueMajorRate": {
            "type": "number",
            "description": "主要问题率: issueMajorNumber / functions"
          },
          "issueCriticalRate": {
            "type": "number",
            "description": "严重问题率: issueCriticalNumber / functions"
          },
          "issueMinorRate": {
            "type": "number",
            "description": "次要问题率: issueMinorNumber / functions"
          },
          "issueInfoRate": {
            "type": "number",
            "description": "提示问题率: issueInfoNumber / functions"
          },
          "issueRate": {
            "type": "number",
            "description": "总代码问题率: issueNumber / functions"
          },
          "issueBlockerDensity": {
            "type": "number",
            "description": "阻塞问题密度: issueBlockerNumber / devEquivalent"
          },
          "issueMajorDensity": {
            "type": "number",
            "description": "主要问题密度: issueMajorNumber / devEquivalent"
          },
          "issueCriticalDensity": {
            "type": "number",
            "description": "严重问题密度: issueCriticalNumber / devEquivalent"
          },
          "issueMinorDensity": {
            "type": "number",
            "description": "次要问题密度: issueMinorNumber / devEquivalent"
          },
          "issueInfoDensity": {
            "type": "number",
            "description": "提示问题密度: issueInfoNumber / devEquivalent"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "testCoverage",
          "docCoverage",
          "dryness",
          "issueNumber",
          "issueBlockerNumber",
          "issueCriticalNumber",
          "issueMajorNumber",
          "issueMinorNumber",
          "issueInfoNumber",
          "issueBlockerRate",
          "issueMajorRate",
          "issueCriticalRate",
          "issueMinorRate",
          "issueInfoRate",
          "issueRate",
          "issueBlockerDensity",
          "issueMajorDensity",
          "issueCriticalDensity",
          "issueMinorDensity",
          "issueInfoDensity"
        ]
      },
      "QualityMetricsResp": {
        "properties": {
          "id": {
            "type": "string",
            "description": "项目或者代码库ID"
          },
          "name": {
            "type": "string",
            "description": "项目或者代码库名字"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ],
            "description": "查询类型"
          },
          "modularity": {
            "type": "number",
            "description": "模块性"
          },
          "functions": {
            "type": "number",
            "description": "函数总个数"
          },
          "devEquivalent": {
            "type": "number",
            "description": "代码当量"
          },
          "namedFunctions": {
            "type": "number",
            "description": "非匿名非测试函数总个数"
          },
          "testedFunctions": {
            "type": "number",
            "description": "有测试代码覆盖的函数总个数"
          },
          "anonymousFunctions": {
            "type": "number",
            "description": "匿名函数总个数"
          },
          "commentedFunctions": {
            "type": "number",
            "description": "有注释覆盖的函数总个数"
          },
          "commentedFunctionsNamed": {
            "type": "number",
            "description": "有注释覆盖的函数总个数（非匿名函数）"
          },
          "duplicateFunctions": {
            "type": "number",
            "description": "重复函数总个数"
          },
          "cyclomaticTotal": {
            "type": "number",
            "description": "函数圈复杂度"
          },
          "testCoverage": {
            "type": "number",
            "description": "测试覆盖率：testedFunctions / namedFunctions"
          },
          "docCoverage": {
            "type": "number",
            "description": "注释覆盖率（根据系统配置可能有两种计算方式，包含或不包含匿名函数）: commentedFunctions / functions, commentedFunctionsNamed / (functions - anonymousFunctions)"
          },
          "dryness": {
            "type": "number",
            "description": "代码不重复度：(functions - duplicateFunctions) / functions"
          },
          "issueNumber": {
            "type": "number",
            "description": "代码问题数"
          },
          "issueBlockerNumber": {
            "type": "number",
            "description": "阻塞问题数"
          },
          "issueCriticalNumber": {
            "type": "number",
            "description": "严重问题数"
          },
          "issueMajorNumber": {
            "type": "number",
            "description": "主要问题数"
          },
          "issueMinorNumber": {
            "type": "number",
            "description": "次要问题数"
          },
          "issueInfoNumber": {
            "type": "number",
            "description": "提示问题数"
          },
          "issueBlockerRate": {
            "type": "number",
            "description": "阻塞问题率: issueBlockerNumber / functions"
          },
          "issueMajorRate": {
            "type": "number",
            "description": "主要问题率: issueMajorNumber / functions"
          },
          "issueCriticalRate": {
            "type": "number",
            "description": "严重问题率: issueCriticalNumber / functions"
          },
          "issueMinorRate": {
            "type": "number",
            "description": "次要问题率: issueMinorNumber / functions"
          },
          "issueInfoRate": {
            "type": "number",
            "description": "提示问题率: issueInfoNumber / functions"
          },
          "issueRate": {
            "type": "number",
            "description": "总代码问题率: issueNumber / functions"
          },
          "issueBlockerDensity": {
            "type": "number",
            "description": "阻塞问题密度: issueBlockerNumber / devEquivalent"
          },
          "issueMajorDensity": {
            "type": "number",
            "description": "主要问题密度: issueMajorNumber / devEquivalent"
          },
          "issueCriticalDensity": {
            "type": "number",
            "description": "严重问题密度: issueCriticalNumber / devEquivalent"
          },
          "issueMinorDensity": {
            "type": "number",
            "description": "次要问题密度: issueMinorNumber / devEquivalent"
          },
          "issueInfoDensity": {
            "type": "number",
            "description": "提示问题密度: issueInfoNumber / devEquivalent"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "modularity",
          "functions",
          "devEquivalent",
          "namedFunctions",
          "testedFunctions",
          "anonymousFunctions",
          "commentedFunctions",
          "commentedFunctionsNamed",
          "duplicateFunctions",
          "cyclomaticTotal",
          "testCoverage",
          "docCoverage",
          "dryness",
          "issueNumber",
          "issueBlockerNumber",
          "issueCriticalNumber",
          "issueMajorNumber",
          "issueMinorNumber",
          "issueInfoNumber",
          "issueBlockerRate",
          "issueMajorRate",
          "issueCriticalRate",
          "issueMinorRate",
          "issueInfoRate",
          "issueRate",
          "issueBlockerDensity",
          "issueMajorDensity",
          "issueCriticalDensity",
          "issueMinorDensity",
          "issueInfoDensity"
        ]
      },
      "setAnalyticsSettingReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "singleBranch": {
            "type": "boolean",
            "description": " 当量分析分支选择，true：仅分析默认分支，false：分析全部分支",
            "deprecated": true
          },
          "aspectAnalysis": {
            "type": "boolean",
            "description": "是否开启软件工程质量分析"
          },
          "codeQualityAnalysis": {
            "type": "boolean",
            "description": "是否开启代码质量分析"
          },
          "defaultRef": {
            "type": "string",
            "description": "质量分析的默认分支。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
          },
          "commitAfterTime": {
            "type": "string",
            "description": "分析起始时间，传null为全部时间，格式为如：2022-04-01T07:35:54.413Z"
          },
          "sysExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "系统排除的目录们"
          },
          "customGlobExcludedPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "自定义排除的目录们"
          },
          "excludedCommitHashes": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "排除提交的hash列表"
          },
          "commitSlocLimit": {
            "type": "integer",
            "description": "排除模式：SLOC超过这个数, 就排除"
          },
          "maintainPaths": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "保留文件路径"
          },
          "analysisBranch": {
            "type": "string",
            "enum": [
              "all",
              "default",
              "include",
              "exclude"
            ],
            "description": "当量分析分支设置"
          },
          "analysisIncludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "当量分析包含分支，与排除分支冲突时白名单优先。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
          },
          "analysisExcludeRefs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "当量分析排除分支。分支以refs/remotes/origin/为前缀，例如refs/remotes/origin/master；Tag以refs/tags/为前缀，例如refs/tags/v0.3.0"
          },
          "analysisRefRegex": {
            "type": "string",
            "description": "当量分析分支匹配正则表达式"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "GetFunctionReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "email": {
            "type": "string",
            "description": "贡献者邮箱"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "minimum": 1,
            "description": "每页大小(最大值1000)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "page",
          "pageSize"
        ]
      },
      "GetFunctionItem": {
        "properties": {
          "id": {
            "type": "string",
            "description": "节点id"
          },
          "frequentAuthorEmail": {
            "type": "string",
            "description": "最常编辑作者邮箱"
          },
          "name": {
            "type": "string",
            "description": "函数名称"
          },
          "signature": {
            "type": "string",
            "description": "签名"
          },
          "filename": {
            "type": "string",
            "description": "文件路径"
          },
          "inDegree": {
            "type": "string",
            "description": "进入顶点的边数（需要打开软件工程质量分析）"
          },
          "outDegree": {
            "type": "string",
            "description": "出顶点的边数（需要打开软件工程质量分析）"
          },
          "cyclomatic": {
            "type": "number",
            "description": "圈复杂度（需要打开软件工程质量分析）"
          }
        },
        "type": "object",
        "required": [
          "id",
          "frequentAuthorEmail",
          "name",
          "signature",
          "filename",
          "inDegree",
          "outDegree",
          "cyclomatic"
        ]
      },
      "GetFunctionResp": {
        "properties": {
          "total": {
            "type": "number",
            "description": "函数数量"
          },
          "offset": {
            "type": "number",
            "description": "函数数量偏移量"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/GetFunctionItem"
            },
            "type": "array",
            "description": "函数列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "FunctionDetailQuery": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "authorEmail": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者邮箱"
          },
          "isTest": {
            "type": "boolean",
            "description": "是否是测试函数"
          },
          "isTestCovered": {
            "type": "boolean",
            "description": "是否有测试覆盖"
          },
          "isDocCovered": {
            "type": "boolean",
            "description": "是否有注释覆盖"
          },
          "hasDuplication": {
            "type": "boolean",
            "description": "是否有重复代码"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "minimum": 1,
            "description": "每页大小(最大值1000)"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "page",
          "pageSize"
        ]
      },
      "RepoTechTagPackageQuery": {
        "properties": {
          "format": {
            "type": "string",
            "enum": [
              "package",
              "tag"
            ],
            "description": "分组依据package或者标签"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          }
        },
        "type": "object",
        "required": [
          "format",
          "repoIds"
        ]
      },
      "RepoFileEfficiencyQuery": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "filePath": {
            "type": "string",
            "description": "相对代码库根目录的文件路径（支持GLOB语法，如: src/app/* , 详细规则参考 https://www.npmjs.com/package/glob-to-regexp）"
          },
          "authorTimeFrom": {
            "format": "date-time",
            "type": "string",
            "description": "Author Time起始时间"
          },
          "authorTimeTo": {
            "format": "date-time",
            "type": "string",
            "description": "Author Time截止时间"
          },
          "authorEmails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "Author Email列表"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "minimum": 1,
            "description": "每页大小(最大值1000)"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "page",
          "pageSize"
        ]
      },
      "EfficiencyByFile": {
        "properties": {
          "filePath": {
            "type": "string",
            "description": "文件路径"
          },
          "devEquivalent": {
            "type": "integer",
            "description": "代码当量"
          },
          "devValue": {
            "type": "number",
            "description": "开发影响力（已废弃）"
          },
          "addLines": {
            "type": "integer",
            "description": "增加行数（依据分析引擎通过git命令获取的新增行数，忽略所有空白）"
          },
          "deleteLines": {
            "type": "integer",
            "description": "删除行数（依据分析引擎通过git命令获取的删除行数，忽略所有空白）"
          },
          "cyclomaticTotal": {
            "type": "integer",
            "description": "圈复杂度"
          }
        },
        "type": "object",
        "required": [
          "filePath",
          "devEquivalent",
          "devValue",
          "addLines",
          "deleteLines",
          "cyclomaticTotal"
        ]
      },
      "EfficiencyByFileResult": {
        "properties": {
          "total": {
            "type": "integer",
            "description": "总数"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/EfficiencyByFile"
            },
            "type": "array",
            "description": "数据"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "RepoBranchEfficiencyQuery": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "branches": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "分支列表 (只能选择分析设置中效能分析分支选择自选分支中选中的分支，可选的分支可以通过/openapi/repo/analyzed_branches接口查询)"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "起始时间（author time）"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "截止时间（author time）"
          },
          "unitOfTime": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month"
            ],
            "description": "时间聚合单位"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "startDate",
          "unitOfTime"
        ]
      },
      "DevEqTimeSpan": {
        "properties": {
          "date": {
            "format": "datetime",
            "type": "string",
            "description": "日期"
          },
          "value": {
            "type": "number",
            "description": "代码当量",
            "format": "integer"
          }
        },
        "type": "object",
        "required": [
          "date",
          "value"
        ]
      },
      "RepoBranchEfficiencyResult": {
        "properties": {
          "branch": {
            "type": "string",
            "description": "分支名称"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/DevEqTimeSpan"
            },
            "type": "array",
            "description": "代码当量数据序列"
          }
        },
        "type": "object",
        "required": [
          "branch",
          "series"
        ]
      },
      "AnalyzedBranchesQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          }
        },
        "type": "object",
        "required": [
          "repoIds"
        ]
      },
      "AnalyzedBranchesResult": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "branches": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "分支列表"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "branches"
        ]
      },
      "CommitRemark": {
        "properties": {
          "repoId": {
            "type": "string",
            "description": "代码库ID"
          },
          "hash": {
            "type": "string",
            "description": "提交散列"
          },
          "remark": {
            "type": "string",
            "description": "备注"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "hash",
          "remark"
        ]
      },
      "ReauthorizeRequest": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "authType": {
            "type": "string",
            "enum": [
              "SSH_KEY",
              "HTTP_BASE",
              "PUBLIC"
            ],
            "description": "授权类型"
          },
          "username": {
            "type": "string",
            "description": "账户名"
          },
          "password": {
            "type": "string",
            "description": "账户密码"
          },
          "privateKey": {
            "type": "string",
            "description": "私钥"
          },
          "secretId": {
            "type": "string",
            "description": "秘密ID"
          }
        },
        "type": "object",
        "required": [
          "repoIds"
        ]
      },
      "LsRemoteRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "TeamEfficiencyMetricOptions": {
        "properties": {
          "authorTime": {
            "$ref": "#/components/schemas/MetricOptionTimeRange",
            "description": "时间范围"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "TeamMemberInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountID"
          },
          "orgId": {
            "format": "uuid",
            "type": "string",
            "description": "组织ID"
          },
          "accountId": {
            "format": "uuid",
            "type": "string",
            "description": "AccountID"
          },
          "title": {
            "type": "string",
            "description": "职位"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "salary": {
            "type": "number",
            "description": "薪资"
          },
          "rank": {
            "type": "string",
            "description": "职级"
          },
          "promotionDate": {
            "type": "string",
            "description": "晋升日期"
          },
          "jobNumber": {
            "type": "string",
            "description": "工号"
          },
          "enable": {
            "type": "boolean",
            "description": "用户账户是否启用"
          },
          "allowLogin": {
            "type": "boolean",
            "description": "账号是否允许登陆"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string",
            "description": "主要邮箱"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "所有邮箱列表"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "是否超级管理员"
          }
        },
        "type": "object",
        "required": [
          "id",
          "orgId",
          "accountId",
          "createTime",
          "updateTime",
          "name",
          "enable",
          "allowLogin",
          "primaryEmail",
          "emails",
          "isAdmin"
        ]
      },
      "TeamMemberQuery": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string",
            "description": "团队ID"
          },
          "offset": {
            "type": "integer",
            "description": "分页偏移量"
          },
          "limit": {
            "type": "integer",
            "description": "分页返回记录数"
          },
          "subTeam": {
            "type": "boolean",
            "description": "是否包含子团队"
          }
        },
        "type": "object",
        "required": [
          "teamId",
          "offset",
          "limit",
          "subTeam"
        ]
      },
      "TeamMemberResp": {
        "properties": {
          "total": {
            "type": "integer",
            "description": "结果集总数"
          },
          "items": {
            "items": {
              "$ref": "#/components/schemas/TeamMemberInfo"
            },
            "type": "array",
            "description": "成员列表"
          },
          "offset": {
            "type": "integer",
            "description": "分页偏移量"
          },
          "limit": {
            "type": "integer",
            "description": "分页返回记录数"
          }
        },
        "type": "object",
        "required": [
          "total",
          "items",
          "offset",
          "limit"
        ]
      },
      "TeamId": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string",
            "description": "团队ID"
          }
        },
        "type": "object",
        "required": [
          "teamId"
        ]
      },
      "AddTeamReq": {
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string",
            "maxLength": 255,
            "description": "团队名称"
          },
          "parentId": {
            "format": "uuid",
            "type": "string",
            "description": "上级团队ID"
          }
        },
        "type": "object",
        "required": [
          "name",
          "parentId"
        ]
      },
      "UpdateTeamReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "团队ID"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "团队名称"
          },
          "parentId": {
            "format": "uuid",
            "type": "string",
            "description": "上级团队ID"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "TeamQualityMetricQuery": {
        "properties": {
          "teamIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "各团队ID"
          },
          "options": {
            "$ref": "#/components/schemas/QualityMetricColumns",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "teamIds",
          "options"
        ]
      },
      "TeamEficiencyMetricQuery": {
        "properties": {
          "teamIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "各团队ID"
          },
          "options": {
            "$ref": "#/components/schemas/TeamEfficiencyMetricOptions",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "teamIds",
          "options"
        ]
      },
      "AccountEmailInfo": {
        "properties": {
          "name": {
            "type": "string",
            "description": "提交作者名称"
          },
          "email": {
            "type": "string",
            "description": "提交作者Email"
          },
          "excluded": {
            "type": "boolean",
            "description": "是否在黑名单中"
          },
          "account_id": {
            "format": "uuid",
            "type": "string"
          },
          "visible": {
            "type": "boolean"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "exclude_time": {
            "format": "date-time",
            "type": "string"
          },
          "account_email": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email",
          "excluded",
          "visible",
          "create_time",
          "exclude_time",
          "account_email"
        ]
      },
      "CommitAuthorBasic": {
        "properties": {
          "name": {
            "type": "string",
            "description": "提交作者名称"
          },
          "email": {
            "type": "string",
            "description": "提交作者Email"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ]
      },
      "ContributorTeamUser": {
        "properties": {
          "team_user_id": {
            "format": "uuid",
            "type": "string"
          },
          "primary_email": {
            "format": "email",
            "type": "string",
            "description": "主邮箱"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "副邮箱"
          }
        },
        "type": "object",
        "required": [
          "team_user_id",
          "primary_email",
          "name",
          "emails"
        ]
      },
      "MergeSuggestion": {
        "properties": {
          "teamUser": {
            "$ref": "#/components/schemas/ContributorTeamUser",
            "description": "如果贡献者已存在对应的账号，那么需要一并返回相关数据"
          },
          "commitAuthor": {
            "$ref": "#/components/schemas/CommitAuthorBasic",
            "description": "主邮箱"
          },
          "recommendedCommitAuthorsToBeMerged": {
            "items": {
              "$ref": "#/components/schemas/CommitAuthorBasic"
            },
            "type": "array",
            "description": "建议合并的邮箱列表"
          }
        },
        "type": "object",
        "required": [
          "commitAuthor",
          "recommendedCommitAuthorsToBeMerged"
        ]
      },
      "CommitAuthorQueryReq": {
        "properties": {
          "query": {
            "type": "string",
            "description": "关键字搜索"
          },
          "pageSize": {
            "type": "integer",
            "description": "返回记录数, 默认10"
          },
          "is_excluded": {
            "type": "boolean",
            "description": "是否在黑名单中"
          },
          "is_bound": {
            "type": "boolean",
            "description": "是否已经关联账户"
          }
        },
        "type": "object",
        "required": [
          "query"
        ]
      },
      "CommitAuthorListReq": {
        "properties": {
          "query": {
            "type": "string",
            "description": "关键字搜索"
          },
          "pageSize": {
            "type": "integer",
            "description": "返回记录数"
          },
          "is_excluded": {
            "type": "boolean",
            "description": "是否在黑名单中"
          },
          "is_bound": {
            "type": "boolean",
            "description": "是否已经关联账户"
          },
          "sort": {
            "type": "string",
            "enum": [
              "create_time",
              "exclude_time"
            ],
            "description": "结果排序字段， 默认create_time"
          },
          "order": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ],
            "description": "升序|降序, 默认DESC"
          },
          "page": {
            "type": "integer",
            "description": "分页页数，默认为1"
          }
        },
        "type": "object",
        "required": [
          "query",
          "pageSize"
        ]
      },
      "KeywordQueryPagedReq": {
        "properties": {
          "search": {
            "type": "string",
            "description": "搜索关键字"
          },
          "page": {
            "type": "integer",
            "description": "页码（从1开始）"
          },
          "pageSize": {
            "type": "integer",
            "description": "每页记录数"
          }
        },
        "type": "object",
        "required": [
          "search",
          "page",
          "pageSize"
        ]
      },
      "BlackListRequest": {
        "properties": {
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者邮箱"
          }
        },
        "type": "object",
        "required": [
          "emails"
        ]
      },
      "PagedMergeSuggestions": {
        "properties": {
          "total": {
            "type": "integer",
            "description": "总记录书"
          },
          "contributors": {
            "items": {
              "$ref": "#/components/schemas/MergeSuggestion"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "contributors"
        ]
      },
      "PagedCommitAuthorList": {
        "properties": {
          "total": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/CommitAuthorListItem"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "AccountEfficiencyMetricOptions": {
        "properties": {
          "authorTime": {
            "$ref": "#/components/schemas/MetricOptionTimeRange",
            "description": "时间范围，目前仅效率类支持"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "需要聚合的时间范围"
          },
          "testCode": {
            "type": "boolean",
            "description": "按是否测试代码查询当量。true：仅查询测试代码的当量，false：仅查询非测试代码的当量，不传：查询所有代码的当量。  (此过滤条件仅支持开发当量，开发价值指标)"
          },
          "selectColumns": {
            "items": {
              "type": "string",
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ReportEfficiencyMetricType"
                }
              ]
            },
            "minItems": 1,
            "type": "array",
            "description": "支持效率类字段查询"
          }
        },
        "type": "object",
        "required": [
          "selectColumns"
        ]
      },
      "AccountEfficiencyQuery": {
        "properties": {
          "accountIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "AccountId列表"
          },
          "options": {
            "type": "object",
            "$ref": "#/components/schemas/AccountEfficiencyMetricOptions"
          }
        },
        "type": "object",
        "required": [
          "accountIds",
          "options"
        ]
      },
      "AccountQualityQuery": {
        "properties": {
          "accountIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "AccountId列表"
          },
          "options": {
            "type": "object",
            "$ref": "#/components/schemas/QualityMetricColumns"
          }
        },
        "type": "object",
        "required": [
          "accountIds",
          "options"
        ]
      },
      "AccountTag": {
        "properties": {
          "name": {
            "type": "string",
            "description": "名称"
          },
          "value": {
            "type": "string",
            "description": "值"
          }
        },
        "type": "object",
        "required": [
          "name",
          "value"
        ]
      },
      "FindAccountResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          },
          "title": {
            "type": "string",
            "description": "职位"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "salary": {
            "type": "number",
            "description": "薪资"
          },
          "rank": {
            "type": "string",
            "description": "职级"
          },
          "promotionDate": {
            "format": "date-time",
            "type": "string",
            "description": "晋升日期"
          },
          "jobNumber": {
            "type": "string",
            "description": "工号"
          },
          "enable": {
            "type": "boolean",
            "description": "账号是否启用"
          },
          "allowLogin": {
            "type": "boolean",
            "description": "账号是否可登录"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string",
            "description": "用户主邮箱地址"
          },
          "emails": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "用户邮箱列表"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "团队ID列表"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户角色ID列表"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "是否为超级管理员"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/AccountTag"
            },
            "type": "array",
            "description": "自定义标签"
          },
          "projectPermissions": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目权限列表"
          },
          "teamPermissions": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "团队权限列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "createTime",
          "updateTime",
          "name",
          "salary",
          "rank",
          "enable",
          "allowLogin",
          "primaryEmail",
          "emails",
          "teamIds",
          "roleIds",
          "isAdmin",
          "tags",
          "projectPermissions",
          "teamPermissions"
        ]
      },
      "GetAccountRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "AddAccountRequest": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "姓名"
          },
          "email": {
            "format": "email",
            "type": "string",
            "maxLength": 255,
            "description": "用户主邮箱地址"
          },
          "jobNumber": {
            "type": "string",
            "description": "工号"
          },
          "title": {
            "type": "string",
            "description": "职位"
          },
          "salary": {
            "type": "number",
            "description": "薪资"
          },
          "rank": {
            "type": "string",
            "description": "职级"
          },
          "promotionDate": {
            "type": "integer",
            "description": "晋升日期, ms时间戳"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "所属团队ID列表"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户角色ID列表"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          }
        },
        "type": "object",
        "required": [
          "name",
          "email"
        ]
      },
      "UpdateAccountRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          },
          "name": {
            "type": "string",
            "maxLength": 255,
            "description": "姓名"
          },
          "emails": {
            "items": {
              "type": "string",
              "maxLength": 255
            },
            "type": "array",
            "description": "用户邮箱地址列表(替换掉用户的副邮箱设置)"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/AccountTag"
            },
            "type": "array",
            "description": "自定义标签"
          },
          "jobNumber": {
            "type": "string",
            "description": "工号"
          },
          "title": {
            "type": "string",
            "description": "职位"
          },
          "salary": {
            "type": "number",
            "description": "薪资"
          },
          "rank": {
            "type": "string",
            "description": "职级"
          },
          "promotionDate": {
            "type": "integer",
            "description": "晋升日期, ms时间戳"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "所属团队ID列表"
          },
          "roleIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "用户角色ID列表"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "UpdateAccountResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "UpdateAccountStatusRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          },
          "enable": {
            "type": "boolean",
            "description": "用户账户是否启用"
          },
          "allowLogin": {
            "type": "boolean",
            "description": "用户账户是否可登录"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "UpdateAccountReposRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码仓库ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repoIds"
        ]
      },
      "UpdateAccountReposResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "AccountId"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码仓库ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "repoIds"
        ]
      },
      "NewAccount": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户id"
          },
          "title": {
            "description": "职位"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "姓名"
          },
          "salary": {
            "type": "number",
            "description": "薪资"
          },
          "rank": {
            "type": "string",
            "description": "职级"
          },
          "promotionDate": {
            "format": "date-time",
            "type": "string",
            "description": "晋升日期, ms时间戳"
          },
          "jobNumber": {
            "type": "string",
            "description": "工号"
          },
          "isAdmin": {
            "type": "boolean",
            "description": "是否为超级管理员"
          },
          "enable": {
            "type": "boolean",
            "description": "账号是否启用"
          },
          "allowLogin": {
            "type": "boolean",
            "description": "账号是否可登录"
          }
        },
        "type": "object",
        "required": [
          "id",
          "createTime",
          "updateTime",
          "enable",
          "allowLogin"
        ]
      },
      "UserIDRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ResetPasswordResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "password": {
            "type": "string",
            "description": "重置后的用户密码"
          }
        },
        "type": "object",
        "required": [
          "id",
          "password"
        ]
      },
      "UpdateEmailRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "format": "email",
            "description": "Email"
          }
        },
        "type": "object",
        "required": [
          "id",
          "email"
        ]
      },
      "UserIDResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "BatchQueryTeamHistoryRequest": {
        "properties": {
          "accountEmails": {
            "items": {
              "format": "email",
              "type": "string"
            },
            "type": "array",
            "description": "账户邮箱"
          }
        },
        "type": "object",
        "required": [
          "accountEmails"
        ]
      },
      "TeamRecordRequest": {
        "properties": {
          "teamId": {
            "format": "uuid",
            "type": "string",
            "description": "团队 ID"
          },
          "startTime": {
            "format": "date-time",
            "type": "string",
            "description": "加入团队时间 (可以不传该参数, 但不可传空字符串)"
          },
          "endTime": {
            "format": "date-time",
            "type": "string",
            "description": "离开团队时间 (可以不传该参数, 但不可传空字符串)"
          }
        },
        "type": "object",
        "required": [
          "teamId"
        ]
      },
      "ResetTeamRequest": {
        "properties": {
          "accountEmail": {
            "format": "email",
            "type": "string",
            "description": "账户邮箱"
          },
          "teamRecords": {
            "items": {
              "$ref": "#/components/schemas/TeamRecordRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "accountEmail",
          "teamRecords"
        ]
      },
      "BatchResetTeamRequest": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/ResetTeamRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "items"
        ]
      },
      "UpdateAccountTeamsRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "团队ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "teamIds"
        ]
      },
      "UpdateAccountTeamsResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "teamIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "团队ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "teamIds"
        ]
      },
      "UpdateAccountProjectsRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "projectIds"
        ]
      },
      "UpdateAccountProjectsResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "账户ID"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          }
        },
        "type": "object",
        "required": [
          "id",
          "projectIds"
        ]
      },
      "RoleInfo": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "角色ID"
          },
          "name": {
            "type": "string",
            "description": "角色名称"
          },
          "description": {
            "type": "string",
            "description": "角色描述"
          },
          "hasManagerReport": {
            "type": "boolean",
            "description": "是否接收管理者日报周报"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "hasManagerReport",
          "updateTime",
          "createTime"
        ]
      },
      "ListIssueReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目id"
          },
          "page": {
            "type": "number",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 99999,
            "type": "number",
            "description": "每页大小(最大99999)"
          }
        },
        "type": "object",
        "required": [
          "id",
          "page",
          "pageSize"
        ]
      },
      "ProjectIdQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目id"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ProjectId": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目id"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ]
      },
      "MoveRepoRequest": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "移动目标项目ID"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "projectId"
        ]
      },
      "MoveRepoResp": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "repoId"
        ]
      },
      "ProjectRepo": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "projectId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "projectId"
        ]
      },
      "UpdateProjectTreeReq": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "parentId": {
            "format": "uuid",
            "type": "string",
            "description": "移动目标项目组ID"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "parentId"
        ]
      },
      "ProjectMembers": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "accountIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目成员Account的Id列表"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "accountIds"
        ]
      },
      "ProjectMemberResp": {
        "properties": {
          "accountId": {
            "format": "uuid",
            "type": "string"
          },
          "accountName": {
            "type": "string"
          },
          "primaryEmail": {
            "format": "email",
            "type": "string",
            "description": "用户主邮箱地址"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "accountEnabled": {
            "type": "boolean",
            "description": "账号是否启用"
          }
        },
        "type": "object",
        "required": [
          "accountId",
          "accountName",
          "primaryEmail",
          "updateTime",
          "accountEnabled"
        ]
      },
      "AddProjectReq": {
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "项目名称"
          },
          "description": {
            "type": "string",
            "description": "项目描述"
          },
          "logo": {
            "type": "string",
            "description": "项目图标URL"
          },
          "parentProjectId": {
            "format": "uuid",
            "type": "string",
            "description": "上级项目ID"
          }
        },
        "type": "object",
        "required": [
          "name",
          "description",
          "parentProjectId"
        ]
      },
      "UpdateProjectReq": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "maxLength": 255,
            "description": "项目名称"
          },
          "description": {
            "type": "string",
            "description": "项目描述"
          },
          "logo_url": {
            "type": "string",
            "description": "项目图标URL"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description"
        ]
      },
      "ProjectListItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID"
          },
          "name": {
            "type": "string",
            "description": "项目名称"
          },
          "description": {
            "type": "string",
            "description": "项目描述"
          },
          "parentId": {
            "format": "uuid",
            "type": "string",
            "description": "上级项目ID"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "parentId"
        ]
      },
      "ProjectEfficiencyQuery": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          },
          "options": {
            "$ref": "#/components/schemas/EfficiencyParam",
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "projectIds",
          "options"
        ]
      },
      "ProjectQualityQuery": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          },
          "options": {
            "$ref": "#/components/schemas/QualityMetricColumns",
            "type": "object"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/QualityDateQuery",
            "description": "查询时间范围"
          }
        },
        "type": "object",
        "required": [
          "projectIds",
          "options"
        ]
      },
      "QueryFocusnessRequest": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "projectId": {
            "format": "uuid",
            "type": "string"
          },
          "since": {
            "format": "date-time",
            "type": "string",
            "description": "起始时间"
          },
          "until": {
            "format": "date-time",
            "type": "string",
            "description": "结束时间"
          },
          "filter": {
            "$ref": "#/components/schemas/RecordFilterValue"
          }
        },
        "type": "object",
        "required": [
          "filter"
        ]
      },
      "IssueList": {
        "properties": {
          "total": {
            "type": "number"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/IssueItem"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "QueryFocusnessResponse": {
        "properties": {
          "focusness": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "focusness"
        ]
      },
      "PipelineRequest": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "project id"
          },
          "pipelineId": {
            "type": "number",
            "description": "pipeline id，trigger-pipeline返回结果里的id"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "pipelineId"
        ]
      },
      "PipelineResponse": {
        "properties": {
          "id": {
            "type": "number",
            "description": "pipeline id, retrieve-pipeline接口用这个作为pipelineId，查询pipeline结果"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "pipeline创建时间"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "pipeline更新时间"
          },
          "name": {
            "type": "string",
            "description": "pipeline名称"
          },
          "totalTasks": {
            "type": "number",
            "description": "总任务数量"
          },
          "finishedTasks": {
            "type": "number",
            "description": "已完成的任务数量"
          },
          "beganAt": {
            "format": "date-time",
            "type": "string",
            "description": "pipeline开始时间"
          },
          "finishedAt": {
            "format": "date-time",
            "type": "string",
            "description": "pipeline完成时间"
          },
          "status": {
            "enum": [
              "TASK_CREATED",
              "TASK_RUNNING",
              "TASK_COMPLETED",
              "TASK_FAILED",
              "TASK_CANCELLED"
            ],
            "type": "string",
            "description": "pipeline状态"
          },
          "message": {
            "type": "string",
            "description": "错误信息"
          },
          "spentSeconds": {
            "type": "number",
            "description": "耗时（单位秒）"
          },
          "stage": {
            "type": "number",
            "description": "stage"
          },
          "blueprintId": {
            "type": "number",
            "description": "blueprint id"
          }
        },
        "type": "object",
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "totalTasks",
          "finishedTasks",
          "beganAt",
          "finishedAt",
          "status",
          "message",
          "spentSeconds",
          "stage",
          "blueprintId"
        ]
      },
      "ProjectRankingQuery": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID （不能同时与repoIds一起使用）"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID （不能同时与projectId一起使用）"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者（邮箱格式）"
          },
          "limit": {
            "type": "number",
            "description": "限制（表示取的条数）"
          },
          "offset": {
            "type": "number",
            "description": "偏移（表示从第几条开始查）"
          }
        },
        "type": "object"
      },
      "ConfigResponse": {
        "properties": {
          "id": {
            "type": "integer",
            "description": "配置ID"
          },
          "language": {
            "type": "string",
            "description": "配置相关的编程语言"
          },
          "regex": {
            "type": "string",
            "description": "配置正则表达"
          }
        },
        "type": "object",
        "required": [
          "id",
          "language",
          "regex"
        ]
      },
      "UpdateConfigRequest": {
        "properties": {
          "id": {
            "type": "integer",
            "description": "配置ID"
          },
          "regex": {
            "type": "string",
            "description": "配置正则表达"
          }
        },
        "type": "object",
        "required": [
          "id",
          "regex"
        ]
      },
      "IndustryRepository": {
        "properties": {
          "name": {
            "type": "string",
            "description": "代码库名称"
          },
          "url": {
            "type": "string",
            "description": "代码库URL"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "编程语言"
          },
          "developerNumFrom": {
            "type": "number",
            "description": "平均每周有提交贡献者下限数量"
          },
          "developerNumTo": {
            "type": "number",
            "description": "平均每周有提交贡献者上限数量"
          }
        },
        "type": "object",
        "required": [
          "name",
          "url",
          "languages",
          "developerNumFrom",
          "developerNumTo"
        ]
      },
      "IndustryMetricSubject": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "ID"
          },
          "name": {
            "type": "string",
            "description": "名称"
          },
          "languageDistribution": {
            "description": "编程语言分配"
          },
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "编程语言"
          },
          "memberCount": {
            "type": "number",
            "description": "平均每周有提交贡献者数量"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "languageDistribution",
          "languages",
          "memberCount"
        ]
      },
      "IndustryBasicInfo": {
        "properties": {
          "languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "编程语言"
          },
          "repositories": {
            "items": {
              "$ref": "#/components/schemas/IndustryRepository"
            },
            "type": "array",
            "description": "代码库"
          }
        },
        "type": "object",
        "required": [
          "languages",
          "repositories"
        ]
      },
      "IndustryStatsMetric": {
        "properties": {
          "avg": {
            "type": "number",
            "description": "平均"
          },
          "median": {
            "type": "number",
            "description": "中值"
          },
          "q1Avg": {
            "type": "number",
            "description": "下四分位数"
          },
          "q3Avg": {
            "type": "number",
            "description": "上四分位数"
          }
        },
        "type": "object",
        "required": [
          "avg",
          "median",
          "q1Avg",
          "q3Avg"
        ]
      },
      "StatisticSeries": {
        "properties": {
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "日期"
          },
          "value": {
            "type": "number",
            "description": "值"
          }
        },
        "type": "object",
        "required": [
          "value"
        ]
      },
      "IndustryDevEqById": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目/代码库 ID"
          },
          "idType": {
            "type": "string",
            "enum": [
              "repository",
              "project"
            ],
            "description": "ID 类型"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery",
            "description": "时间范围"
          },
          "unitNumber": {
            "type": "integer",
            "description": "时间量值，单位为 week"
          }
        },
        "type": "object",
        "required": [
          "id",
          "idType",
          "dateQuery"
        ]
      },
      "IndustryDevEqDfficiencyResp": {
        "properties": {
          "dataAcquisitionTime": {
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "type": "array",
            "description": "数据采集日期。例如：[2022-12-21T16:00:00.000Z, 2022-12-29T15:59:59.999Z]"
          },
          "industry": {
            "type": "object",
            "$ref": "#/components/schemas/IndustryStatsMetric",
            "description": "行业统计指标"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/StatisticSeries"
            },
            "type": "array",
            "description": "统计学系列"
          }
        },
        "type": "object",
        "required": [
          "dataAcquisitionTime",
          "industry",
          "series"
        ]
      },
      "IndustryQualityQuery": {
        "properties": {
          "filter": {
            "items": {
              "$ref": "#/components/schemas/RecordFilterValue"
            },
            "type": "array",
            "description": "筛选器"
          },
          "metricType": {
            "enum": [
              "static_test_coverage",
              "doc_coverage",
              "modularity",
              "dryness",
              "issue_rate",
              "severe_issue_rate"
            ],
            "type": "string",
            "description": "行业指标类型"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "metricType"
        ]
      },
      "IndustryQualityResponse": {
        "properties": {
          "industry": {
            "$ref": "#/components/schemas/IndustryStatsMetric",
            "description": "行业统计指标"
          },
          "value": {
            "type": "number",
            "description": "质量值"
          }
        },
        "type": "object",
        "required": [
          "industry",
          "value"
        ]
      },
      "IndustryDevEqEfficiencyResponse": {
        "properties": {
          "subject": {
            "$ref": "#/components/schemas/IndustryMetricSubject",
            "description": "行业指标对象"
          },
          "industry": {
            "$ref": "#/components/schemas/IndustryBasicInfo",
            "description": "行业基本记录"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "industry"
        ]
      },
      "IndustryDevEqEfficiencyQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目/代码库 ID"
          },
          "idType": {
            "type": "string",
            "enum": [
              "repository",
              "project"
            ],
            "description": "ID 类型"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery",
            "description": "时间范围"
          }
        },
        "type": "object",
        "required": [
          "id",
          "idType",
          "dateQuery"
        ]
      },
      "IndustryQualityRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "项目/代码库 ID"
          },
          "idType": {
            "type": "string",
            "enum": [
              "repository",
              "project"
            ],
            "description": "ID 类型"
          },
          "metricType": {
            "enum": [
              "static_test_coverage",
              "doc_coverage",
              "modularity",
              "dryness",
              "issue_rate",
              "severe_issue_rate"
            ],
            "type": "string",
            "description": "行业指标类型"
          }
        },
        "type": "object",
        "required": [
          "id",
          "idType",
          "metricType"
        ]
      },
      "ListSprintQuery": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目id"
          },
          "includingMetaData": {
            "type": "boolean",
            "description": "是否包含元信息"
          },
          "page": {
            "type": "integer",
            "description": "页数"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "description": "每页大小(最大值1000)"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "page",
          "pageSize"
        ]
      },
      "KeyValuePair": {
        "properties": {
          "key": {
            "type": "string",
            "description": "唯一id"
          },
          "value": {
            "type": "string",
            "description": "展示名称"
          }
        },
        "type": "object",
        "required": [
          "key",
          "value"
        ]
      },
      "SprintIssueUserItem": {
        "properties": {
          "sprintId": {
            "type": "string",
            "description": "迭代id"
          },
          "id": {
            "type": "string",
            "description": "用户id"
          },
          "name": {
            "type": "string",
            "description": "用户姓名"
          },
          "email": {
            "type": "string",
            "description": "用户邮箱地址"
          },
          "avatar": {
            "type": "string",
            "description": "用户头像"
          }
        },
        "type": "object",
        "required": [
          "sprintId",
          "id",
          "name",
          "email",
          "avatar"
        ]
      },
      "SprintMetaData": {
        "properties": {
          "priority": {
            "items": {
              "$ref": "#/components/schemas/KeyValuePair",
              "items": {},
              "type": "array"
            },
            "type": "array",
            "description": "事务优先级列表，用于筛选issue"
          },
          "status": {
            "items": {
              "$ref": "#/components/schemas/KeyValuePair",
              "items": {},
              "type": "array"
            },
            "type": "array",
            "description": "事务状态列表，用于筛选issue"
          },
          "type": {
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            },
            "type": "array",
            "description": "事务类型列表，用于筛选issue"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/SprintIssueUserItem"
            },
            "type": "array",
            "description": "用户列表，用于筛选issue"
          }
        },
        "type": "object",
        "required": [
          "priority",
          "status",
          "type",
          "users"
        ]
      },
      "SprintItem": {
        "properties": {
          "id": {
            "type": "string",
            "description": "迭代id"
          },
          "name": {
            "type": "string",
            "description": "迭代名称"
          },
          "startedDate": {
            "format": "date-time",
            "type": "string",
            "description": "迭代[计划]开始时间"
          },
          "endedDate": {
            "format": "date-time",
            "type": "string",
            "description": "迭代计划结束时间"
          },
          "completedDate": {
            "format": "date-time",
            "type": "string",
            "description": "迭代完成时间"
          },
          "status": {
            "enum": [
              "CLOSED",
              "ACTIVE",
              "FUTURE"
            ],
            "type": "string",
            "description": "迭代当前状态"
          },
          "originalBoardId": {
            "type": "string",
            "description": "迭代所属看板id"
          },
          "url": {
            "type": "string",
            "description": "迭代链接"
          },
          "metaData": {
            "items": {
              "$ref": "#/components/schemas/SprintMetaData"
            },
            "type": "array",
            "description": "迭代元信息"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "startedDate",
          "endedDate",
          "completedDate",
          "status",
          "originalBoardId",
          "url"
        ]
      },
      "ListSprintResponse": {
        "properties": {
          "total": {
            "type": "number",
            "description": "迭代总数"
          },
          "offset": {
            "type": "number",
            "description": "迭代偏移量"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/SprintItem"
            },
            "type": "array",
            "description": "迭代列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "ListSprintIssueQuery": {
        "properties": {
          "projectId": {
            "type": "string",
            "description": "项目id"
          },
          "sprintId": {
            "type": "string",
            "description": "迭代id"
          },
          "field": {
            "enum": [
              "key",
              "worktime",
              "dev_eq"
            ],
            "type": "string",
            "description": "排序字段, key-事务号, worktime-工时, dev_eq-代码当量"
          },
          "sort": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "description": "排序顺序"
          },
          "priority": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务优先级, 从sprint的元信息中获取"
          },
          "assigneeId": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务assignee id, 从sprint的元信息中获取"
          },
          "status": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务状态名称, 从sprint的元信息中获取"
          },
          "type": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务类型名称, 从sprint的元信息中获取"
          },
          "issueKeys": {
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "type": "array",
            "description": "issue key列表，按issue key查询，列表最大长度500"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "sprintId"
        ]
      },
      "SprintIssueItem": {
        "properties": {
          "addedStage": {
            "enum": [
              "BEFORE_SPRINT",
              "DURING_SPRINT",
              "AFTER_SPRINT"
            ],
            "type": "string",
            "description": "issue最后一次加入迭代的时机"
          },
          "assigneeId": {
            "type": "string",
            "description": "指派用户id"
          },
          "assigneeName": {
            "type": "string",
            "description": "指派用户名称"
          },
          "boardId": {
            "type": "string",
            "description": "看板id"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务创建时间"
          },
          "devEquivalent": {
            "type": "number",
            "description": "事务关联的所有代码当量"
          },
          "devEquivalentDuringSprint": {
            "type": "number",
            "description": "事务在迭代内的代码当量"
          },
          "flowStartedDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务流开始时间"
          },
          "iconUrl": {
            "type": "string",
            "description": "事务类型图标的url"
          },
          "id": {
            "type": "string",
            "description": "事务id"
          },
          "isRemoved": {
            "type": "boolean",
            "description": "事务是否已从sprint移除，永远是false，这个接口不会返回已移除的数据"
          },
          "key": {
            "type": "string",
            "description": "事务的简短键名"
          },
          "leadTimeMinutes": {
            "type": "number",
            "description": "事务leadtime"
          },
          "link": {
            "type": "string",
            "description": "事务链接，可以跳转到第三方服务"
          },
          "originalEstimateMinutes": {
            "type": "number",
            "description": "事务原始预估工时"
          },
          "parentIssueId": {
            "type": "string",
            "description": "父事务id（如果存在）"
          },
          "priority": {
            "type": "string",
            "description": "事务优先级"
          },
          "resolutionDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务解决时间"
          },
          "resolvedStage": {
            "enum": [
              "BEFORE_SPRINT",
              "DURING_SPRINT",
              "AFTER_SPRINT"
            ],
            "type": "string",
            "description": "事务解决时机"
          },
          "sprintId": {
            "type": "string",
            "description": "迭代id"
          },
          "startedDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务开始时间"
          },
          "status": {
            "type": "string",
            "description": "事务状态"
          },
          "storyPoint": {
            "type": "number",
            "description": "事务故事点"
          },
          "summary": {
            "type": "string",
            "description": "事务概述"
          },
          "timeSpentMinutes": {
            "type": "number",
            "description": "事务在迭代内记录的工时"
          },
          "title": {
            "type": "string",
            "description": "事务标题"
          },
          "type": {
            "type": "string",
            "description": "事务类型"
          },
          "updatedDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务最后更新时间"
          }
        },
        "type": "object",
        "required": [
          "addedStage",
          "assigneeId",
          "assigneeName",
          "boardId",
          "createdDate",
          "devEquivalent",
          "devEquivalentDuringSprint",
          "flowStartedDate",
          "iconUrl",
          "id",
          "isRemoved",
          "key",
          "leadTimeMinutes",
          "link",
          "originalEstimateMinutes",
          "priority",
          "resolutionDate",
          "resolvedStage",
          "sprintId",
          "startedDate",
          "status",
          "storyPoint",
          "summary",
          "timeSpentMinutes",
          "title",
          "type",
          "updatedDate"
        ]
      },
      "UploadCsvIssuesQuery": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "issues",
              "issue_repo_commits"
            ],
            "description": "csv导入类型"
          },
          "csvContent": {
            "type": "string",
            "description": "csv文件内容"
          },
          "connectionId": {
            "type": "string",
            "description": "lake 连接 id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "csvContent",
          "connectionId"
        ]
      },
      "OpenApiCsvErrorItem": {
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "错误码"
          },
          "rowNums": {
            "type": "number",
            "description": "错误行"
          },
          "columnName": {
            "type": "string",
            "description": "列名"
          }
        },
        "type": "object",
        "required": [
          "errorCode",
          "rowNums",
          "columnName"
        ]
      },
      "UploadCsvResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "description": "是否成功"
          },
          "message": {
            "items": {
              "$ref": "#/components/schemas/OpenApiCsvErrorItem"
            },
            "type": "array",
            "description": "错误信息"
          }
        },
        "type": "object",
        "required": [
          "success",
          "message"
        ]
      },
      "ListPeriodIssueQuery": {
        "properties": {
          "projectId": {
            "type": "string",
            "description": "项目id"
          },
          "field": {
            "enum": [
              "created_date",
              "updated_date"
            ],
            "type": "string",
            "description": "排序字段: created_date 或 updated_date"
          },
          "sort": {
            "enum": [
              "ASC",
              "DESC"
            ],
            "type": "string",
            "description": "排序顺序"
          },
          "statusCategory": {
            "items": {
              "enum": [
                "TODO",
                "IN_PROGRESS",
                "DONE"
              ],
              "type": "string"
            },
            "type": "array",
            "description": "事务状态的类别: TODO, IN_PROGRESS, DONE"
          },
          "typeCategory": {
            "items": {
              "enum": [
                "BUG",
                "REQUIREMENT",
                "INCIDENT",
                "TECH_DEBT"
              ],
              "type": "string"
            },
            "type": "array",
            "description": "事务类型的类别：BUG, REQUIREMENT, INCIDENT, TECH_DEBT"
          },
          "status": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务状态名称, 取\"设置-数据源配置-对应数据源配置中的标准状态名称\""
          },
          "type": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "事务类型名称，取\"设置-数据源配置-对应数据源配置中的标准类型名称\""
          },
          "timeRangeType": {
            "enum": [
              "created_date",
              "updated_date"
            ],
            "type": "string",
            "description": "时间范围类型，支持created_date和updated_date"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "时间范围，起始时间"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "时间范围，结束时间"
          },
          "issueKeys": {
            "items": {
              "type": "string"
            },
            "maxItems": 500,
            "type": "array",
            "description": "issue key列表，按issue key查询，列表最大长度500"
          },
          "page": {
            "type": "integer",
            "description": "页码"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "integer",
            "description": "每页记录数（默认为最大值1000）"
          }
        },
        "type": "object",
        "required": [
          "projectId"
        ]
      },
      "PeriodIssueItem": {
        "properties": {
          "id": {
            "type": "string",
            "description": "事务id"
          },
          "url": {
            "type": "string",
            "description": "事务url"
          },
          "issueKey": {
            "type": "string",
            "description": "事务的key"
          },
          "title": {
            "type": "string",
            "description": "事务标题"
          },
          "description": {
            "type": "string",
            "description": "事务描述"
          },
          "epicKey": {
            "type": "string",
            "description": "Epic key"
          },
          "type": {
            "type": "string",
            "description": "事务类型"
          },
          "status": {
            "type": "string",
            "description": "事务状态"
          },
          "originalStatus": {
            "type": "string",
            "description": "事务原始状态"
          },
          "storyPoint": {
            "type": "number",
            "description": "故事点"
          },
          "createdDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务创建时间"
          },
          "updatedDate": {
            "format": "date-time",
            "type": "string",
            "description": "事务更新时间"
          },
          "parentIssueId": {
            "type": "string",
            "description": "父事务id"
          },
          "priority": {
            "type": "string",
            "description": "事务优先级"
          },
          "originalEstimateMinutes": {
            "type": "number",
            "description": "原始预估时间"
          },
          "timeSpentMinutes": {
            "type": "number",
            "description": "解决事务所花费时间"
          },
          "timeRemainingMinutes": {
            "type": "number",
            "description": "解决此事务还需要的时间"
          },
          "creatorId": {
            "type": "string",
            "description": "事务创建者id"
          },
          "creatorName": {
            "type": "string",
            "description": "事务创建者名字"
          },
          "assigneeId": {
            "type": "string",
            "description": "事务指派人id"
          },
          "assigneeName": {
            "type": "string",
            "description": "事务指派人名字"
          },
          "severity": {
            "type": "string",
            "description": "严重程度"
          },
          "component": {
            "type": "string",
            "description": "组件"
          },
          "leadTimeMinutes": {
            "type": "number",
            "description": "从事务创建到解决的时间"
          },
          "originalProject": {
            "type": "string",
            "description": "原始项目"
          },
          "originalType": {
            "type": "string",
            "description": "原始事务类型"
          },
          "statusCategory": {
            "type": "string",
            "description": "事务状态类别"
          },
          "typeCategory": {
            "type": "string",
            "description": "事务类型类别"
          },
          "devEquivalent": {
            "type": "number",
            "description": "事务关联的代码当量"
          }
        },
        "type": "object",
        "required": [
          "id",
          "url",
          "issueKey",
          "title",
          "description",
          "epicKey",
          "type",
          "status",
          "originalStatus",
          "storyPoint",
          "createdDate",
          "updatedDate",
          "parentIssueId",
          "priority",
          "originalEstimateMinutes",
          "timeSpentMinutes",
          "timeRemainingMinutes",
          "creatorId",
          "creatorName",
          "assigneeId",
          "assigneeName",
          "severity",
          "component",
          "leadTimeMinutes",
          "originalProject",
          "originalType",
          "statusCategory",
          "typeCategory",
          "devEquivalent"
        ]
      },
      "ListPeriodIssueResponse": {
        "properties": {
          "total": {
            "type": "number",
            "description": "事务总数"
          },
          "offset": {
            "type": "number",
            "description": "事务偏移量"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/PeriodIssueItem"
            },
            "type": "array",
            "description": "事务列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset",
          "data"
        ]
      },
      "GetPeriodIssueStatQuery": {
        "properties": {
          "projectId": {
            "type": "string",
            "description": "项目id"
          },
          "groupBy": {
            "enum": [
              "status",
              "status_category",
              "type",
              "type_category"
            ],
            "type": "string",
            "description": "统计维度，支持按事务状态或类型统计"
          },
          "timeRangeType": {
            "enum": [
              "created_date",
              "updated_date"
            ],
            "type": "string",
            "description": "时间范围类型，支持createdDate和updatedDate"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "时间范围，起始时间"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "时间范围，结束时间"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "groupBy"
        ]
      },
      "GetPeriodIssueStatItem": {
        "properties": {
          "name": {
            "type": "string",
            "description": "统计维度的名称"
          },
          "count": {
            "type": "object",
            "description": "统计数量"
          }
        },
        "type": "object",
        "required": [
          "name",
          "count"
        ]
      },
      "BindProjectBoardRequest": {
        "properties": {
          "boardSourceType": {
            "enum": [
              "jira",
              "csv",
              "tapd",
              "zentao"
            ],
            "type": "string",
            "description": "看板来源类型, 如果是tapd, 绑定后需要手动触发元数据同步任务"
          },
          "sourceId": {
            "format": "uuid",
            "type": "string",
            "description": "数据源id"
          },
          "projectId": {
            "type": "string",
            "description": "项目id"
          },
          "boardId": {
            "type": "string",
            "description": "看板id"
          },
          "boardName": {
            "type": "string",
            "description": "看板名称, boardSourceType为csv时无效"
          }
        },
        "type": "object",
        "required": [
          "boardSourceType",
          "sourceId",
          "projectId",
          "boardId"
        ]
      },
      "BindProjectBoardResponse": {
        "properties": {
          "orgId": {
            "format": "uuid",
            "type": "string",
            "description": "组织id"
          },
          "id": {
            "type": "string",
            "description": "看板与项目关联的id"
          },
          "projectId": {
            "type": "string",
            "description": "项目id"
          },
          "boardId": {
            "type": "string",
            "description": "看板id"
          },
          "boardName": {
            "type": "string",
            "description": "看板名称"
          },
          "boardType": {
            "enum": [
              "jira",
              "csv",
              "tapd",
              "zentao"
            ],
            "type": "string",
            "description": "看板来源类型"
          },
          "boardCategory": {
            "enum": [
              "scrum",
              "kanban"
            ],
            "type": "string",
            "description": "看板类型"
          },
          "companyId": {
            "type": "string",
            "description": "tapd公司id, 仅在source_type为tapd时有效"
          },
          "errorMessage": {
            "type": "string",
            "description": "错误信息，仅csv时有效。在上传csv文件时出现的错误"
          },
          "platformId": {
            "type": "string",
            "description": "lake data source id"
          },
          "blueprintsId": {
            "type": "string",
            "description": "devlake bp id"
          },
          "lakeBoardId": {
            "type": "string",
            "description": "devlake中的看板唯一id",
            "example": "jira:JiraBoard:1:68"
          },
          "syncStatus": {
            "enum": [
              "TASK_CREATED",
              "TASK_RUNNING",
              "TASK_COMPLETED",
              "TASK_FAILED",
              "TASK_CANCELLED",
              "NO_BP",
              "NO_SYNC"
            ],
            "type": "string",
            "description": "同步状态"
          },
          "lastSyncTime": {
            "format": "date-time",
            "type": "string",
            "description": "上一次同步的时间"
          },
          "lastSuccessTime": {
            "format": "date-time",
            "type": "string",
            "description": "上一次同步成功的时间"
          }
        },
        "type": "object",
        "required": [
          "orgId",
          "id",
          "projectId",
          "boardId",
          "boardName",
          "boardType",
          "boardCategory",
          "platformId",
          "lakeBoardId"
        ]
      },
      "BugPerKDevEqRequest": {
        "properties": {
          "projectIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "项目筛选，不传则返回当前用户有权限的所有项目"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery",
            "description": "时间筛选, 时间范围最多不能超过1年"
          },
          "groupDimension": {
            "type": "string",
            "enum": [
              "sprint",
              "week",
              "month"
            ],
            "description": "分组维度"
          }
        },
        "type": "object",
        "required": [
          "dateQuery",
          "groupDimension"
        ]
      },
      "BugPerKDevEqTrendingSeries": {
        "properties": {
          "stepKey": {
            "type": "string",
            "description": "趋势点键名"
          },
          "stepName": {
            "type": "string",
            "description": "趋势点名称"
          },
          "startDate": {
            "type": "string",
            "description": "开始时间"
          },
          "endDate": {
            "type": "string",
            "description": "结束时间"
          },
          "devEq": {
            "type": "number",
            "description": "代码当量"
          },
          "bugCount": {
            "type": "number",
            "description": "缺陷数"
          },
          "bugPerKDevEq": {
            "type": "number",
            "description": "千当量缺陷率"
          }
        },
        "type": "object",
        "required": [
          "stepKey",
          "stepName",
          "startDate",
          "endDate",
          "devEq",
          "bugCount",
          "bugPerKDevEq"
        ]
      },
      "BugPerKDevEqTrendingResponse": {
        "properties": {
          "projectId": {
            "type": "string",
            "description": "项目ID"
          },
          "series": {
            "items": {
              "$ref": "#/components/schemas/BugPerKDevEqTrendingSeries"
            },
            "type": "array",
            "description": "趋势指标"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "series"
        ]
      },
      "AspectMetricQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "developers": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "开发者邮箱列表"
          },
          "snapshotTime": {
            "format": "date-time",
            "type": "string",
            "description": "历史数据切面时间（返回的结果是这个时间点之前的最后一次分析的数据，默认为当前时间）"
          },
          "pageSize": {
            "maximum": 10000,
            "type": "integer",
            "minimum": 1,
            "description": "分页大小"
          },
          "page": {
            "minimum": 1,
            "type": "integer",
            "description": "页码"
          }
        },
        "type": "object",
        "required": [
          "pageSize",
          "page"
        ]
      },
      "AspectMetricResultItem": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "email": {
            "type": "string",
            "description": "开发者邮箱"
          },
          "analysisTime": {
            "format": "date-time",
            "type": "string",
            "description": "数据切面时间"
          },
          "issueBlockerNumber": {
            "type": "integer",
            "description": "阻塞问题数"
          },
          "issueCriticalNumber": {
            "type": "integer",
            "description": "严重问题数"
          },
          "issueMajorNumber": {
            "type": "integer",
            "description": "主要问题数"
          },
          "issueMinorNumber": {
            "type": "integer",
            "description": "次要问题数"
          },
          "issueInfoNumber": {
            "type": "integer",
            "description": "提示问题数"
          },
          "functions": {
            "type": "integer",
            "description": "函数总数"
          },
          "namedFunctions": {
            "type": "integer",
            "description": "非匿名非测试函数个数（因为匿名函数和测试函数可能有重叠，所以单独计算了这个字段，数值并不等于：函数总数 - 匿名函数 - 测试函数）"
          },
          "anonymousFunctions": {
            "type": "integer",
            "description": "匿名函数个数"
          },
          "testFunctions": {
            "type": "integer",
            "description": "测试函数个数"
          },
          "testedFunctions": {
            "type": "integer",
            "description": "测试覆盖的函数个数"
          },
          "commentedFunctions": {
            "type": "integer",
            "description": "注释覆盖的函数个数"
          },
          "duplicateFunctions": {
            "type": "integer",
            "description": "重复函数个数"
          },
          "cyclomaticTotal": {
            "type": "integer",
            "description": "圈复杂度"
          },
          "devEquivalent": {
            "type": "integer",
            "description": "开发当量"
          },
          "absDevValue": {
            "type": "integer",
            "description": "绝对开发价值"
          },
          "commits": {
            "type": "integer",
            "description": "提交次数"
          },
          "addLines": {
            "type": "integer",
            "description": "新增代码行数"
          },
          "deleteLines": {
            "type": "integer",
            "description": "删除代码行数"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "email",
          "analysisTime",
          "issueBlockerNumber",
          "issueCriticalNumber",
          "issueMajorNumber",
          "issueMinorNumber",
          "issueInfoNumber",
          "functions",
          "namedFunctions",
          "anonymousFunctions",
          "testFunctions",
          "testedFunctions",
          "commentedFunctions",
          "duplicateFunctions",
          "cyclomaticTotal",
          "devEquivalent",
          "absDevValue",
          "commits",
          "addLines",
          "deleteLines"
        ]
      },
      "AspectMetricResult": {
        "properties": {
          "total": {
            "type": "integer",
            "description": "总数"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/AspectMetricResultItem"
            },
            "type": "array",
            "description": "数据列表"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "DeveloperAspectDevValueRankingQuery": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID（和代码库ID不能同时为空）"
          },
          "repoIds": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表（和项目ID不能同时为空。在项目ID不为空时，repoIds只能选择项目范围内的代码库，项目之外的代码库会被忽略）"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "切面日期"
          }
        },
        "type": "object",
        "required": [
          "date"
        ]
      },
      "DeveloperAspectDevValueRankingResponse": {
        "properties": {
          "email": {
            "type": "string",
            "description": "开发者邮箱"
          },
          "v": {
            "type": "number",
            "description": "Ranking值"
          },
          "username": {
            "type": "string",
            "description": "用户名"
          },
          "title": {
            "type": "string",
            "description": "用户title"
          }
        },
        "type": "object",
        "required": [
          "email",
          "v",
          "username",
          "title"
        ]
      },
      "FunctionMetricQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "对象ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ],
            "description": "对象类型。项目或者代码库"
          },
          "contributors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "贡献者"
          },
          "filter": {
            "$ref": "#/components/schemas/FunctionFiltler",
            "description": "滤波器"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type"
        ]
      },
      "FunctionMetricDetailByLanguageResponse": {
        "properties": {
          "language": {
            "type": "string",
            "description": "语言"
          },
          "functions": {
            "type": "number",
            "description": "函数总数"
          },
          "named_functions": {
            "type": "number",
            "description": "非匿名的非测试函数个数"
          },
          "test_functions": {
            "type": "number",
            "description": "测试函数个数"
          },
          "anonymous_functions": {
            "type": "number",
            "description": "匿名函数个数"
          },
          "tested_functions": {
            "type": "number",
            "description": "测试覆盖的函数个数"
          },
          "commented_functions": {
            "type": "number",
            "description": "注释覆盖的函数个数"
          },
          "commented_functions_named": {
            "type": "number",
            "description": "注释覆盖的函数个数（不包含匿名函数）"
          },
          "duplicate_functions": {
            "type": "number",
            "description": "存在重复的函数个数"
          },
          "cyclomatic_total": {
            "type": "number",
            "description": "圈复杂度"
          }
        },
        "type": "object",
        "required": [
          "language",
          "functions",
          "named_functions",
          "test_functions",
          "anonymous_functions",
          "tested_functions",
          "commented_functions",
          "commented_functions_named",
          "duplicate_functions",
          "cyclomatic_total"
        ]
      },
      "TimeQuery": {
        "properties": {
          "startDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "起始日期（格式为2022-02-14）"
          },
          "endDate": {
            "pattern": "\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d.\\d+Z?",
            "type": "string",
            "description": "结束日期（格式为2022-02-14）"
          },
          "unitOfTime": {
            "enum": [
              "day",
              "week",
              "month",
              "quarter",
              "year"
            ],
            "type": "string",
            "description": "时间量词"
          },
          "unitNumber": {
            "type": "integer",
            "description": "时间量值"
          }
        },
        "type": "object",
        "required": [
          "startDate",
          "endDate",
          "unitOfTime",
          "unitNumber"
        ]
      },
      "QualityTimeSeriesQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string",
            "description": "对象ID"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ],
            "description": "对象类型，项目或者代码库"
          },
          "time_query": {
            "$ref": "#/components/schemas/TimeQuery",
            "description": "时间范围"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "time_query"
        ]
      },
      "DeveloperQualityTimeSeriesQuery": {
        "properties": {
          "primaryEmailStrs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "description": "邮箱集合"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID列表"
          },
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "项目ID列表"
          },
          "time_query": {
            "$ref": "#/components/schemas/TimeQuery",
            "description": "时间范围（不能超过365天）"
          }
        },
        "type": "object",
        "required": [
          "primaryEmailStrs",
          "time_query"
        ]
      },
      "ListCodeIssueQuery": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string",
            "description": "项目ID（和repoIds不能都为空）"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array",
            "description": "代码库ID（和projectId不能都为空）"
          },
          "startDate": {
            "format": "date-time",
            "type": "string",
            "description": "起始时间"
          },
          "endDate": {
            "format": "date-time",
            "type": "string",
            "description": "结束时间"
          },
          "authors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "提交者Email"
          },
          "rules": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "description": "规则key"
          },
          "type": {
            "items": {
              "enum": [
                "PERFORMANCE",
                "VULNERABILITY",
                "SECURITY_HOTSPOT",
                "PORTABILITY",
                "BUG",
                "CODE_SMELL"
              ],
              "type": "string"
            },
            "type": "array",
            "description": "问题类型"
          },
          "severity": {
            "items": {
              "enum": [
                "BLOCKER",
                "MINOR",
                "CRITICAL",
                "MAJOR",
                "INFO"
              ],
              "type": "string"
            },
            "type": "array",
            "description": "严重程度"
          },
          "filename": {
            "type": "string",
            "description": "文件名（正则表达式匹配）"
          },
          "page": {
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "page",
          "pageSize"
        ]
      },
      "CodeIssueListItem": {
        "properties": {
          "id": {
            "type": "string"
          },
          "rule_key": {
            "type": "string",
            "description": "检查规则Key"
          },
          "filename": {
            "type": "string",
            "description": "文件名"
          },
          "severity": {
            "enum": [
              "BLOCKER",
              "MINOR",
              "CRITICAL",
              "MAJOR",
              "INFO"
            ],
            "type": "string",
            "description": "问题严重级别"
          },
          "type": {
            "enum": [
              "PERFORMANCE",
              "VULNERABILITY",
              "SECURITY_HOTSPOT",
              "PORTABILITY",
              "BUG",
              "CODE_SMELL"
            ],
            "type": "string",
            "description": "问题类型"
          },
          "name": {
            "type": "string",
            "description": "标题"
          },
          "name_cn": {
            "type": "string",
            "description": "标题（中文）"
          },
          "project_id": {
            "format": "uuid",
            "type": "string",
            "description": "代码库ID"
          },
          "project_name": {
            "type": "string",
            "description": "代码库名称"
          },
          "author_email": {
            "type": "string",
            "description": "问题归属人email（在Sonarqube未开启代码库集成可能为空）"
          },
          "author_name": {
            "type": "string",
            "description": "问题归属人email（在Sonarqube未开启代码库集成可能为空）"
          },
          "author_time": {
            "format": "date-time",
            "type": "string",
            "description": "问题出现时间（在Sonarqube代码库集成启用时为代码行最后修改时间，未启用SCM集成时为Sonar分析时间）"
          }
        },
        "type": "object",
        "required": [
          "id",
          "rule_key",
          "filename",
          "severity",
          "type",
          "name",
          "name_cn",
          "project_id",
          "project_name",
          "author_email",
          "author_name",
          "author_time"
        ]
      },
      "ListCodeIssueResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "data": {
            "$ref": "#/components/schemas/CodeIssueListItem"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "CreateAnalysisProfReq": {
        "properties": {
          "repoCount": {
            "type": "number",
            "description": "代码库数量"
          },
          "forceRestart": {
            "type": "boolean",
            "description": "是否强制重新分析，默认为 false"
          },
          "skipLock": {
            "type": "boolean",
            "description": "跳过Lock，默认为 false"
          }
        },
        "type": "object",
        "required": [
          "repoCount"
        ]
      },
      "CreateAnalysisProfRes": {
        "properties": {
          "timeCost": {
            "type": "number",
            "description": "耗时, 毫秒"
          },
          "repoCount": {
            "type": "number",
            "description": "代码库数量，与入参相等"
          },
          "actualRepoCount": {
            "type": "number",
            "description": "代码库数量，实际"
          }
        },
        "type": "object",
        "required": [
          "timeCost",
          "repoCount",
          "actualRepoCount"
        ]
      },
      "CreateAnalysisProfMultiRes": {
        "properties": {
          "batchSuccCount": {
            "type": "number",
            "description": "同时发起10个批量分析，成功的次数, (应该只有1次）"
          },
          "timeCost": {
            "type": "number",
            "description": "耗时, 毫秒"
          },
          "repoCount": {
            "type": "number",
            "description": "代码库数量，与入参相等"
          },
          "actualRepoCount": {
            "type": "number",
            "description": "代码库数量，实际"
          }
        },
        "type": "object",
        "required": [
          "batchSuccCount",
          "timeCost",
          "repoCount",
          "actualRepoCount"
        ]
      },
      "ChangedFunctionQueryFilter": {
        "properties": {
          "pageSize": {
            "type": "integer"
          },
          "current": {
            "type": "integer"
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "asc",
              "desc",
              "descend",
              "ascend"
            ]
          }
        },
        "type": "object",
        "required": [
          "pageSize",
          "current",
          "sortField",
          "sortOrder"
        ]
      },
      "RepoCommitFilter": {
        "properties": {
          "title": {
            "type": "string"
          },
          "contributor": {},
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "pageSize": {
            "type": "integer"
          },
          "current": {
            "type": "integer"
          },
          "sortField": {
            "type": "string",
            "enum": [
              "dev_value",
              "author_timestamp",
              "dev_equivalent",
              "ratio_value_loc",
              "num_functions",
              "nbnc_line"
            ]
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "asc",
              "desc",
              "descend",
              "ascend"
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "pageSize",
          "current",
          "sortField",
          "sortOrder"
        ]
      },
      "CommitsQueryFilter": {
        "properties": {
          "title": {
            "type": "string"
          },
          "contributor": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "projectId": {
            "format": "uuid",
            "type": "string"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "pageSize": {
            "type": "integer"
          },
          "custom_property_options": {},
          "current": {
            "minimum": 1,
            "type": "integer"
          },
          "sortField": {
            "type": "string"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "asc",
              "desc",
              "descend",
              "ascend"
            ]
          }
        },
        "type": "object",
        "required": [
          "contributor",
          "dateQuery",
          "pageSize",
          "current",
          "sortField",
          "sortOrder"
        ]
      },
      "RankingQuery": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "contributors": {}
        },
        "type": "object"
      },
      "ProjectGroupTimeQuery": {
        "properties": {
          "projectGroupId": {
            "format": "uuid",
            "type": "string"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "projectGroupId"
        ]
      },
      "ProjectsTimeQuery": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "projectIds"
        ]
      },
      "WatchProjectRequest": {
        "properties": {
          "projectIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "projectGroupIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "projectIds",
          "projectGroupIds"
        ]
      },
      "TagListQueryFilter": {
        "properties": {
          "lang": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          },
          "tagsMode": {},
          "tags": {},
          "page": {
            "type": "number"
          },
          "pageSize": {
            "type": "number"
          },
          "sortOrder": {
            "type": "string",
            "enum": [
              "descend",
              "ascend"
            ]
          },
          "sortField": {
            "type": "string",
            "enum": [
              "lang",
              "tags"
            ]
          }
        },
        "type": "object",
        "required": [
          "name",
          "page",
          "pageSize",
          "sortOrder",
          "sortField"
        ]
      },
      "TagListQuery": {
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/TagListQueryFilter"
          },
          "locale": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "filter",
          "locale"
        ]
      },
      "TagValue": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name"
        ]
      },
      "TagListItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "lang": {
            "type": "string"
          },
          "info": {
            "type": "string"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/TagValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "lang",
          "info",
          "tags"
        ]
      },
      "TagListResult": {
        "properties": {
          "total": {
            "type": "number"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/TagListItem"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "total",
          "data"
        ]
      },
      "CheckResult": {
        "properties": {
          "checkId": {
            "format": "uuid",
            "type": "string"
          },
          "handle": {
            "type": "number"
          },
          "total": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "checkId",
          "handle",
          "total"
        ]
      },
      "RepoStatusPushInfoReq": {
        "properties": {
          "info": {
            "$ref": "#/components/schemas/RepoStatusPushInfo"
          }
        },
        "type": "object",
        "required": [
          "info"
        ]
      },
      "IssueQuery": {
        "properties": {
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "subtractReportId": {
            "format": "uuid",
            "type": "string"
          },
          "filter": {
            "$ref": "#/components/schemas/IssueQueryFilter"
          }
        },
        "type": "object",
        "required": [
          "repoIds",
          "filter"
        ]
      },
      "ListIssuesQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "project",
              "repository"
            ]
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          },
          "repoIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "filter": {
            "$ref": "#/components/schemas/IssueQueryFilter"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "filter"
        ]
      },
      "FunctionsQuery": {
        "properties": {
          "repoId": {
            "format": "uuid",
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/FunctionsQueryQuery"
          }
        },
        "type": "object",
        "required": [
          "repoId",
          "query"
        ]
      },
      "DuplicQuery": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "repository",
              "project"
            ]
          },
          "filter": {
            "$ref": "#/components/schemas/DuplicQueryFilter"
          }
        },
        "type": "object",
        "required": [
          "id",
          "type",
          "filter"
        ]
      },
      "AuthorInfo": {
        "properties": {
          "author_email": {
            "type": "string"
          },
          "author_name": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "author_email",
          "author_name"
        ]
      },
      "CoverageFileDetail": {
        "properties": {
          "source_file": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "project_name": {
            "type": "string"
          },
          "git_url": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "num_covered_fns": {
            "type": "number"
          },
          "num_fns": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "source_file",
          "language",
          "project_name",
          "git_url",
          "hash",
          "num_covered_fns",
          "num_fns"
        ]
      },
      "CoverageDetail": {
        "properties": {
          "num_fns": {
            "type": "number"
          },
          "num_covered_fns": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "num_fns",
          "num_covered_fns"
        ]
      },
      "CodeCheckRuleResult": {
        "properties": {
          "name": {
            "type": "string"
          },
          "name_cn": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "repo": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "name_cn",
          "key",
          "repo"
        ]
      },
      "LargeScreenInfoResponse": {
        "properties": {
          "name": {
            "type": "string"
          },
          "pageCount": {
            "type": "integer"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "playInterval": {
            "type": "number"
          },
          "isPublic": {
            "type": "boolean"
          },
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "teamUserName": {
            "type": "string"
          },
          "pages": {
            "items": {
              "$ref": "#/components/schemas/LargeScreenPageResponse"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "pageCount",
          "updateTime",
          "createTime",
          "id",
          "playInterval",
          "isPublic",
          "teamUserId",
          "teamUserName",
          "pages"
        ]
      },
      "LargeScreenPageResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "sort": {
            "type": "integer"
          },
          "layout": {
            "enum": [
              "Column1",
              "Column2",
              "Column3",
              "Grid2x2"
            ],
            "type": "string"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/LargeScreenPageChartResponse"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "sort",
          "layout",
          "charts"
        ]
      },
      "LargeScreenResponse": {
        "properties": {
          "name": {
            "type": "string"
          },
          "pageCount": {
            "type": "integer"
          },
          "updateTime": {
            "format": "date-time",
            "type": "string"
          },
          "createTime": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "firstPage": {
            "$ref": "#/components/schemas/LargeScreenPageResponse"
          },
          "permission": {
            "type": "object"
          },
          "isPublic": {
            "type": "boolean"
          },
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "teamUserName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "pageCount",
          "updateTime",
          "createTime",
          "id",
          "firstPage",
          "permission",
          "isPublic",
          "teamUserId",
          "teamUserName"
        ]
      },
      "LargeScreenPageChartResponse": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "sort": {
            "type": "integer"
          },
          "ext": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "chartKey": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "sort",
          "ext",
          "chartKey"
        ]
      },
      "CreateLargeScreenRequest": {
        "properties": {
          "name": {
            "type": "string"
          },
          "playInterval": {
            "type": "integer"
          },
          "isPublic": {
            "type": "boolean"
          },
          "pages": {
            "items": {
              "$ref": "#/components/schemas/CreateLargeScreenPageRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "name",
          "playInterval",
          "isPublic",
          "pages"
        ]
      },
      "CreateLargeScreenPageRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "layout": {
            "enum": [
              "Column1",
              "Column2",
              "Column3",
              "Grid2x2"
            ],
            "type": "string"
          },
          "charts": {
            "items": {
              "$ref": "#/components/schemas/CreateLargeScreenPageChart"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "layout",
          "charts"
        ]
      },
      "CreateLargeScreenPageChart": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "chartKey": {
            "type": "string"
          },
          "ext": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "type": "object",
        "required": [
          "name",
          "chartKey",
          "ext"
        ]
      },
      "PagedResponse": {
        "properties": {
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "total",
          "offset"
        ]
      },
      "RoleItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "workspace": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "is_default": {
            "type": "boolean"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "update_time": {
            "format": "date-time",
            "type": "string"
          },
          "accounts": {}
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "workspace",
          "is_default",
          "create_time",
          "update_time"
        ]
      },
      "UpdateRoleData": {
        "properties": {
          "name": {
            "type": "string"
          },
          "workspace": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "has_manager_report": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "CreateRoleRequest": {
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "workspace": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "description": {
            "type": "string"
          },
          "has_manager_report": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "name",
          "workspace"
        ]
      },
      "RoleAccountItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "primary_email": {
            "format": "email",
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "primary_email",
          "is_enabled"
        ]
      },
      "RoleAccountPage": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RoleAccountItem"
            },
            "type": "array"
          },
          "total": {
            "type": "number"
          },
          "offset": {
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "data",
          "total",
          "offset"
        ]
      },
      "AccountQuery": {
        "properties": {
          "roleId": {
            "format": "uuid",
            "type": "string"
          },
          "page": {
            "minimum": 1,
            "type": "number"
          },
          "pageSize": {
            "maximum": 1000,
            "type": "number"
          }
        },
        "type": "object",
        "required": [
          "roleId",
          "page",
          "pageSize"
        ]
      },
      "RoleQueryFilter": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "RoleQuery": {
        "properties": {
          "filter": {
            "$ref": "#/components/schemas/RoleQueryFilter"
          },
          "orderBy": {
            "items": {},
            "minItems": 2,
            "type": "array",
            "maxItems": 2
          },
          "getAccounts": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "UpdateFilterUpdate": {
        "properties": {
          "value": {},
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateFilterRequest": {
        "properties": {
          "filterId": {
            "format": "uuid",
            "type": "string"
          },
          "update": {
            "$ref": "#/components/schemas/UpdateFilterUpdate"
          }
        },
        "type": "object",
        "required": [
          "filterId",
          "update"
        ]
      },
      "FilterConditionRequest": {
        "properties": {
          "type": {
            "enum": [
              "team",
              "contributor",
              "repository",
              "project"
            ],
            "type": "string",
            "description": "Filter Type"
          },
          "scope": {
            "enum": [
              "project",
              "repository",
              "team"
            ],
            "type": "string",
            "description": "Filter Belongs To Target Type"
          },
          "scopeId": {
            "format": "uuid",
            "type": "string",
            "description": "Filter Belongs To Target UUID"
          },
          "name": {
            "type": "string"
          },
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "type",
          "scope",
          "scopeId",
          "name",
          "values"
        ]
      },
      "FilterCondition": {
        "properties": {
          "type": {
            "enum": [
              "team",
              "contributor",
              "repository",
              "project"
            ],
            "type": "string",
            "description": "Filter Type"
          },
          "scope": {
            "enum": [
              "project",
              "repository",
              "team"
            ],
            "type": "string",
            "description": "Filter Belongs To Target Type"
          },
          "scopeId": {
            "format": "uuid",
            "type": "string",
            "description": "Filter Belongs To Target UUID"
          }
        },
        "type": "object",
        "required": [
          "type",
          "scope",
          "scopeId"
        ]
      },
      "EfficiencyQueryWithTimeStep": {
        "properties": {
          "query": {
            "$ref": "#/components/schemas/QueryWithTimeStep"
          }
        },
        "type": "object",
        "required": [
          "query"
        ]
      },
      "OAuthResult": {
        "properties": {
          "code": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "platformId": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "code",
          "state",
          "platformId"
        ]
      },
      "ReportUrlInfo": {
        "properties": {
          "protocol": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "searchState": {}
        },
        "type": "object",
        "required": [
          "protocol",
          "host",
          "path",
          "searchState"
        ]
      },
      "ReportDownloadRequest": {
        "properties": {
          "filename": {
            "type": "string"
          },
          "query": {
            "$ref": "#/components/schemas/FiltersValue"
          },
          "queryDependency": {
            "type": "string"
          },
          "type": {
            "enum": [
              "efficient",
              "quality"
            ],
            "type": "string"
          },
          "reportUrlInfo": {
            "$ref": "#/components/schemas/ReportUrlInfo"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "query",
          "queryDependency",
          "type"
        ]
      },
      "UpdateGrantUserItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "ListSquadRequest": {
        "properties": {
          "showAll": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "showAll"
        ]
      },
      "GetSquadWithDescentsRequest": {
        "properties": {
          "squadId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "squadId"
        ]
      },
      "AddSquadRequest": {
        "properties": {
          "name": {
            "type": "string"
          },
          "parentSquadId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "name",
          "parentSquadId"
        ]
      },
      "RenameSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "newName": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "newName"
        ]
      },
      "UpdateSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "newName": {
            "type": "string"
          },
          "newParent": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "newName"
        ]
      },
      "DeleteSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "WatchSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "watch": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id",
          "watch"
        ]
      },
      "GetGrantedUsersForSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "withInherited": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "id"
        ]
      },
      "BatchUpdateGrantedUsersForSquadRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "users": {
            "items": {
              "$ref": "#/components/schemas/UpdateGrantUserItem"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "users"
        ]
      },
      "AddUserToSquadRequest": {
        "properties": {
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "squadId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "teamUserId",
          "squadId"
        ]
      },
      "BatchAddUserToSquadRequest": {
        "properties": {
          "addUserToSquadRequests": {
            "items": {
              "$ref": "#/components/schemas/AddUserToSquadRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "addUserToSquadRequests"
        ]
      },
      "RemoveUserFromSquadRequest": {
        "properties": {
          "teamUserId": {
            "format": "uuid",
            "type": "string"
          },
          "squadId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "teamUserId",
          "squadId"
        ]
      },
      "GetUsersForSquadRequest": {
        "properties": {
          "squadId": {
            "format": "uuid",
            "type": "string"
          },
          "tags": {},
          "includeChildren": {}
        },
        "type": "object",
        "required": [
          "squadId"
        ]
      },
      "GetContributorsForSquadRequest": {
        "properties": {
          "squadIds": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "dateQuery": {
            "$ref": "#/components/schemas/DateQuery"
          }
        },
        "type": "object",
        "required": [
          "squadIds"
        ]
      },
      "GetSquadMemberTagsRequest": {
        "properties": {
          "includeDisabled": {
            "type": "boolean"
          },
          "includeDisabledOptions": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "includeDisabled",
          "includeDisabledOptions"
        ]
      },
      "MoveSquadsRequest": {
        "properties": {
          "ids": {
            "items": {
              "format": "uuid",
              "type": "string"
            },
            "type": "array"
          },
          "targetId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "ids",
          "targetId"
        ]
      },
      "UpdateSquadMemberTagValue": {
        "properties": {
          "tagValue": {
            "format": "uuid",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          }
        },
        "type": "object",
        "required": [
          "description",
          "disabled"
        ]
      },
      "UpdateSquadMemberTagRequest": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          },
          "tagOptions": {
            "items": {
              "$ref": "#/components/schemas/UpdateSquadMemberTagValue"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "disabled",
          "tagOptions"
        ]
      },
      "BatchUpdateSquadMemberTagRequest": {
        "properties": {
          "updated_tags": {
            "items": {
              "$ref": "#/components/schemas/UpdateSquadMemberTagRequest"
            },
            "type": "array"
          }
        },
        "type": "object",
        "required": [
          "updated_tags"
        ]
      },
      "GetSumDevEqRequest": {
        "properties": {
          "recentPeriod": {
            "$ref": "#/components/schemas/TimePeriodValue"
          },
          "timeRange": {
            "items": {
              "format": "date-time",
              "type": "string"
            },
            "type": "array"
          },
          "ignoreIncompleteSteps": {
            "type": "boolean"
          },
          "skipOutlier": {
            "type": "boolean"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "$ref": "#/components/schemas/RecordFilterValue"
              }
            }
          }
        },
        "type": "object",
        "required": [
          "records"
        ]
      },
      "TeamListItem": {
        "properties": {
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "parent_id": {
            "format": "uuid",
            "type": "string"
          },
          "sort": {
            "type": "integer"
          },
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "num_members": {
            "type": "integer"
          },
          "num_all_members": {
            "type": "integer"
          }
        },
        "type": "object",
        "required": [
          "id",
          "name",
          "sort",
          "create_time",
          "num_members",
          "num_all_members"
        ]
      },
      "SquadCommitInfo": {
        "properties": {
          "repo_id": {
            "format": "uuid",
            "type": "string"
          },
          "repo_name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "contributor_email": {
            "type": "string"
          },
          "author_timestamp": {
            "type": "number"
          },
          "commit_timestamp": {
            "type": "number"
          },
          "share_loc": {
            "type": "integer"
          },
          "ratio_value_loc": {
            "type": "integer"
          },
          "num_functions": {
            "type": "integer"
          },
          "remark": {
            "type": "string"
          },
          "is_excluded": {
            "type": "boolean"
          },
          "dev_value": {
            "type": "number"
          },
          "dev_equivalent": {
            "type": "number"
          },
          "blank_line": {
            "type": "integer"
          },
          "comment_line": {
            "type": "integer"
          },
          "nbnc_line": {
            "type": "integer"
          },
          "deletions_nbnc_line": {
            "type": "integer"
          },
          "insertions_nbnc_line": {
            "type": "integer"
          },
          "original_add_line": {
            "type": "integer"
          },
          "original_delete_line": {
            "type": "integer"
          },
          "effective_add_line": {
            "type": "integer"
          },
          "effective_delete_line": {
            "type": "integer"
          },
          "punish_info": {
            "type": "object"
          }
        },
        "type": "object",
        "required": [
          "repo_id",
          "repo_name",
          "title",
          "hash",
          "contributor_email",
          "author_timestamp",
          "commit_timestamp",
          "share_loc",
          "ratio_value_loc",
          "num_functions",
          "remark",
          "is_excluded",
          "blank_line",
          "comment_line",
          "nbnc_line",
          "deletions_nbnc_line",
          "insertions_nbnc_line",
          "original_add_line",
          "original_delete_line",
          "effective_add_line",
          "effective_delete_line",
          "punish_info"
        ]
      },
      "ReqUserSummary": {
        "properties": {
          "projectId": {
            "format": "uuid",
            "type": "string"
          },
          "sprintId": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "$ref": "#/components/schemas/UserSummaryFilter"
          }
        },
        "type": "object",
        "required": [
          "projectId",
          "sprintId",
          "filter"
        ]
      },
      "UpdateRegexRequest": {
        "properties": {
          "id": {
            "type": "integer"
          },
          "regex": {
            "type": "string"
          }
        },
        "type": "object",
        "required": [
          "id",
          "regex"
        ]
      },
      "GroupFilter": {
        "properties": {
          "search": {
            "description": "搜索关键词"
          },
          "groupId": {
            "type": "number",
            "description": "父group id"
          },
          "onlyRoot": {
            "description": "仅返回顶层数据(这个参数与groupId参数互斥)"
          }
        },
        "type": "object",
        "description": "\n  按目前的应用场景, filter里的参数是互斥的\n  获取顶级group: 只传onlyRoot = true\n  获取下一级group: 只传parentId\n  搜索group: 只传search\n"
      },
      "ProjectFilter": {
        "properties": {
          "search": {
            "description": "搜索关键词"
          },
          "personal": {
            "description": "是否是私人项目, 如果为true, 则返回当前授权用户的私人project列表"
          },
          "groupId": {
            "type": "number",
            "description": "分组id (该参数与personal互斥)"
          }
        },
        "type": "object",
        "description": "\n  获取某个group下的projects: 只传groupId\n  获取当前用户的私人projects: personal为true\n  搜索project: 只传search\n"
      },
      "AuthSignature": {
        "type": "object",
        "properties": {
          "appid": {
            "type": "string",
            "description": "appid"
          },
          "nonce_str": {
            "type": "string",
            "description": "随机符，防止请求签名重用"
          },
          "sign": {
            "type": "string",
            "description": "签名值"
          }
        },
        "required": [
          "appid",
          "nonce_str",
          "sign"
        ]
      },
      "ReportEfficiencyMetricType": {
        "type": "string",
        "description": "\n    ### 效率类\n    * commit_num        提交数\n    * function_num      函数个数\n    * loc               代码行数\n    * loc_add_line      新增代码行数\n    * loc_delete_line   删除代码行数\n    * share_loc         代码行数占比\n    * developer_num     开发者人数\n    * dev_equivalent    开发当量\n    * dev_value         开发价值\n    * dev_value_robustness            开发价值鲁棒性, 开发者开发价值贡献是否均衡（只在代码库和项目维度可查询，并且不支持传unitOfTime按时间聚合）\n    * dev_equivalent_every_developer  开发者平均开发当量\n\n    代码行数在查询测试/非测试代码（包含testCode参数），或过滤文件路径（包含projectFolderFilter参数）时，\n    行数计算是基于函数修改前后文本的对比，不是直接从git commit diff获取的原始增删行数，与commit粒度的查询结果会存在差异。\n    ",
        "enum": [
          "commit_num",
          "function_num",
          "loc",
          "loc_add_line",
          "loc_delete_line",
          "share_loc",
          "developer_num",
          "dev_equivalent",
          "dev_value",
          "dev_value_robustness",
          "dev_equivalent_every_developer"
        ]
      },
      "ReportQualityMetricType": {
        "type": "string",
        "description": "\n    ### 质量类：\n\n    * doc_coverage_function_num           有注释覆盖的函数个数\n    * doc_coverage_total_function_num     计算注释覆盖度的总函数个数（包含所有函数）\n    * doc_coverage                        注释覆盖度\n    * static_test_coverage_function_num   有测试覆盖的函数个数\n    * static_test_coverage_total_function_num   计算测试覆盖度的总函数个数（不包含匿名函数和测试函数的函数个数）\n    * static_test_coverage                测试覆盖度\n\n    * issue_blocker_num     阻塞问题数\n    * issue_critical_num    严重问题数\n    * issue_info_num        提醒问题数\n    * issue_major_num       重要问题数\n    * issue_minor_num       次要问题数\n    * issue_num             总代码问题数\n\n    * issue_rate            代码问题比例（代码问题数/函数总数）\n    * severe_issue_rate     重要问题密度: (issue_blocker_count + issue_critical_count) / total_dev_eq\n    * weighted_issue_rate   加权问题数比例：（issue_blocker_num * 1 + issue_critical_num * 0.5 + issue_major_num * 0.1 + issue_minor_num * 0.02 + issue_info_num * 0.004）/ 函数总数\n\n    * function_depend       ~~开发者影响力（只在开发者，团队维度可查询）（已废弃，默认返回0）~~\n    * ccg_snapshot_function_num   分析切面总函数个数\n    * duplicate_function_num      重复函数个数\n    * dryness               代码不重复率\n    * modularity            代码模块度(只在对代码库、项目的质量查询时，且对整个代码库查询时有意义，在包含函数明细的筛选条件时都会返回0，如起始时间过滤)\n    * cyclomatic_total                  全函数圈复杂度之和\n    * cyclomatic_total_every_function   平均每个函数圈复杂度\n    * cyclomatic_total_every_1k_dev_eq  平均每个千当量圈复杂度\n    ",
        "enum": [
          "doc_coverage_function_num",
          "doc_coverage_total_function_num",
          "doc_coverage",
          "static_test_coverage_function_num",
          "static_test_coverage_total_function_num",
          "static_test_coverage",
          "issue_blocker_num",
          "issue_critical_num",
          "issue_info_num",
          "issue_major_num",
          "issue_minor_num",
          "issue_num",
          "issue_rate",
          "severe_issue_rate",
          "weighted_issue_rate",
          "function_depend",
          "ccg_snapshot_function_num",
          "duplicate_function_num",
          "dryness",
          "modularity",
          "cyclomatic_total",
          "cyclomatic_total_every_function",
          "cyclomatic_total_every_1k_dev_eq"
        ]
      },
      "ReportOtherMetricType": {
        "type": "string",
        "description": "\n    ### 其他类\n\n    * techtag   技能tag标签\n    ",
        "enum": [
          "techtag"
        ]
      }
    }
  }
}